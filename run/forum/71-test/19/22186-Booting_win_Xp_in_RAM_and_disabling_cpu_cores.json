{
  "id": "22186",
  "title": "Booting win Xp in RAM and disabling cpu cores",
  "isPinned": false,
  "isFirstTopic": false,
  "isLocked": false,
  "tags": [],
  "forumNotes": [
    {
      "id": "213243",
      "timestamp": "2019-11-13T22:12:30+00:00",
      "author": "Twenty trees",
      "content": "Hi guys  \n\nLast year I had a project of running windows xp in the ram.  \nafter about 50 hours of work and a lot of reading and trying I finally made it.  \nKnow I wonder if you can run xp in the ram and additionally control the amount of cpu cores that are active, via grub4dos.  \nAs example:  \nIn some cases I only need 1 core instead of 4 cores but still need the windows running in the ram. Sometimes I need 2 cores.  \nThe background is, that I overclock at hwbot. org and I would have a good opportunity in having better scores.  \ncould somebody please help me in coding grub4dos for this experiment?  \nThanos   \n"
    },
    {
      "id": "213245",
      "timestamp": "2019-11-14T00:58:34+00:00",
      "author": "dickfitzwell",
      "content": "not saying it cannot be done with xp, but surely it is not a function of grub4dos. lastly, \"we\" have already utilitzed xp in so many ways it was not intended. how much more can we ask of this aged os?\n\n[Available switch options for the Windows XP and the Windows Server 2003 Boot.ini files](http://support.microsoft.com/en-gb/help/833721/available-switch-options-for-the-windows-xp-and-the-windows-server-200 \"External link\")\n\n\u003e /numproc\u003dnumber  \n\u003e This switch sets the number of processors that Windows will run at startup. With this switch, you can force a multiprocessor system to use only the quantity of processors (number) that you specify. This switch can help you troubleshoot performance problems and defective CPUs.\n\u003e\n\u003cbr /\u003e\n\n"
    },
    {
      "id": "213257",
      "timestamp": "2019-11-14T20:12:07+00:00",
      "author": "Twenty trees",
      "content": "Thank you for the answer. But dong it by the boot. Ini was not my question. I know that you can do it this way.  \nThe question was how I can code grub4dos to do so.  \nI know there is a way, I already have seen it, but do not know if I can run both. Ramdisk and core disabling.   \n"
    },
    {
      "id": "213258",
      "timestamp": "2019-11-15T02:02:12+00:00",
      "author": "RoyM",
      "content": "[![Attached File](http://reboot.pro/public/style_extra/mime_types/unknown.gif)](http://reboot.pro/index.php?s\u003dee1f4538ea041f8793001f3011a28ef4\u0026app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d16880 \"Download attachment\") [**multiprocessor.script**](http://reboot.pro/index.php?s\u003dee1f4538ea041f8793001f3011a28ef4\u0026app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d16880 \"Download attachment\") **31.03KB** 244 downloads  \nIf you can read .script.  \nYou may find some answers from attached .script published by Galapo  \nFrom: LiveXP Project\\\\Finish\\\\1 Optimizations\\\\multiprocessor.script  \nLook down around line 230:  \n%MenuAdd_GRUB%,\"title Uniprocessor %ProjectTitle%#$xfind --set-root /I386/SETUPLDR.BIN#$xchainloader /I386/SETUPLDR.BIN\",RemoveDefault  \n%MenuAdd_GRUB%,\"title Multiprocessor %ProjectTitle%\"  \n%MenuAdd_GRUB%,\"find --set-root /I386/MULTICPU.BIN\"  \n%MenuAdd_GRUB%,\"chainloader /I386/MULTICPU.BIN\"  \n\nRegards\n\nRoyM\n\n\u003cbr /\u003e\n\n"
    },
    {
      "id": "213268",
      "timestamp": "2019-11-15T12:30:42+00:00",
      "author": "Wonko the Sane",
      "content": "@Twenty trees\n\nIs it an XP or a PE (liveXP is actually a PE).\n\nIF it is a XP (and not a PE), on which filesystem is the NTLDR and BOOT.INI?\n\nWhat is (EXACTLY) your current menu.lst AND your current BOOT.INI?\n\nBasically (again IF it is aan XP and not a PE) there are three possible approaches:\n\n1) if the filesystem is FAT, replace - on the fly - the file BOOT.INI with a copy with the suitable multiprocessor option\n\n2) otherwise use grub4dos commands to edit (cat --replace) the existing boot.ini\n\n3) otherwise have another copy of NTLDR (with a different name, let\u0027s say N4LDR) hex-edited to load instead of boot.ini another file (let\u0027s say coot.ini) and then load via grub4dos either NTLDR or N4LDR\n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "213289",
      "timestamp": "2019-11-16T17:19:36+00:00",
      "author": "Twenty trees",
      "content": "Hi, thanks for all the posts.  \nI forgot to mention the most important STUFF, Sorry  \n\nI am loading xp out of a vhd.  \nThe file that\u0027s loading is ntldr.  \nI can post the code for grub4dos as soon as I am at home.  \n\nThe code would just need an extention so it starts with 1 or 2 cores.\n\nedit:\n\nI just copied the code from here.\n\nI am running the system via firadesk, but as I can see there should be no difference.\n\ntitle Portable XP32USP1.vhd - WinVBlock FILEDISK - 1.2 GB  \n# Sector-mapped disk  \nfind --set-root --ignore-floppies /XP32USP1.vhd  \nmap /XP32USP1.vhd (hd0)  \nmap --hook  \nroot (hd0,0)  \nchainloader /ntldr  \n\ntitle Portable XP32USP1.vhd - WinVBlock RAMDISK - 1.2 GB  \n# Sector-mapped disk  \nfind --set-root --ignore-floppies /XP32USP1.vhd  \nmap --mem /XP32USP1.vhd (hd0)  \nmap --hook  \nroot (hd0,0)  \nchainloader /ntldr\n\n**Edited by Twenty trees, 16 November 2019 - 05:25 PM.**\n"
    },
    {
      "id": "213290",
      "timestamp": "2019-11-16T18:01:46+00:00",
      "author": "Wonko the Sane",
      "content": "Good :smile:\n\nFrom your last line in menu.lst entries (and the following implied \"boot\" directive):\n\u003e\n\u003e chainloader /ntldr\n\nControl is passed entirely from grub4dos to ntldr.\n\nNTLDR reads BOOT.INI and uses what parameters it finds there to boot the XP.\n\nSo, what you can do is use one of the 3 (three) methods I suggested earlier.\n\nOf those, the \"safer\" (since it doesn\u0027t modify anything on the fly, but least elegant) is #3, the best one (IMHO) is #1 (but is limited to FAT filesystems) and the #2 is the one that is (IMHO) easier and overall \"better\" to implement.\n\nPost your current BOOT.INI and we\u0027ll see the details of the various possible implementations (of #2 but if for any reason you prefer one of the other ones, we can talk about it).\n\nFor the record there is a fourth (easiest) method which is simply that of adding various entries in BOOT.INI with various / options, but I excluded it since you asked for a grub4dos solution.\n\nAnd BTW if you go for this latter solution, you can have coloured entries in BOOT.INI:\n\n[http://reboot.pro/to...ode-in-bootini/](http://reboot.pro/topic/10122-colorful-boot-menu-with-ansi-escape-code-in-bootini/ \"\")\n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\nP.S.: Side note if any of the kids wants to play with me, the parser in NTLDR should ignore any line in BOOT.INI before the \\[boot loader\\] tag, so it should be possible to have the BOOT.INI be also a grub4dos batch.\n\n"
    },
    {
      "id": "213314",
      "timestamp": "2019-11-18T17:13:11+00:00",
      "author": "cdob",
      "content": "\u003e The question was how I can code grub4dos to do so.  \n\u003e I know there is a way, I already have seen it, but do not know if I can run both. Ramdisk and core disabling.\n\n2) otherwise use grub4dos commands to edit (cat --replace) the existing boot.ini  \n.  \n@Twenty trees  \nAdd a default numproc to boot.ini, e.g.\n\n```\n/numproc\u003d4\n```\n\n.  \nAdd a dummy section to boot.ini, create a file size greater 1 KiB.  \nSmall NTFS files are stored at MFT, grub4dos read real files only.  \n\n```\n[SPACE]\n#######################################################################################################\n#######################################################################################################\n#######################################################################################################\n```\n\n```\ntitle Portable XP32USP1.vhd - numproc 2 - 1.2 GB\n# Sector-mapped disk\nfind --set-root --ignore-floppies /XP32USP1.vhd\nmap --mem /XP32USP1.vhd (hd0)\nmap --hook\nroot (hd0,0)\ncat --locate\u003dnumproc\\\u003d4 --replace\u003dnumproc\\\u003d2 /boot.ini\nchainloader /ntldr\n```\n\n.  \nTry --top at a current grub4dos version  \nmap --mem --top /XP32USP1.vhd (hd0)\n\n"
    },
    {
      "id": "213315",
      "timestamp": "2019-11-18T18:06:41+00:00",
      "author": "Wonko the Sane",
      "content": "@cdob\n\nJFYI, the need for padding so that the boot.ini is not embedded in the $MFT depends on the version of grub4dos, starting from \\*some\\* release of 0.4.6a (I just tested 0.4.6.a 2017-08-30) a file in the $MFT record is listed (and parsed edited/etc. just fine)\n\nI believe this is the change (translated from ChangeLog_chenall.txt) where it was introduced:\n\n2015-05-14(yaya)  \nImprove the NTFS file system:  \nFor resident property files (small files), you can write or blocklist to display information.  \nFor non-resident attribute lists, the length limit is removed.\n\nOr has there been some bug in some later version? ![:dubbio:](http://reboot.pro/public/style_emoticons/default/dubbio.gif)\n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "213333",
      "timestamp": "2019-11-19T23:10:20+00:00",
      "author": "cdob",
      "content": "\u003e JFYI, the need for padding so that the boot.ini is not embedded in the $MFT depends on the version of grub4dos\n\u003e\n\u003e 2015-05-14(yaya)\n\u003e\n\u003e Improve the NTFS file system:  \n\u003e For resident property files (small files), you can write or blocklist to display information.\n\n.  \nThanks for the head up. I wasn\u0027t aware of this feature.  \nNo, I don\u0027t know a current bug.   \n\nAs for myself, I would use the \"fourth (easiest) method which is simply that of adding various entries in BOOT.INI with various / options\". It\u0027s a boot chain, select boot mode twice in a chain, not nice. But keep it simple and stupid.\n\nWhat did I configure about 12 years before? At localhost there is a XP RAM file based on 2003 SP2 ramdisk. How did I build this? [https://web.archive....opic\u003d19056\\\u0026st\u003d0](https://web.archive.org/web/20071021065458/http://www.911cd.net/forums//index.php?showtopic\u003d19056\u0026st\u003d0 \"External link\")After 12 years, I remember the general approach, but no details anymore.   \nToday I would use svbus driver instead of firadisk.  \nChallenge; given a 8 GiB physical RAM hardware, get most RAM to runnning XP 32 Bit at RAM disk?   \nLoad the XP RAM disk above 4 GiB address space and boot from it? I\u0027ve no idea, what\u0027s possible noadays.  \n\nEditing boot.ini in RAM disk is a simple approach too. Because this can be verified easily.  \nAt grub4dos add a cat boot.ini and a pause to read the boot.ini file.  \nOr boot XP. open boot.ini at notepad and verify the file.  \n\nI\u0027ve no idea about numproc\u003d1.  \nWindows uses a unicore kernel and hal at a single core CPU.  \nThere are kernel and hal options at boot.ini too.\n\nChanging numproc, kernel and hal may be required at boot.ini.\n\n"
    },
    {
      "id": "213335",
      "timestamp": "2019-11-20T11:11:55+00:00",
      "author": "Wonko the Sane",
      "content": "Yes, I concur that the simplest is always the easiest/foolproof, etc. but adding entries to the BOOT.INI wouldn\u0027t fulfill the \"grub4dos\" part of the original question.\n\nAbout numproc \u003d 1 I believe you are correct :smile:, so we are back to a good ol\u0027 multichoice BOOT.INI, like the one (once) used in Sysprep:\n\n[http://www.vernalex....sprep/hal.shtml](http://www.vernalex.com/guides/sysprep/hal.shtml \"External link\")\n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    }
  ]
}