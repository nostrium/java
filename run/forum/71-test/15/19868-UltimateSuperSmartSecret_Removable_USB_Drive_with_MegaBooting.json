{
  "id": "19868",
  "title": "Ultimate-Super-Smart-Secret \u0027Removable\u0027 USB Drive with Mega-Booting",
  "isPinned": false,
  "isFirstTopic": false,
  "isLocked": false,
  "tags": [],
  "forumNotes": [
    {
      "id": "184945",
      "timestamp": "2014-06-18T02:44:56+00:00",
      "author": "devdevadev",
      "content": "Hello Everyone.......![welcome.gif](http://www.msfn.org/board/public/style_emoticons/default/welcome.gif)\n\nSpecially to ***\u0027All Experts\u0027.................***\n\nFirst tons of thanks to **all Experts** for creating ***\u0027Easy2Boot\u0027, \u0027RMPrepUSB\u0027, \u0027Modified E2B\u0027, \u0027**WinNTSetup3\u0027,*****  \n***\u0027Win8.1UpdateSE x64 boot.wim\u0027, \u0027NUFD FORMAT.exe\u0027, \u0027UEFI MULTI.exe\u0027, \u0027Bootice.exe\u0027 etc........***\n\nI need help of Experts in order to complete this tutorial so please help me by suggesting Step by Step Procedure............\n\n\u003cbr /\u003e\n\nI have a **\u0027Removable USB Drive\u0027** which have a FAT32**\u0027Partition 1\u0027** and a FAT32 Active**\u0027Partition 2\u0027**.\n\nNormally **\u0027Partition 1\u0027** always be **\u0027Visible\u0027** in \u0027Windows OS\u0027 while **\u0027Partition 2\u0027** become**\u0027Invisible\u0027**in\n\n\u0027Windows OS\u0027. We can **install/integrate**a special Windows disk driver**(e.g.cfadisk)**within\n\n**\u0027Win8.1U1SE_x64_boot.wim\u0027**during creation which will trick Windows into treating a\n\n**Removable-media drive****as a Fixed-disk drive.**\n\n\u003cbr /\u003e\n\nThis is the **SpecialConfiguration** exactly what I want for my **\u0027Removable USB Drive\u0027.**  \n\n**- Special Configuration for Removable USB Drive -**  \n______________________________________________________________________\n\n**Partition 1** **-**5 GB **FAT32****-** **Visible** to **Windows OS** **-** will be used only for **DATA Storage Purpose**\n\n**Partition 2 -**9.7 GB **FAT32** type**Active** Partition **-****Invisible** to **Windows OS** but will be **Visible** for running\n\n**\u0027Win8.1U1SE_x64_boot.wim\u0027**due to integration of **\"cfadisk\"** driver.\n\n**\"UEFI_MULTI.exe\"**will be used in order to copy **\u0027Win8.1U1SE_x64 boot.wim\u0027**file to **R******oot****, an several\n\nother **ISO\u0027s** to directory **\\\\** **images**, make the **B**oot files****and**EFI folder** also **Grub4dos mbr and grldr**\n\nand make \u0027**BCD option to boot Grub4dos****(E2B)\u0027**\n\n**+** **Easy2Boot Files**(**.iso , .img , .imgPTN etc** payload files with be placed within **\\\\_ISO\\\\MAINMENU** folder)\n\n+**\u0027** **Win_7/8/8.1_Inst.imgPTNLBAa\u0027**will be placed in**\\\\_ISO\\\\WIN**or **\\\\_ISO\\\\MAINMENU** folder\n\n**+****WinNTSetup 3**(BootIce included in tools folder).\n\n______________________________________________________________________\n\nSo that my **\u0027Removable USB Drive\u0027** boot directly from**\u0027Partition 2\u0027** into **UEFI + BIOS** mode with\n\n**Boot Manager Menu**. Thus **\u0027Win8.1U1SE_x64_boot.wim\u0027**will be booted directly from **\u0027Boot Manager**\u0027 menu entry in both **UEFI** and **BIOS** mode while **\u0027Easy2Boot\u0027** will be booted from **\u0027Grub4dos\u0027** menu entry in **BIOS** /**UEFI** (UEFI if possible).\n\n***Ultimate-Super-Smart-Secret \u0027Removable\u0027 USB Drive*** ***Mega-Booting***should be done in following order-\n\n-------------------------------------------------------------------------------------------------------------------------------\n\n**Boot UEFI + BIOS with \u0027Win8.1UpdateSE x64 boot.wim\u0027 direct from Boot Manager Menu into RAMDISK\nBoot UEFI - F12 - BIOS - Grub4dos - (Easy2Boot) +/ (Win XP/7/8 VHD - Ramdisk)**   \n-------------------------------------------------------------------------------------------------------------------------------  \n\n**Note-** After booting from USB with**\u0027Win8.1U1SE_x64_boot.wim\u0027**, I will use portable App \u0027**WinNTSetup_x64.exe\u0027**to mount **\u0027** **Win_7/8/8.1_Inst.imgPTNLBAa\u0027** **(within from****\\\\_ISO\\\\WIN** folder of**Partition 2)**in **ImDisk** Virtual Drive.\n\n**\u0027WinNTSetup 3\u0027**will prepare local harddisk for Install of Win 7/8/8.1\n\n**Challanges -** Currently**\u0027Win8.1SE\u0027** package does not contains script for adding/integrating**\u0027cfadisk\u0027** driver into**\u0027Win8.1U1SE_x64_boot.wim\u0027**. I request **All related **Experts**(****Specially to \u0027ChrisR\u0027)**for adding a\n\nscript for **\u0027cfadisk\u0027** driver in next release of **\u0027Win8.1SE\u0027** package.\n\n***Is it possible to implement above Configuration in \u0027Removable USB Drive ?***\n\nPlease study above configuration carefully and give your precious suggestions in order to implement above configuration if possible.......\n\n***Regards*** ..\n\n**Edited by devdevadev, 12 July 2014 - 02:13 AM.**\n"
    },
    {
      "id": "184947",
      "timestamp": "2014-06-18T04:17:58+00:00",
      "author": "devdevadev",
      "content": "First lots of honor and regards to**\u0027Wonko\u0027,** **\u0027jaclaz\u0027** and \u0027***HALIKUS\u0027*** for encouraging me.............\n\n\u003cbr /\u003e\n\nI am using **\u0027Easy2Boot\u0027** from a long time which I think is the **Best and Unique MultiBoot solution** for me. Following are the top features which I love in \u0027E2B\u0027-  \n\n**1-** **\u0027Easy2Boot\u0027** is very easy to use because of just **Drag and Drop** of \u0027Payload Files\u0027.  \n**2-** It provide facility of **\u0027Master Password\u0027** for **\u0027E2B Menu\u0027** so that No other person can easily  \neither Boot from my \u0027E2B\u0027 USB Drive or Harm/Corrupt/Copy my \u0027E2B\u0027 files.  \n**3-** I can easily configure **Background, Wallpaper and Menus of \u0027E2B\u0027** according to my interest.  \n**4-** **\u0027Pass-Pass\u0027** is already integrated within \u0027Easy2Boot\u0027 Directory.  \n**5-** \u0027E2B\u0027 allow me to have a **\u00272nd partition\u0027** in order to make a **\u0027secret\u0027** hidden partition and  \nprotects my E2B files. It also provide **\u0027E2B_PTN_SWAP.mnu\u0027** in order to Swap between the  \ntwo Partitions.   \n**6-** **\u0027PTN2_Menu.mnu\u0027** allow me booting of **Payload files** (but not Windows Install ISOs) within  \nfrom **\\\\_ISO folder** of **Other Partitions** or even from, **Other Drives** .   \n\u0027E2B\u0027 also allow to have **more than two Partitions** in both USB Flash and USB HDD drives.  \n**7-** **No limit** to the number of different Linux, Windows Install, WinPE, etc. ISOs or other payload files  \n**8-** I can use a USB Hard disk with two or more partitions and still UEFI boot (even if they are all   \n\u0027NTFS\u0027 Partitions) - no complex GPT partitions neeed.  \n**9-** UEFI booting of Windows Installers and Linux LiveCD payloads via a **Partition image**   \n(and most other UEFI-enabled payloads too, such as KonBoot).  \n**10-** I can use**\u0027Win8.1U1_to_GO.imgPTNLBAa\u0027** as a Payload file within \\\\_ISO\\\\MAINMENU folder  \n**11-** **UEFI** boot to an **NTFS partition** (via Clover + first FAT32 ptn). Aso support   \n**Dual Partition images** -e.g. (**FAT32 + NTFS , NTFS +FAT32** )  \n**12-** I can use**\u0027E2B\u0027** for **UEFI/MBR** Booting of Windows Installers, ERD, MSDart, warezs, DLCD,  \nUBCD, KonBoot_2.4, HitMan Pro, Eset, Antivirus, XP Install to SATA Disk, MemTest86+, MS-DOS,   \nFreeDos, All LinuxLiveCDs, Linux+Persistance, WinBuilder ISOs, WinPE ISOs, HP ISO Utilities,   \n**USB Drive Images** (e.g. YUMI, XBOOT, WinSetupFromUSB, SARDU, Rufus), and many 100\u0027s more..  \n**13-** And most important thing for me is that \u0027Easy2Boot\u0027 is developed by **\u0027Steve Si\u0027** who is a very   \n**\u0027Cool and Supportive\u0027** person. He always provide update and improvement on regular basis.  \nHe also added lots of feature and improvement for me in various versions of \u0027Easy2Boot\u0027.   \n\nI am using \u0027Easy2Boot\u0027 from one year and I do not prefer any other Multi-boot tool except it because it fulfill my all requirements. Easy2Boot is the Best, Unique and Universal Multiboot tool which I have used ever. **But I always have to change BIOS settings (UEFI mode to BIOS/MBR/CSM mode and Disable Secure Boot) two times (Before and After Windows Installation)** in order to boot \u0027Easy2Boot\u0027 and load \u0027E2B Menu\u0027 in UEFI based PC which I never want to do. E2B also cannot UEFI boot via System Firmware for Dual Partitioned Removable UFDs.  \n\nActually following is the para which force me to use \u0027UFD_FORMAT\u0027 and \u0027UEFI_MULTI\u0027  \n\n**\" Win8.1SE x64 boot.wim of size 400 MB is Universal WIM Boot Image file for booting BIOS and UEFI PCs. After booting from USB with x64 boot.wim you can use portable App WinNTSetup_x64.exe to mount XP/7/8 Setup ISO in ImDisk Virtual Drive. WinNTSetup3 will prepare local harddisk for Install of XP/7/8 \"**   \n\nIn fact, \u0027UFD_FORMAT\u0027 and \u0027UEFI_MULTI\u0027 are very good tool but both of them does not fulfill my needs. .i.e  \n\u0027UFD_FORMAT\u0027 does not provide \u0027Partition size\u0027 option in order to create a desired size \u0027Partition 1\u0027 and \u0027Partition 2\u0027 while RMPrepUSB allow us to create a desired size \u0027Partition 1\u0027 by \u0027Partition Size\u0027 option. \u0027UEFI_MULTI\u0027 also does not fully satisfy me because it does not allow me to put \u0027VHD\u0027 files in the Boot Partition instead of System Partition. It also does not allow me to boot \u0027WIM\u0027 files through Grub4dos \u0027menu.lst\u0027. It\u0027s why now I have to adopt **\u0027BCD Store editing\u0027** in order to **modify \u0027BIOS BCD\u0027, \u0027UEFI BCD\u0027, \u0027bootmgr\u0027 and \u0027bootmgr.efi\u0027** so that I can put all my Boot Files **(except EFI folder and bootmgr.efi )** and Payload files (ISO, .imgPTN, WIM, VHD etc.) into my**Hidden Boot Partition** in order to **BIOS+UEFI** booting. Finally yesterday night I found **\u0027GUI DISM.exe\u0027** which allow me to add/integrate/inject Drivers (**Firadisk , cfadisk/diskmod** etc.) into WIM files so that I can access my both Partitions (Data Partition and E2B Parition) of Removable USB Drive within from running**\u0027Win8.1SE_x64_boot.wim\u0027** .  \n\nAFAIK,**\u0027WinNTSetup v3.6.1\u0027** is the best and unique tool which allow us to install Windows OS into both Internal Hard-disk and External USB Drives of both MBR-BIOS and **GPT-UEFI** Partition schemes without converting Partition Scheme GPT to MBR. It\u0027s why I want to use **\u0027WinNTSetup v3.6.1\u0027** within from running **\u0027Win8.1SE_x64_boot.wim\u0027** in order to install WINDOWS OS (Specially**install.esd** ) into MBR/GPT Partitioned Hard disk drives.  \n\nSo overall these are the reason WHY a \"normal\" Easy2boot setup does not work for me, and/or WHY a \"normal\" UEFI MULTI setup does not work for me and for my goal. So finally I decide to use both**\u0027Easy2Boot v1.50\u0027** and **\u0027BOOTICE/BCD Editing\u0027**in order to fulfill my Goal.  \n\nRegards..............\n\n"
    },
    {
      "id": "184951",
      "timestamp": "2014-06-18T10:04:42+00:00",
      "author": "alacran",
      "content": "You have done same question in other tread, there is no need to open a new one.\n\nI just answer it: [http://reboot.pro/to...fd/#entry184950](http://reboot.pro/topic/19864-boot-uefi-win81updatese-x64-bootwim-bios-grub4dos-easy2boot-from-hidden-partition-of-dual-partition-removable-ufd/#entry184950 \"\")\n\nRegards\n\n"
    },
    {
      "id": "184967",
      "timestamp": "2014-06-19T16:44:38+00:00",
      "author": "devdevadev",
      "content": "This is my current **\u0027E2B Main Menu Screen\u0027**  \n\n***[MY E2B MENU SCREEN](http://files.easy2boot.com/200000109-3b3843c319-public/KRISHNA-%20 \"External link\")***\n\n**Edited by devdevadev, 14 October 2018 - 03:44 PM.**\n"
    },
    {
      "id": "184978",
      "timestamp": "2014-06-21T11:53:38+00:00",
      "author": "devdevadev",
      "content": "Today I have injected filter driver \u0027cfadisk\u0027 into \u0027Win8.1SE_x64_boot.wim\u0027, \u0027boot.wim\u0027 and \u0027WIMBoot.vhdx\u0027.\n\nNow I can boot \u0027Win8.1U1 Installer\u0027, \u0027W2G+WIMBoot+VHDX\u0027 and \u0027Win8.1SE_x64_boot.wim\u0027 within from hidden \u0027ptn3\u0027 through modified  \nBOOTMGR -\\\u003e BCD in \u0027ptn2\u0027 .\n\ni.e.\n\nBIOS -\\\u003e MBR -\\\u003e ptn2:\\\\grldr -\\\u003e E2B -\\\u003e ptn2:\\\\_ISO\\\\MAINMENU\\\\Boot Manager.mnu -\\\u003e ptn2:\\\\(bootmgr, bootmgr1, bootmgr2) -\\\u003e\n\n-\\\u003e ptn2:\\\\(bcd,bc1,bc2) -\\\u003e ptn3:\\\\(W2G+WIMBoot+VHDX, Win8.1U1SE_x64_boot.wim, Win8.1U1 Installer)\n\nRegards.....\n\n**Edited by devdevadev, 22 July 2014 - 10:50 AM.**   \nReplaced complete post #5 on author\u0027s request\n"
    },
    {
      "id": "185586",
      "timestamp": "2014-07-10T10:43:48+00:00",
      "author": "devdevadev",
      "content": "***Greeting of the Day.....***\n\nRelated discussions links are here\n\n[http://reboot.pro/to...-removable-ufd/](http://reboot.pro/topic/19864-boot-uefi-win81updatese-x64-bootwim-bios-grub4dos-easy2boot-from-hidden-partition-of-dual-partition-removable-ufd/ \"\")\n\n[http://reboot.pro/to...efi-boot-files/](http://reboot.pro/topic/19881-uefi-booting-of-partition-2-win81-x64wim-via-fat32-active-partition-1-efi-boot-files/ \"\")\n\n[http://reboot.pro/to...ul-combination/](http://reboot.pro/topic/19903-wtg-wimboot-vhdx-powerful-combination/ \"\")\n\n***T*** ***housands of Thanks and Regards*** to ![:worship:](https://reboot.pro/public/style_emoticons/default/worship.gif) ***Steve******, ktp, alacran, cdob, misty, wimb, JFX, HALIKUS, Nuno Brito Wonko etc........***\n\n![:cheers:](https://reboot.pro/public/style_emoticons/default/cheers.gif)\n\n**Edited by devdevadev, 12 July 2014 - 01:59 AM.**\n"
    },
    {
      "id": "185617",
      "timestamp": "2014-07-10T23:12:51+00:00",
      "author": "alacran",
      "content": "FAT32 maximum file size is 4 GB.\n\nRegards\n\n"
    },
    {
      "id": "185622",
      "timestamp": "2014-07-11T00:26:11+00:00",
      "author": "devdevadev",
      "content": "\u003e FAT32 maximum file size is 4 GB.\n\u003e\n\u003e Regards\n\nHi **alacran**\n\nIn Partition 2, there is no file greater than 4 GB. All my Windows ISO are of ESD types. and \u0027Win8.1ToGO\u0027 is also WIMBoot types so there is no change to exceed 4 GB limit. Actually there is no problem of 4 GB limit because Steve provide us a very powerful format which is \u0027.imgPTN\u0027. I can create NTFS.imgPTN of greater than 4 GB if needed. But due to lack of storage , I always prefer ESD types Win_AIO_**[x86](http://kickass.to/windows-8-1-24in1-aio-x32-bit-english-us-pre-activated-dart-8-1-updated-june-25-2014-v2-t9310657.html \"External link\")_[x64](http://kickass.to/windows-8-1-24in1-aio-x64-bit-english-us-pre-activated-dart-8-1-updated-june-25-2014-v2-t9314083.html \"External link\")** _ESD.imgPTN partition images. When we select a .imgPTN payload file from the E2B menu, then it first backup MBR and then update the USB MBR to a single NTFS Partition. So 4GB limit never panic me. And In case of UEFI , I will first boot to any WinPE/WinToGO and then mount Win_AIO_**++x86_UEFI Boot++**_ESD.imgPTN with the help of Imdisk and then use \u0027WinNTSetup v.3,6.1\u0027 in order to apply \u0027install.wim\u0027/\u0027install.esd\u0027 of size greater than 4GB.\n\nAcutally UEFI 4GB limit is not a Big problem because of **Steve \u0027Method 1/4\u0027** for removable USB Drive. And **\u0027Method 1/2/3\u0027** for fixed USB Drive.\n\n[http://www.easy2boot...er-flash-drive/](http://www.easy2boot.com/add-payload-files/adding-windows-install-isos-without-needing-a-helper-flash-drive/ \"External link\")\n\nRegards.\n\n**Edited by devdevadev, 12 July 2014 - 12:47 AM.**\n"
    },
    {
      "id": "185654",
      "timestamp": "2014-07-11T14:43:30+00:00",
      "author": "cdob",
      "content": "\u003e Partition 2- FAT32 - Set Active - 25 GB - Invisible to Window - This Partition will contain Win8.1ToGO  \n\u003e\n\u003e K:\\\\WIMBoot.wim  \n\u003e K:\\\\Win8.1ToGO.vhdx  \n\u003e K:\\\\Bootmgr (For direct booting of \u0027 Win8.1ToGO + WIMBoot + VHDX\u0027 combo within from E2B Menu )  \n\u003e K:\\\\Boot\\\\BCD (relocated to \"Win8.1ToGO + WIMBoot + VHDX\" combination and boot.sdi)\nI wonder:  \nHow do you mount the vhdx file at the FAT32 partition?  \nDo you use windows native drivers?  \nDo you use a third party driver? Does they work in conjunction with WIMBoot?  \n\n\u003cbr /\u003e\n\nAnother approach:  \nInstead of several K:\\\\Boot\\\\BC? files, you may create one K:\\\\Boot\\\\BCD. Include all bcd settings to this file.  \nOf course, it\u0027s your choice to use several bc? files instead.   \n"
    },
    {
      "id": "185676",
      "timestamp": "2014-07-12T01:18:57+00:00",
      "author": "devdevadev",
      "content": "***Hello Everyone........***  \n**[http://www.msfn.org/board/topic/158279-boot-os-from-vhd-in-fat32-drive-can-it-be-done/](http://www.msfn.org/board/topic/158279-boot-os-from-vhd-in-fat32-drive-can-it-be-done/ \"External link\")**  \n\u003e BUT you can still fake ![woot.gif](http://www.msfn.org/board/public/style_emoticons/default/woot.gif) that a \"flat\" .vhd is actually a RAW image with a single sector appended to it (which actually is ![newwink.gif](http://www.msfn.org/board/public/style_emoticons/default/newwink.gif)) and use grub4dos + Firadisk or Winvblock to mount it , it won\u0027t be \"native\" booting anymore, but still it will be booting from .vhd residing on \\*any\\* filesystem.  \n\u003e \u003chttp://reboot.pro/15407/\u003e  \n\u003e \u003chttp://reboot.pro/15997/\u003e  \n\u003e \u003chttp://reboot.pro/16178/\u003e  \n\u003e\n\u003e jaclaz\n\nWhich would be the best and reliable method in order to mount the **vhdx** file at the **FAT32** partition with **\u0027native\u0027 BOOTMGR booting** along with **WIMBoot support** ?\n\nWill I have to use \u0027vBOOT\u0027 ? Can anybody suggest me a better method for it ?\n\n***@cdob***\n\n\u003e Another approach:  \n\u003e Instead of several K:\\\\Boot\\\\BC? files, you may create one K:\\\\Boot\\\\BCD. Include all bcd settings to this file.  \n\u003e Of course, it\u0027s your choice to use several bc? files instead.\n\nHello Sir,\n\nI know this approach but I don\u0027t want to press**\u0027Enter\u0027** button twice. It\u0027s why I have to use individual BOOTMGRs and BCDs for WIM, VHD, WTG. :smile:\n\n***Regards....***.\n\n"
    },
    {
      "id": "185679",
      "timestamp": "2014-07-12T06:53:49+00:00",
      "author": "cdob",
      "content": "\u003e Which would be the best and reliable method in order to mount the vhdx file at the FAT32 partition with \u0027native\u0027 BOOTMGR booting along with WIMBoot support ?\n\nTo emphasize this: How to boot this at UEFI secure boot?  \n\nWhat about a (additional) NTFS partition?   \n"
    },
    {
      "id": "185682",
      "timestamp": "2014-07-12T11:40:39+00:00",
      "author": "devdevadev",
      "content": "\u003e To emphasize this: How to boot this at UEFI secure boot?\n\nWhy you say this ?\n\nWill above Configuration not provide UEFI secure boot ?\n\nWhat precautions I have to follow in order to \u0027UEFI\u0027 secure boot ?\n\n\u003e What about a (additional) NTFS partition?\n\nI will have to add a 3rd **NTFS** partition if I become fail to mount the **vhdx** file at the **FAT32** partition with **\u0027native\u0027 BOOTMGR booting** along with **WIMBoot support** ?\n\n***Regards.....***\n\n"
    },
    {
      "id": "185683",
      "timestamp": "2014-07-12T12:27:03+00:00",
      "author": "Wonko the Sane",
      "content": "Is a .vhd the same as a .vhd**x** ? ![:w00t:](https://reboot.pro/public/style_emoticons/default/w00t.gif)\n\nHInt:\n\nRead ATTENTIVELY the second post in the first reference you cited:\n\n[http://reboot.pro/to...b4dos/?p\u003d137456](http://reboot.pro/topic/15407-booting-from-vhd-in-grub4dos/?p\u003d137456 \"\")\n\nhad you READ the references you have cited, you might have understood this point:\n\n* a .vhd is a RAW image with a single sector appended\n* a .vhd**x** is a COMPLETELY DIFFERENT thing and has a specific format including a header: [http://www.microsoft...s.aspx?id\u003d34750](http://www.microsoft.com/en-us/download/details.aspx?id\u003d34750 \"External link\")\n\nSomething that works on a .vhd BY COINCIDENCE because it was designed for working with RAW images and a \"static/flat\" .vhd is a RAW image with a sector appended (that is ignored) WILL NEVER work on a .vhdx.\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "185685",
      "timestamp": "2014-07-12T13:22:20+00:00",
      "author": "devdevadev",
      "content": "Hello Everyone.....  \nFollowing will be the content of the ***\u0027 USB Partitions\u0027*** .\n\n**Partition 1 -** FAT32 - 5 GB - Visible to Windows - This Partition will be use only for**\u0027Data Storage\u0027** and contain bare minimum **\u0027EFI Files\u0027** hidden by **attrib** commands.\n\n**S:** \\\\EFI\\\\Boot\\\\bootia32.efi - x86 hardware / firmware\n\n**S:** \\\\EFI\\\\Boot\\\\bootx64.efi (bootmgfw.efi) - amd64 hardware / firmware\n\n**S:** \\\\EFI\\\\Microsoft\\\\Boot\\\\BCD - Relocated to **boot.sdi,****Win8.1U1SE_x64_boot.wim**\n\n**S:** \\\\EFI\\\\Microsoft\\\\Boot\\\\Fonts\\\\wgl4_boot.ttf - Recommended\n\n**Partition 2-** NTFS - Set **Active** - 25 GB - Invisible to Window - This Partition will contain **\u0027Win8.1U1SE_x64_boot.wim\u0027** ,\n\n**\u0027****Win8.1U1_x86-install-WIM_x64-boot.WIM_Installer_WTG+WIMBoot+VHDX** **.imgPTN\u0027** , **\u0027Easy2Boot\u0027** files and\n\nmany more **Payload Files** (ISOs, IMGs, .imgPTN etc......) hidden by **attrib** commands.\n\n**K:\\\\Bootmgr** (For direct booting of **\u0027Win8.1U1SE_x64_boot.wim\u0027** within from **E2B** Menu **)**\n\n**K:\\\\Boot\\\\BCD** (Relocated to **Win8.1U1SE_x64_boot.wim** and **boot.sdi** )\n\n**K:\\\\Boot\\\\boot.sdi**\n\n**K:\\\\grldr**\n\n**K:\\\\menu.lst**   \n**K:\\\\my.usb**\n\n**K:\\\\_ISO\\\\MAINMENU\\\\** **Win8.1U1SE_x64_boot.wim**\n\n**K:\\\\_ISO\\\\MAINMENU\\\\** **Win8.1U1SE_x64_boot.mnu**\n\n**K:\\\\_ISO\\\\MAINMENU\\\\** **Win8.1U1_x86-install-WIM_x64-boot.WIM_Installer_** **WTG+WIMBoot+VHDX** **.imgPTN**\n\n**K:\\\\_ISO\\\\WIN\\\\** **WIN 7 Ultimate.imgPTN**   \nK:\\\\_ISO\\\\MAINMENU\\\\**Ultimate DLCD Boot 2014 v2-1.imgPTN**  \nK:\\\\_ISO\\\\MAINMENU\\\\**Spotmau BootSuite 2012.imgPTN**  \nK:\\\\_ISO\\\\MAINMENU\\\\**Easy Rescue Suite 2014.imgPTN**  \nK:\\\\_ISO\\\\MAINMENU\\\\**KonBoot_24.imgPTN**  \nK:\\\\_ISO\\\\MAINMENU\\\\**E2B_PTN_SWAP.mnu**  \n**K:\\\\** **Smart Apps** **\\\\** **WinNTSetup 3.6.1** **(BootIce included in tools folder).**\n\nK:\\\\autorun.inf  \nK:\\\\autounattend.xml  \nK:\\\\e2b.ico  \nK:\\\\FASTLOAD.YES  \nK:\\\\HitmanPro.exe  \nK:\\\\HitmanPro_x64.exe  \nK:\\\\Kickstarter.exe  \nK:\\\\PassPass.bak  \nK:\\\\Readme.txt  \nK:\\\\unattend.xml  \n\n**Note** -\n\n**1-** In**K:\\\\_ISO\\\\MAINMENU\\\\** **Win8.1U1SE_x64_boot.mnu** **,** I will put following entries in order to directly boot **Win8.1U1SE_x64_boot.wim** within from **Easy2Boot** Menu in **BIOS/MBR** mode.\n\n---------------------------------------------\n\ntitle **Win8.1U1SE_x64_boot_WIM**\n\nchainloader /bootmgr\n\n---------------------------------------------\n\n**2- \u0027****Win8.1U1_x86-install-WIM_x64-boot.WIM_Installer_** **WTG+WIMBoot+VHDX.imgPTN\u0027**will contains following files -\n\n**BOOTNXT**\n\n**WIMBoot.vhdx**(Contains Installation files of WIMBoot pointed to **sources\\\\install.wim** )\n\n**bootmgr** (Taken from x64 \u0027Win 8.1 U1\u0027 for BIOS/MBR Boot Manager)\n\n**bootmgr.efi** (Taken from x64 \u0027Win 8.1 U1\u0027 for UEFI Boot Manager)\n\n**boot\\\\bcd** (Pointed to **boot.wim (x64), boot.sdi and WIMBoot.vhdx**)\n\n**boot\\\\boot.sdi** (Taken from x64 \u0027Win 8.1 U1\u0027)\n\n**efi\\\\boot\\\\bootx64.efi** (Taken from x64 \u0027Win 8.1 U1\u0027)\n\n**efi\\\\microsoft\\\\boot\\\\bcd** (Pointed to **boot.wim (x64), boot.sdi and WIMBoot.vhdx**)\n\n**sources\\\\install.wim** **(Taken from x86 \u0027Win 8.1 U1\u0027)**\n\n**sources\\\\boot.wim** (Taken from x64 \u0027Win 8.1 U1\u0027)\n\n**sources\\\\lang.ini**\n\n**e2b\\\\CSM.bmg**\n\n**e2b\\\\menusetting**\n\n**e2b\\\\RestoreCSM (run as admin)**\n\n**e2b\\\\RestoreE2B (run as admin)**\n\n**e2b\\\\unifont.hex**\n\n**autorun.ico**\n\n**autorun.inf**\n\n**grldr**\n\n**menu.lst**\n\n**RestoreE2B.exe**\n\n**1- BIOS-** I will use BCD edit function inside **Bootice\\\\BCDEdit** to edit S:\\\\Boot\\\\**BCD** for creating boot entries for\n\n**\u0027Win8.1U1SE_x64_boot.wim\u0027**in**BIOS** mode (winload.exe to be put as loader).\n\n**2- UEFI-** I will use BCD edit function inside **Bootice\\\\BCDEdit** to edit S:\\\\efi\\\\Microsoft\\\\Boot\\\\**BCD** for creating boot entries for\n\n**\u0027Win8.1U1SE_x64_boot.wim\u0027**in **UEFI**mode (winload.efi to be put as loader).\n\n**BIOS mode:** **1-** BIOS -\\\u003e MBR -\\\u003e grubdos -\\\u003e grldr/menu.lst -\\\u003e **Easy2Boot Menu**   \n**2-** BIOS -\\\u003e MBR -\\\u003e grubdos -\\\u003e grldr/menu.lst -\\\u003e bootmgr -\\\u003e s:\\\\boot\\\\**BCD -\\\u003e Win8.1U1SE_x64_boot.wim**\n\n**UEFI mode:**UEFI-\\\u003e /efi/bootmgfw.efi -\\\u003e winload.efi -\\\u003e S:\\\\efi\\\\Microsoft\\\\Boot\\\\**BCD -\\\u003e** **Win8.1U1SE_x64_boot.wim**\n\n**Note -**After booting from \u0027**Win8.1U1_x86-install-WIM_x64-boot.WIM_Installer_WTG+WIMBoot+VHDX****.imgPTN\u0027**  \nor **\u0027Win8.1U1SE_x64_boot.wim\u0027** in **BIOS/** **UEFI**mode. I will use portable App \u0027**WinNTSetup 3.6.1_x64.exe\u0027**in order to mount \u0027**Win8.1U1_x86-install-WIM_x64-boot.WIM_Installer_WTG+WIMBoot+VHDX** **.imgPTN\u0027** **(within from**  \n**\\\\_ISO\\\\MAINMENU**folder of**Partition 2)** in **ImDisk** Virtual Drive. **\u0027WinNTSetup 3\u0027**will prepare local hard-disk for  \nInstalling **Win** 7/8/**8.1** .\n\n**Please reply me if above procedure also work for you...............**\n\n***Please provide me your precious suggestions in order to improve above configuration......***  \n\n**Thousands of Thanks and Regard*s*** to ![:worship:](https://reboot.pro/public/style_emoticons/default/worship.gif) ***Steve*** ***, ktp, alacran, cdob, misty, wimb, JFX, HALIKUS, Murphy 78, Wonko etc........***\n\n***Regards...***\n\n![:cheers:](https://reboot.pro/public/style_emoticons/default/cheers.gif)\n\n"
    },
    {
      "id": "185696",
      "timestamp": "2014-07-12T15:07:43+00:00",
      "author": "Wonko the Sane",
      "content": "Who knows?\n\nAGAIN, a .vhd is NOT a .vhdx, they use DIFFERENT FORMATS. \\\u003c- is this so difficult? ![:unsure:](https://reboot.pro/public/style_emoticons/default/unsure.png)\n\nThere is Native .vhd booting in some editions of Windows 7.\n\nThere is Native .vhd AND .vhdx booting in Windows 8 and similar.\n\nBOTH have seemingly the requisite of the filesystem on which they are mounted to be NTFS.\n\nIf you read, this time ATTENTIVELY the thread you linked to:\n\n[http://www.msfn.org/...can-it-be-done/](http://www.msfn.org/board/topic/158279-boot-os-from-vhd-in-fat32-drive-can-it-be-done/ \"External link\")\n\nyou will get to here:\n\n[http://blogs.technet...-explained.aspx](http://blogs.technet.com/b/ranjanajain/archive/2010/03/23/virtual-hard-disk-vhd-architecture-explained.aspx \"External link\")\n\nAs always, DO NOT trust any info, but rather TRY yourself.\n\nSee (please, please READ it):\n\n[http://technet.micro...y/hh825689.aspx](http://technet.microsoft.com/en-us/library/hh825689.aspx \"External link\")\n\nCreate a \"Native\" booting .vhd or .vhdx (depending on the OS used) on a NTFS volume, try booting from it, then repeat but from a FAT32 (of course the image needs to be smaller than 4 Gb).\n\nDoes it still work? ![:frusty:](https://reboot.pro/public/style_emoticons/default/frusty.gif)\n\nIf yes, the mentioned reference is incorrect, if no, then it is correct.\n\nThe non-native .vhd boot in the reference you provided (as I tried vainly ![:frusty:](https://reboot.pro/public/style_emoticons/default/frusty.gif) to explain you) is NOT a .vhd boot, but rather a RAW image boot, and it DOES apply to \"static\" .vhd ONLY AND NOT to any other type of .vhd AND NOT to .vhdx of ANY type.\n\nA .vhd booted through grub4dos and Firadisk or Winvblock (i.e. a RAW image boot) can be on a FAT32 fine, but of course since grub4dos does not support UEFI, you need BIOS or CSM.\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "186023",
      "timestamp": "2014-07-22T09:51:23+00:00",
      "author": "devdevadev",
      "content": "**@ Steve....**  \n\n1- Create two Primary Partition in your \u0027**Removable USB Drive\u0027** with the help of **BOOTICE** . **\u0027PTN 2\u0027** should be **NTFS** and\n\ngreater than**25 GB**. (25 GB is **minimum** size for 32-bit \u0027WTG\u0027, You should use greater for smooth operations).\n\n**PTN1 - FAT32 - 5 GB or above - DATA**\n\n**PTN2 - NTFS - 25 GB or above - E2B**\n\n2- Make **NTFS \u0027E2B\u0027 PTN** accessible to Windows with the help of **BOOTICE** and extract **E2B** files to **NTFS \u0027E2B\u0027 PTN**\n\nand make USB drive Bootable by installing**\u0027Grub4dos\u0027** to **MBR** with the help of **RMPrepUSB**.\n\n3- Drag and Drong **\u0027Win8.1U1_x86.iso\u0027** to **\u0027MakePartImage\u0027** desktop shortcut of **\u0027MPI_v041\u0027** in order to create an\n\n**NTFS** formatted **\u0027Win81U1_x86.imgPTN\u0027** of approx. **20 GB** or **Above****.**And then put **\u0027Win81U1_x86.imgPTN\u0027** file\n\ninto **\\\\_ISO\\\\MAINMENU** directory of **NTFS \u0027E2B\u0027 PTN** .\n\n4- Now make **FAT32 \u0027DATA\u0027 PTN** accessible to Windows again using **BOOTICE**. Boot from the your USB Drive and\n\nselect **\u0027Win81U1_x86.imgPTN\u0027** payload file and switch to **CSM**mode.\n\n5- Now **Reboot** to Main Windows OS and open File Explorer and note **Drive Letter** of your Removable USB Drive\n\n(Suppose it is **K:**)\n\n**6- Now Delete****(or move to any safe place )****following folders and files within from USB Drive*****(Very Important )*** **-**  \n**K:\\\\boot**  \n**K:\\\\efi**  \n**K:\\\\bootmgr**  \n**K:\\\\bootmgr.efi**  \n**K:\\\\support**\n\n7- Now open **\u0027WinNTSetup v.3.7.5\u0027** and create **dynamically expanding \u0027WTG.vhdx\u0027** of approx. **15 GB or greater**\n\nwithin any Partition of your **Local Hard Disk** (assume Root of **C: Drive** ). **\u0027WTG\u0027** Partition will be automatically mounted\n\nas **Z: Drive**. Now we will start Installation.  \n8- First browse **\u0027install.wim\u0027** file within from your USB Drive **K:\\\\sources\\\\install.wim**as Source. Then Select USB\n\nDrive **K:** as **Boot Drive** and **\u0027WTG\u0027** Partition **Z:** as **Installation Drive**   \n9- Check \" **Windows Image File Boot (WIMBoot) \"** option *(Can Ignore if USB Drive is not Ultra Fast)* .  \n10- Press **\u0027Setup\u0027** button and click **\u0027OK/Yes\u0027** to start Installation process.  \n11- After completing Installation Boot from your USB Drive ( **K:) 3 times** (whenever system restart) until you\n\nBoot to Desktop of **\u0027Win 8.1U1 to GO\u0027** .\n\n12- Reboot and Boot from your Internal Hard disk Partition (**C: Drive)** . Now copy **\u0027C:\\\\WTG.vhdx\u0027** file from **C:\\\\ Drive** to\n\nthe **Root** of your **USB Drive (K:WTG.vhd)**   \n13- Run **Command Prompt** (CMD) as **Admin** and type **attrib -h -r -s /s /d K:\\\\\\*.\\***  \n14- Now open **Bootice/BCDEdit** and browse **BCD** within from your USB Drive **K:\\\\boot\\\\BCD**   \n15- Press **\u0027Easy Mode\u0027** button and then you will find a BCD entry named **\u0027Windows 8.1\u0027.**  \n16- Under **\\[Boot Device\\] -\\\u003e\\\u003e Disk** : category choose **\u0027BOOT (WIM)/LOCATE(VHD)\u0027**option. ***(Very Important)***\n\n17- You can also rename OS title from **\u0027Windows 8.1\u0027** to **\u0027Win 8.1U1 to GO\u0027** according to your Choice.\n\n18- Now click **\u0027Save current system\u0027** and then Click **\u0027Save Globals\u0027**button.\n\n*++**Optional-**++* If you also want to add**\u0027Windows Installer\u0027** along with***\u0027WTG + WIMBoot + VHDX\u0027***setup , then you can\n\ncopy **\\\\boot\\\\boot.sdi** file within from**\u0027Win8.1U1_x86.iso\u0027** to the **K:\\\\boot\\\\** directory of you USB Drive. And\n\nthen add a BCD Entry **(Windows Installer)** pointed to both **K:\\\\source\\\\boot.wim** and **K:\\\\boot\\\\boot.sdi**.\n\nAnd then click **\u0027Save current system\u0027** and then Click **\u0027Save Globals\u0027**button again....\n\n19- Now move **\u0027WTG.vhdx\u0027** within from root of **C: Drive** to any other folder where you like for future use.\n\n(Can also Delete)  \n20- Now Boot from your **USB Drive (K:)** and choose **\u0027Win 8.1U1 to GO\u0027** option from**Boot Manager Menu**.  \n21- If you successfully Boot to Desktop of**\u0027Win 8.1 U1\u0027** then reboot again to Internal Hard disk.  \n22- And Install **\u0027Grub4dos\u0027** to **MBR** of your **USB Drive (K:)** with the help of**\u0027RMPrepUSB\u0027.**   \n23- Now Boot from your USB Drive to **CSM Menu** and then Press **\u0027Enter\u0027** Button.  \n24- Choose **\u0027Win 8.1U1 to GO\u0027** option from **Boot Manager Menu** and test it once again.  \n25- If it successfully boot to**\u0027Win 8.1U1 to GO\u0027** then you can switch from **CSM Menu** to **E2B Menu** as usual.\n\n26- Now it\u0027s......**DONE**.  \n\n**Note-** Use 32-Bit **\u0027Win8.1U1\u0027** if possible otherwise you may have to increase size of **.imgPTN** and**VHDX.** The size of my install.wim\u0027 was only 1.6 GB. It\u0027s why I create a smallest VHDX of size 1050 MB. So size of .imgPTN file was only 3.2GB. You can make some experiments with the SIZE of your \u0027WTG.vhdx\u0027 so that it can just contains **\u0027Pointer Files\u0027.**\n\nCheers.... ![:cheers:](https://reboot.pro/public/style_emoticons/default/cheers.gif)\n\n"
    },
    {
      "id": "186024",
      "timestamp": "2014-07-22T09:59:31+00:00",
      "author": "devdevadev",
      "content": "AFAIK, UEFI can boot from hidden fat32 \u0027ptn2\u0027. It\u0027s why I will keep EFI directory in both fat32 \u0027ptn1\u0027 and fat32 \u0027ptn2\u0027 . HALIKUS says that PE (boot.wim) only sees the NTFS partition as it\u0027s Set Active. But in my case I will inject \u0027Filter driver\u0027 within PE (boot.wim and Win8.1U1SE_x64_boot.wim) and VHDX (WIMBoot.vhdx) so that it will see non-active NTFS \u0027ptn3\u0027 in UEFI mode. In case of BIOS/MBR/CSM mode I had tested that PE (boot.wim and Win8.1U1SE_x64_boot.wim) and VHDX (WIMBoot.vhdx) sees non-active NTFS \u0027ptn3\u0027 without any problem .  \n\n**Will \u0027WinPE\u0027(inject with filter drive) see non-active NTFS \u0027ptn3\u0027 in UEFI mode or not ?**  \n\nFollowing is my expected UEFI configuration for my \u0027Removable\u0027 USB Drive.  \n\n**Partition 1-** FAT32 - will contains only EFI directory  \n\nptn1:\\\\EFI Directory  \nptn1:\\\\EFI\\\\Boot\\\\bootia32.efi - x86 hardware / firmware  \nptn1:\\\\EFI\\\\Boot\\\\bootx64.efi (bootmgfw.efi) - amd64 hardware / firmware  \nptn1:\\\\EFI\\\\Microsoft\\\\Boot\\\\BCD - (Relocated to PTN3 \u0027boot.wim and boot.sdi\u0027, \u0027WIMBoot.vhdx\u0027 ,  \n\u0027Win8.1SE_x64_boot.wim and boot.sdi\u0027 )  \n\n**Partition 2-** FAT32 - Active - Hidden  \n\nptn2:\\\\EFI Directory  \nptn2:\\\\EFI\\\\Boot\\\\bootia32.efi - x86 hardware / firmware  \nptn2:\\\\EFI\\\\Boot\\\\bootx64.efi (bootmgfw.efi) - amd64 hardware / firmware  \nptn2:\\\\EFI\\\\Microsoft\\\\Boot\\\\BCD - (Relocated to PTN3 \u0027boot.wim and boot.sdi\u0027, \u0027WIMBoot.vhdx\u0027 ,  \n\u0027Win8.1SE_x64_boot.wim and boot.sdi\u0027 )  \n\n**Partition 3 -** NTFS - hidden  \n\nptn3:\\\\boot\\\\boot.sdi  \nptn3:\\\\sources\\\\Win8.1U1SE_x64_boot.wim (Injected with \u0027cfadisk\u0027 drive and taken form 64-bit \u0027Win8.1SE.iso\u0027)  \nptn3:\\\\sources\\\\boot.wim (Injected with \u0027cfadisk\u0027 drive and taken form 64-bit \u0027Win 8.1 U1\u0027)  \nptn3:\\\\sources\\\\setup.exe  \nptn3:\\\\sources\\\\install.wim (taken form 32-bit \u0027Win 8.1 U1\u0027)  \nptn3:\\\\WIMBoot.vhdx  \nptn3:\\\\BOOTNXT  \nAbove UEFI configuration will boot in following sequence-  \nUEFI -\\\u003e /efi/bootmgfw.efi -\\\u003e winload.efi -\\\u003e(ptn1/ptn2):\\\\efi\\\\Microsoft\\\\Boot\\\\BCD -\\\u003e ptn3:\\\\ Win8.1U1SE_x64_boot.wim  \n-\\\u003e /efi/bootmgfw.efi -\\\u003e winload.efi -\\\u003e(ptn1/ptn2):\\\\efi\\\\Microsoft\\\\Boot\\\\BCD -\\\u003e ptn3:\\\\ Win8.1U1 Installer  \n-\\\u003e /efi/bootmgfw.efi -\\\u003e winload.efi -\\\u003e(ptn1/ptn2):\\\\efi\\\\Microsoft\\\\Boot\\\\BCD -\\\u003e ptn3:\\\\ W2G+WIMBoot+VHDX\n\n**Will above expected UEFI USB configuration work or not ?**   \n\nPlease give me your precious suggestions regarding this configuration.........  \n\nRegards.........  \n\n"
    },
    {
      "id": "186160",
      "timestamp": "2014-07-27T18:09:49+00:00",
      "author": "Wonko the Sane",
      "content": "Since I was senselessly solicited to provide my \"precious opinion/suggestion\" via PM on this:  \n\u003e **Will above expected UEFI USB configuration work or not ?**   \n\u003e\n\u003e Please give me your precious suggestions regarding this configuration.........\n\nHere is my \"opinion/suggestion\" (cannot really say if \"precious\" ![:unsure:](https://reboot.pro/public/style_emoticons/default/unsure.png)):  \n\nWho knows? ![:dubbio:](https://reboot.pro/public/style_emoticons/default/dubbio.gif)  \nJust §@ç#ing try doing it! (and see what happens) ![:ranting2:](https://reboot.pro/public/style_emoticons/default/ranting2.gif)   \n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)  \nWonko\n\n"
    },
    {
      "id": "186166",
      "timestamp": "2014-07-27T20:12:12+00:00",
      "author": "saddlejib",
      "content": "You\u0027re getting increasingly impatient........(just an observation)....\n\n"
    },
    {
      "id": "186167",
      "timestamp": "2014-07-27T20:14:09+00:00",
      "author": "saddlejib",
      "content": "p.s still a wealth of wisdom... (much appreciated by me at least)\n\n"
    },
    {
      "id": "186168",
      "timestamp": "2014-07-27T20:15:49+00:00",
      "author": "saddlejib",
      "content": "I\u0027m returning to *somnambulism now....*\n\n"
    },
    {
      "id": "186175",
      "timestamp": "2014-07-28T00:55:56+00:00",
      "author": "devdevadev",
      "content": "\u003e You\u0027re getting increasingly impatient........(just an observation)....\n\nHello Sir,  \n\nAre you talking about me or anyone else ?  \n\nPlease mention @..........because it\u0027s confusing ?  \n\nRegards........   \n"
    },
    {
      "id": "186181",
      "timestamp": "2014-07-28T07:39:24+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e You\u0027re getting increasingly impatient........(just an observation)....\n\nYep :smile:, though I do have my specific reasons for this increase.\n\n@devdevadev\n\nDon\u0027t worry, it was directed at me, saddlejb woke up from his sleep just to highlight how snappy was my reply in post #18.\n\nBy convention, if not explicitly directed at someone/something, a reply is related to last post on the thread before the reply.\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "186270",
      "timestamp": "2014-08-01T04:54:24+00:00",
      "author": "devdevadev",
      "content": "[http://reboot.pro/to...e-2#entry186244](http://reboot.pro/topic/19956-change-path-from-bootmgr-bootbcd-to-wim9mgr-bootwim-wim9mgr-wim/page-2#entry186244 \"\")\n\n"
    },
    {
      "id": "186271",
      "timestamp": "2014-08-01T05:05:37+00:00",
      "author": "devdevadev",
      "content": "\u003e **++By Murphy 79, on 12 Jul 2014, -11:47 PM, said in PM++**\n\u003e\n\u003e The bootmgr.efi and bootia32.efi from the 32-bit image are useless since there are no supported Windows OS versions. I think they have a win32 tablet version that uses uefi, but it\u0027s not available to anyone except oems. I haven\u0027t seen that one for myself, only heard about it in the wimboot thread.  \n\u003e Anyhow, if you are going to use a boot.wim from the x64 image, just use the bootmgr.efi and bootx64.efi files from the x64 image.It might be a little confusing to trash one bootmgr.efi for another bootmgr.efi, but trust me, they are not compatible. the one from the 32-bit image will not work at all.\n\nIt means there are two \u0027bootmgr.efi\u0027. Both 32-bit and 64-bit \u0027bootmgr.efi\u0027 are different. Only name is same. So I have to use 64-bit \u0027bootmgr.efi\u0027 and \u0027bootx64.efi\u0027 files from the x64 image in order to UEFI booting of 32-bit OS in 64-bit firmware/system.\n\nRegards.......\n\n"
    },
    {
      "id": "184945",
      "timestamp": "2014-06-18T02:44:56+00:00",
      "author": "devdevadev",
      "content": "Hello Everyone.......![welcome.gif](http://www.msfn.org/board/public/style_emoticons/default/welcome.gif)\n\nSpecially to ***\u0027All Experts\u0027.................***\n\nFirst tons of thanks to **all Experts** for creating ***\u0027Easy2Boot\u0027, \u0027RMPrepUSB\u0027, \u0027Modified E2B\u0027, \u0027**WinNTSetup3\u0027,*****  \n***\u0027Win8.1UpdateSE x64 boot.wim\u0027, \u0027NUFD FORMAT.exe\u0027, \u0027UEFI MULTI.exe\u0027, \u0027Bootice.exe\u0027 etc........***\n\nI need help of Experts in order to complete this tutorial so please help me by suggesting Step by Step Procedure............\n\n\u003cbr /\u003e\n\nI have a **\u0027Removable USB Drive\u0027** which have a FAT32**\u0027Partition 1\u0027** and a FAT32 Active**\u0027Partition 2\u0027**.\n\nNormally **\u0027Partition 1\u0027** always be **\u0027Visible\u0027** in \u0027Windows OS\u0027 while **\u0027Partition 2\u0027** become**\u0027Invisible\u0027**in\n\n\u0027Windows OS\u0027. We can **install/integrate**a special Windows disk driver**(e.g.cfadisk)**within\n\n**\u0027Win8.1U1SE_x64_boot.wim\u0027**during creation which will trick Windows into treating a\n\n**Removable-media drive****as a Fixed-disk drive.**\n\n\u003cbr /\u003e\n\nThis is the **SpecialConfiguration** exactly what I want for my **\u0027Removable USB Drive\u0027.**  \n\n**- Special Configuration for Removable USB Drive -**  \n______________________________________________________________________\n\n**Partition 1** **-**5 GB **FAT32****-** **Visible** to **Windows OS** **-** will be used only for **DATA Storage Purpose**\n\n**Partition 2 -**9.7 GB **FAT32** type**Active** Partition **-****Invisible** to **Windows OS** but will be **Visible** for running\n\n**\u0027Win8.1U1SE_x64_boot.wim\u0027**due to integration of **\"cfadisk\"** driver.\n\n**\"UEFI_MULTI.exe\"**will be used in order to copy **\u0027Win8.1U1SE_x64 boot.wim\u0027**file to **R******oot****, an several\n\nother **ISO\u0027s** to directory **\\\\** **images**, make the **B**oot files****and**EFI folder** also **Grub4dos mbr and grldr**\n\nand make \u0027**BCD option to boot Grub4dos****(E2B)\u0027**\n\n**+** **Easy2Boot Files**(**.iso , .img , .imgPTN etc** payload files with be placed within **\\\\_ISO\\\\MAINMENU** folder)\n\n+**\u0027** **Win_7/8/8.1_Inst.imgPTNLBAa\u0027**will be placed in**\\\\_ISO\\\\WIN**or **\\\\_ISO\\\\MAINMENU** folder\n\n**+****WinNTSetup 3**(BootIce included in tools folder).\n\n______________________________________________________________________\n\nSo that my **\u0027Removable USB Drive\u0027** boot directly from**\u0027Partition 2\u0027** into **UEFI + BIOS** mode with\n\n**Boot Manager Menu**. Thus **\u0027Win8.1U1SE_x64_boot.wim\u0027**will be booted directly from **\u0027Boot Manager**\u0027 menu entry in both **UEFI** and **BIOS** mode while **\u0027Easy2Boot\u0027** will be booted from **\u0027Grub4dos\u0027** menu entry in **BIOS** /**UEFI** (UEFI if possible).\n\n***Ultimate-Super-Smart-Secret \u0027Removable\u0027 USB Drive*** ***Mega-Booting***should be done in following order-\n\n-------------------------------------------------------------------------------------------------------------------------------\n\n**Boot UEFI + BIOS with \u0027Win8.1UpdateSE x64 boot.wim\u0027 direct from Boot Manager Menu into RAMDISK\nBoot UEFI - F12 - BIOS - Grub4dos - (Easy2Boot) +/ (Win XP/7/8 VHD - Ramdisk)**   \n-------------------------------------------------------------------------------------------------------------------------------  \n\n**Note-** After booting from USB with**\u0027Win8.1U1SE_x64_boot.wim\u0027**, I will use portable App \u0027**WinNTSetup_x64.exe\u0027**to mount **\u0027** **Win_7/8/8.1_Inst.imgPTNLBAa\u0027** **(within from****\\\\_ISO\\\\WIN** folder of**Partition 2)**in **ImDisk** Virtual Drive.\n\n**\u0027WinNTSetup 3\u0027**will prepare local harddisk for Install of Win 7/8/8.1\n\n**Challanges -** Currently**\u0027Win8.1SE\u0027** package does not contains script for adding/integrating**\u0027cfadisk\u0027** driver into**\u0027Win8.1U1SE_x64_boot.wim\u0027**. I request **All related **Experts**(****Specially to \u0027ChrisR\u0027)**for adding a\n\nscript for **\u0027cfadisk\u0027** driver in next release of **\u0027Win8.1SE\u0027** package.\n\n***Is it possible to implement above Configuration in \u0027Removable USB Drive ?***\n\nPlease study above configuration carefully and give your precious suggestions in order to implement above configuration if possible.......\n\n***Regards*** ..\n\n**Edited by devdevadev, 12 July 2014 - 02:13 AM.**\n"
    },
    {
      "id": "184947",
      "timestamp": "2014-06-18T04:17:58+00:00",
      "author": "devdevadev",
      "content": "First lots of honor and regards to**\u0027Wonko\u0027,** **\u0027jaclaz\u0027** and \u0027***HALIKUS\u0027*** for encouraging me.............\n\n\u003cbr /\u003e\n\nI am using **\u0027Easy2Boot\u0027** from a long time which I think is the **Best and Unique MultiBoot solution** for me. Following are the top features which I love in \u0027E2B\u0027-  \n\n**1-** **\u0027Easy2Boot\u0027** is very easy to use because of just **Drag and Drop** of \u0027Payload Files\u0027.  \n**2-** It provide facility of **\u0027Master Password\u0027** for **\u0027E2B Menu\u0027** so that No other person can easily  \neither Boot from my \u0027E2B\u0027 USB Drive or Harm/Corrupt/Copy my \u0027E2B\u0027 files.  \n**3-** I can easily configure **Background, Wallpaper and Menus of \u0027E2B\u0027** according to my interest.  \n**4-** **\u0027Pass-Pass\u0027** is already integrated within \u0027Easy2Boot\u0027 Directory.  \n**5-** \u0027E2B\u0027 allow me to have a **\u00272nd partition\u0027** in order to make a **\u0027secret\u0027** hidden partition and  \nprotects my E2B files. It also provide **\u0027E2B_PTN_SWAP.mnu\u0027** in order to Swap between the  \ntwo Partitions.   \n**6-** **\u0027PTN2_Menu.mnu\u0027** allow me booting of **Payload files** (but not Windows Install ISOs) within  \nfrom **\\\\_ISO folder** of **Other Partitions** or even from, **Other Drives** .   \n\u0027E2B\u0027 also allow to have **more than two Partitions** in both USB Flash and USB HDD drives.  \n**7-** **No limit** to the number of different Linux, Windows Install, WinPE, etc. ISOs or other payload files  \n**8-** I can use a USB Hard disk with two or more partitions and still UEFI boot (even if they are all   \n\u0027NTFS\u0027 Partitions) - no complex GPT partitions neeed.  \n**9-** UEFI booting of Windows Installers and Linux LiveCD payloads via a **Partition image**   \n(and most other UEFI-enabled payloads too, such as KonBoot).  \n**10-** I can use**\u0027Win8.1U1_to_GO.imgPTNLBAa\u0027** as a Payload file within \\\\_ISO\\\\MAINMENU folder  \n**11-** **UEFI** boot to an **NTFS partition** (via Clover + first FAT32 ptn). Aso support   \n**Dual Partition images** -e.g. (**FAT32 + NTFS , NTFS +FAT32** )  \n**12-** I can use**\u0027E2B\u0027** for **UEFI/MBR** Booting of Windows Installers, ERD, MSDart, warezs, DLCD,  \nUBCD, KonBoot_2.4, HitMan Pro, Eset, Antivirus, XP Install to SATA Disk, MemTest86+, MS-DOS,   \nFreeDos, All LinuxLiveCDs, Linux+Persistance, WinBuilder ISOs, WinPE ISOs, HP ISO Utilities,   \n**USB Drive Images** (e.g. YUMI, XBOOT, WinSetupFromUSB, SARDU, Rufus), and many 100\u0027s more..  \n**13-** And most important thing for me is that \u0027Easy2Boot\u0027 is developed by **\u0027Steve Si\u0027** who is a very   \n**\u0027Cool and Supportive\u0027** person. He always provide update and improvement on regular basis.  \nHe also added lots of feature and improvement for me in various versions of \u0027Easy2Boot\u0027.   \n\nI am using \u0027Easy2Boot\u0027 from one year and I do not prefer any other Multi-boot tool except it because it fulfill my all requirements. Easy2Boot is the Best, Unique and Universal Multiboot tool which I have used ever. **But I always have to change BIOS settings (UEFI mode to BIOS/MBR/CSM mode and Disable Secure Boot) two times (Before and After Windows Installation)** in order to boot \u0027Easy2Boot\u0027 and load \u0027E2B Menu\u0027 in UEFI based PC which I never want to do. E2B also cannot UEFI boot via System Firmware for Dual Partitioned Removable UFDs.  \n\nActually following is the para which force me to use \u0027UFD_FORMAT\u0027 and \u0027UEFI_MULTI\u0027  \n\n**\" Win8.1SE x64 boot.wim of size 400 MB is Universal WIM Boot Image file for booting BIOS and UEFI PCs. After booting from USB with x64 boot.wim you can use portable App WinNTSetup_x64.exe to mount XP/7/8 Setup ISO in ImDisk Virtual Drive. WinNTSetup3 will prepare local harddisk for Install of XP/7/8 \"**   \n\nIn fact, \u0027UFD_FORMAT\u0027 and \u0027UEFI_MULTI\u0027 are very good tool but both of them does not fulfill my needs. .i.e  \n\u0027UFD_FORMAT\u0027 does not provide \u0027Partition size\u0027 option in order to create a desired size \u0027Partition 1\u0027 and \u0027Partition 2\u0027 while RMPrepUSB allow us to create a desired size \u0027Partition 1\u0027 by \u0027Partition Size\u0027 option. \u0027UEFI_MULTI\u0027 also does not fully satisfy me because it does not allow me to put \u0027VHD\u0027 files in the Boot Partition instead of System Partition. It also does not allow me to boot \u0027WIM\u0027 files through Grub4dos \u0027menu.lst\u0027. It\u0027s why now I have to adopt **\u0027BCD Store editing\u0027** in order to **modify \u0027BIOS BCD\u0027, \u0027UEFI BCD\u0027, \u0027bootmgr\u0027 and \u0027bootmgr.efi\u0027** so that I can put all my Boot Files **(except EFI folder and bootmgr.efi )** and Payload files (ISO, .imgPTN, WIM, VHD etc.) into my**Hidden Boot Partition** in order to **BIOS+UEFI** booting. Finally yesterday night I found **\u0027GUI DISM.exe\u0027** which allow me to add/integrate/inject Drivers (**Firadisk , cfadisk/diskmod** etc.) into WIM files so that I can access my both Partitions (Data Partition and E2B Parition) of Removable USB Drive within from running**\u0027Win8.1SE_x64_boot.wim\u0027** .  \n\nAFAIK,**\u0027WinNTSetup v3.6.1\u0027** is the best and unique tool which allow us to install Windows OS into both Internal Hard-disk and External USB Drives of both MBR-BIOS and **GPT-UEFI** Partition schemes without converting Partition Scheme GPT to MBR. It\u0027s why I want to use **\u0027WinNTSetup v3.6.1\u0027** within from running **\u0027Win8.1SE_x64_boot.wim\u0027** in order to install WINDOWS OS (Specially**install.esd** ) into MBR/GPT Partitioned Hard disk drives.  \n\nSo overall these are the reason WHY a \"normal\" Easy2boot setup does not work for me, and/or WHY a \"normal\" UEFI MULTI setup does not work for me and for my goal. So finally I decide to use both**\u0027Easy2Boot v1.50\u0027** and **\u0027BOOTICE/BCD Editing\u0027**in order to fulfill my Goal.  \n\nRegards..............\n\n"
    },
    {
      "id": "184951",
      "timestamp": "2014-06-18T10:04:42+00:00",
      "author": "alacran",
      "content": "You have done same question in other tread, there is no need to open a new one.\n\nI just answer it: [http://reboot.pro/to...fd/#entry184950](http://reboot.pro/topic/19864-boot-uefi-win81updatese-x64-bootwim-bios-grub4dos-easy2boot-from-hidden-partition-of-dual-partition-removable-ufd/#entry184950 \"\")\n\nRegards\n\n"
    },
    {
      "id": "184967",
      "timestamp": "2014-06-19T16:44:38+00:00",
      "author": "devdevadev",
      "content": "This is my current **\u0027E2B Main Menu Screen\u0027**  \n\n***[MY E2B MENU SCREEN](http://files.easy2boot.com/200000109-3b3843c319-public/KRISHNA-%20 \"External link\")***\n\n**Edited by devdevadev, 14 October 2018 - 03:44 PM.**\n"
    },
    {
      "id": "184978",
      "timestamp": "2014-06-21T11:53:38+00:00",
      "author": "devdevadev",
      "content": "Today I have injected filter driver \u0027cfadisk\u0027 into \u0027Win8.1SE_x64_boot.wim\u0027, \u0027boot.wim\u0027 and \u0027WIMBoot.vhdx\u0027.\n\nNow I can boot \u0027Win8.1U1 Installer\u0027, \u0027W2G+WIMBoot+VHDX\u0027 and \u0027Win8.1SE_x64_boot.wim\u0027 within from hidden \u0027ptn3\u0027 through modified  \nBOOTMGR -\\\u003e BCD in \u0027ptn2\u0027 .\n\ni.e.\n\nBIOS -\\\u003e MBR -\\\u003e ptn2:\\\\grldr -\\\u003e E2B -\\\u003e ptn2:\\\\_ISO\\\\MAINMENU\\\\Boot Manager.mnu -\\\u003e ptn2:\\\\(bootmgr, bootmgr1, bootmgr2) -\\\u003e\n\n-\\\u003e ptn2:\\\\(bcd,bc1,bc2) -\\\u003e ptn3:\\\\(W2G+WIMBoot+VHDX, Win8.1U1SE_x64_boot.wim, Win8.1U1 Installer)\n\nRegards.....\n\n**Edited by devdevadev, 22 July 2014 - 10:50 AM.**   \nReplaced complete post #5 on author\u0027s request\n"
    },
    {
      "id": "185586",
      "timestamp": "2014-07-10T10:43:48+00:00",
      "author": "devdevadev",
      "content": "***Greeting of the Day.....***\n\nRelated discussions links are here\n\n[http://reboot.pro/to...-removable-ufd/](http://reboot.pro/topic/19864-boot-uefi-win81updatese-x64-bootwim-bios-grub4dos-easy2boot-from-hidden-partition-of-dual-partition-removable-ufd/ \"\")\n\n[http://reboot.pro/to...efi-boot-files/](http://reboot.pro/topic/19881-uefi-booting-of-partition-2-win81-x64wim-via-fat32-active-partition-1-efi-boot-files/ \"\")\n\n[http://reboot.pro/to...ul-combination/](http://reboot.pro/topic/19903-wtg-wimboot-vhdx-powerful-combination/ \"\")\n\n***T*** ***housands of Thanks and Regards*** to ![:worship:](https://reboot.pro/public/style_emoticons/default/worship.gif) ***Steve******, ktp, alacran, cdob, misty, wimb, JFX, HALIKUS, Nuno Brito Wonko etc........***\n\n![:cheers:](https://reboot.pro/public/style_emoticons/default/cheers.gif)\n\n**Edited by devdevadev, 12 July 2014 - 01:59 AM.**\n"
    },
    {
      "id": "185617",
      "timestamp": "2014-07-10T23:12:51+00:00",
      "author": "alacran",
      "content": "FAT32 maximum file size is 4 GB.\n\nRegards\n\n"
    },
    {
      "id": "185622",
      "timestamp": "2014-07-11T00:26:11+00:00",
      "author": "devdevadev",
      "content": "\u003e FAT32 maximum file size is 4 GB.\n\u003e\n\u003e Regards\n\nHi **alacran**\n\nIn Partition 2, there is no file greater than 4 GB. All my Windows ISO are of ESD types. and \u0027Win8.1ToGO\u0027 is also WIMBoot types so there is no change to exceed 4 GB limit. Actually there is no problem of 4 GB limit because Steve provide us a very powerful format which is \u0027.imgPTN\u0027. I can create NTFS.imgPTN of greater than 4 GB if needed. But due to lack of storage , I always prefer ESD types Win_AIO_**[x86](http://kickass.to/windows-8-1-24in1-aio-x32-bit-english-us-pre-activated-dart-8-1-updated-june-25-2014-v2-t9310657.html \"External link\")_[x64](http://kickass.to/windows-8-1-24in1-aio-x64-bit-english-us-pre-activated-dart-8-1-updated-june-25-2014-v2-t9314083.html \"External link\")** _ESD.imgPTN partition images. When we select a .imgPTN payload file from the E2B menu, then it first backup MBR and then update the USB MBR to a single NTFS Partition. So 4GB limit never panic me. And In case of UEFI , I will first boot to any WinPE/WinToGO and then mount Win_AIO_**++x86_UEFI Boot++**_ESD.imgPTN with the help of Imdisk and then use \u0027WinNTSetup v.3,6.1\u0027 in order to apply \u0027install.wim\u0027/\u0027install.esd\u0027 of size greater than 4GB.\n\nAcutally UEFI 4GB limit is not a Big problem because of **Steve \u0027Method 1/4\u0027** for removable USB Drive. And **\u0027Method 1/2/3\u0027** for fixed USB Drive.\n\n[http://www.easy2boot...er-flash-drive/](http://www.easy2boot.com/add-payload-files/adding-windows-install-isos-without-needing-a-helper-flash-drive/ \"External link\")\n\nRegards.\n\n**Edited by devdevadev, 12 July 2014 - 12:47 AM.**\n"
    },
    {
      "id": "185654",
      "timestamp": "2014-07-11T14:43:30+00:00",
      "author": "cdob",
      "content": "\u003e Partition 2- FAT32 - Set Active - 25 GB - Invisible to Window - This Partition will contain Win8.1ToGO  \n\u003e\n\u003e K:\\\\WIMBoot.wim  \n\u003e K:\\\\Win8.1ToGO.vhdx  \n\u003e K:\\\\Bootmgr (For direct booting of \u0027 Win8.1ToGO + WIMBoot + VHDX\u0027 combo within from E2B Menu )  \n\u003e K:\\\\Boot\\\\BCD (relocated to \"Win8.1ToGO + WIMBoot + VHDX\" combination and boot.sdi)\nI wonder:  \nHow do you mount the vhdx file at the FAT32 partition?  \nDo you use windows native drivers?  \nDo you use a third party driver? Does they work in conjunction with WIMBoot?  \n\n\u003cbr /\u003e\n\nAnother approach:  \nInstead of several K:\\\\Boot\\\\BC? files, you may create one K:\\\\Boot\\\\BCD. Include all bcd settings to this file.  \nOf course, it\u0027s your choice to use several bc? files instead.   \n"
    },
    {
      "id": "185676",
      "timestamp": "2014-07-12T01:18:57+00:00",
      "author": "devdevadev",
      "content": "***Hello Everyone........***  \n**[http://www.msfn.org/board/topic/158279-boot-os-from-vhd-in-fat32-drive-can-it-be-done/](http://www.msfn.org/board/topic/158279-boot-os-from-vhd-in-fat32-drive-can-it-be-done/ \"External link\")**  \n\u003e BUT you can still fake ![woot.gif](http://www.msfn.org/board/public/style_emoticons/default/woot.gif) that a \"flat\" .vhd is actually a RAW image with a single sector appended to it (which actually is ![newwink.gif](http://www.msfn.org/board/public/style_emoticons/default/newwink.gif)) and use grub4dos + Firadisk or Winvblock to mount it , it won\u0027t be \"native\" booting anymore, but still it will be booting from .vhd residing on \\*any\\* filesystem.  \n\u003e \u003chttp://reboot.pro/15407/\u003e  \n\u003e \u003chttp://reboot.pro/15997/\u003e  \n\u003e \u003chttp://reboot.pro/16178/\u003e  \n\u003e\n\u003e jaclaz\n\nWhich would be the best and reliable method in order to mount the **vhdx** file at the **FAT32** partition with **\u0027native\u0027 BOOTMGR booting** along with **WIMBoot support** ?\n\nWill I have to use \u0027vBOOT\u0027 ? Can anybody suggest me a better method for it ?\n\n***@cdob***\n\n\u003e Another approach:  \n\u003e Instead of several K:\\\\Boot\\\\BC? files, you may create one K:\\\\Boot\\\\BCD. Include all bcd settings to this file.  \n\u003e Of course, it\u0027s your choice to use several bc? files instead.\n\nHello Sir,\n\nI know this approach but I don\u0027t want to press**\u0027Enter\u0027** button twice. It\u0027s why I have to use individual BOOTMGRs and BCDs for WIM, VHD, WTG. :smile:\n\n***Regards....***.\n\n"
    },
    {
      "id": "185679",
      "timestamp": "2014-07-12T06:53:49+00:00",
      "author": "cdob",
      "content": "\u003e Which would be the best and reliable method in order to mount the vhdx file at the FAT32 partition with \u0027native\u0027 BOOTMGR booting along with WIMBoot support ?\n\nTo emphasize this: How to boot this at UEFI secure boot?  \n\nWhat about a (additional) NTFS partition?   \n"
    },
    {
      "id": "185682",
      "timestamp": "2014-07-12T11:40:39+00:00",
      "author": "devdevadev",
      "content": "\u003e To emphasize this: How to boot this at UEFI secure boot?\n\nWhy you say this ?\n\nWill above Configuration not provide UEFI secure boot ?\n\nWhat precautions I have to follow in order to \u0027UEFI\u0027 secure boot ?\n\n\u003e What about a (additional) NTFS partition?\n\nI will have to add a 3rd **NTFS** partition if I become fail to mount the **vhdx** file at the **FAT32** partition with **\u0027native\u0027 BOOTMGR booting** along with **WIMBoot support** ?\n\n***Regards.....***\n\n"
    },
    {
      "id": "185683",
      "timestamp": "2014-07-12T12:27:03+00:00",
      "author": "Wonko the Sane",
      "content": "Is a .vhd the same as a .vhd**x** ? ![:w00t:](https://reboot.pro/public/style_emoticons/default/w00t.gif)\n\nHInt:\n\nRead ATTENTIVELY the second post in the first reference you cited:\n\n[http://reboot.pro/to...b4dos/?p\u003d137456](http://reboot.pro/topic/15407-booting-from-vhd-in-grub4dos/?p\u003d137456 \"\")\n\nhad you READ the references you have cited, you might have understood this point:\n\n* a .vhd is a RAW image with a single sector appended\n* a .vhd**x** is a COMPLETELY DIFFERENT thing and has a specific format including a header: [http://www.microsoft...s.aspx?id\u003d34750](http://www.microsoft.com/en-us/download/details.aspx?id\u003d34750 \"External link\")\n\nSomething that works on a .vhd BY COINCIDENCE because it was designed for working with RAW images and a \"static/flat\" .vhd is a RAW image with a sector appended (that is ignored) WILL NEVER work on a .vhdx.\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "185685",
      "timestamp": "2014-07-12T13:22:20+00:00",
      "author": "devdevadev",
      "content": "Hello Everyone.....  \nFollowing will be the content of the ***\u0027 USB Partitions\u0027*** .\n\n**Partition 1 -** FAT32 - 5 GB - Visible to Windows - This Partition will be use only for**\u0027Data Storage\u0027** and contain bare minimum **\u0027EFI Files\u0027** hidden by **attrib** commands.\n\n**S:** \\\\EFI\\\\Boot\\\\bootia32.efi - x86 hardware / firmware\n\n**S:** \\\\EFI\\\\Boot\\\\bootx64.efi (bootmgfw.efi) - amd64 hardware / firmware\n\n**S:** \\\\EFI\\\\Microsoft\\\\Boot\\\\BCD - Relocated to **boot.sdi,****Win8.1U1SE_x64_boot.wim**\n\n**S:** \\\\EFI\\\\Microsoft\\\\Boot\\\\Fonts\\\\wgl4_boot.ttf - Recommended\n\n**Partition 2-** NTFS - Set **Active** - 25 GB - Invisible to Window - This Partition will contain **\u0027Win8.1U1SE_x64_boot.wim\u0027** ,\n\n**\u0027****Win8.1U1_x86-install-WIM_x64-boot.WIM_Installer_WTG+WIMBoot+VHDX** **.imgPTN\u0027** , **\u0027Easy2Boot\u0027** files and\n\nmany more **Payload Files** (ISOs, IMGs, .imgPTN etc......) hidden by **attrib** commands.\n\n**K:\\\\Bootmgr** (For direct booting of **\u0027Win8.1U1SE_x64_boot.wim\u0027** within from **E2B** Menu **)**\n\n**K:\\\\Boot\\\\BCD** (Relocated to **Win8.1U1SE_x64_boot.wim** and **boot.sdi** )\n\n**K:\\\\Boot\\\\boot.sdi**\n\n**K:\\\\grldr**\n\n**K:\\\\menu.lst**   \n**K:\\\\my.usb**\n\n**K:\\\\_ISO\\\\MAINMENU\\\\** **Win8.1U1SE_x64_boot.wim**\n\n**K:\\\\_ISO\\\\MAINMENU\\\\** **Win8.1U1SE_x64_boot.mnu**\n\n**K:\\\\_ISO\\\\MAINMENU\\\\** **Win8.1U1_x86-install-WIM_x64-boot.WIM_Installer_** **WTG+WIMBoot+VHDX** **.imgPTN**\n\n**K:\\\\_ISO\\\\WIN\\\\** **WIN 7 Ultimate.imgPTN**   \nK:\\\\_ISO\\\\MAINMENU\\\\**Ultimate DLCD Boot 2014 v2-1.imgPTN**  \nK:\\\\_ISO\\\\MAINMENU\\\\**Spotmau BootSuite 2012.imgPTN**  \nK:\\\\_ISO\\\\MAINMENU\\\\**Easy Rescue Suite 2014.imgPTN**  \nK:\\\\_ISO\\\\MAINMENU\\\\**KonBoot_24.imgPTN**  \nK:\\\\_ISO\\\\MAINMENU\\\\**E2B_PTN_SWAP.mnu**  \n**K:\\\\** **Smart Apps** **\\\\** **WinNTSetup 3.6.1** **(BootIce included in tools folder).**\n\nK:\\\\autorun.inf  \nK:\\\\autounattend.xml  \nK:\\\\e2b.ico  \nK:\\\\FASTLOAD.YES  \nK:\\\\HitmanPro.exe  \nK:\\\\HitmanPro_x64.exe  \nK:\\\\Kickstarter.exe  \nK:\\\\PassPass.bak  \nK:\\\\Readme.txt  \nK:\\\\unattend.xml  \n\n**Note** -\n\n**1-** In**K:\\\\_ISO\\\\MAINMENU\\\\** **Win8.1U1SE_x64_boot.mnu** **,** I will put following entries in order to directly boot **Win8.1U1SE_x64_boot.wim** within from **Easy2Boot** Menu in **BIOS/MBR** mode.\n\n---------------------------------------------\n\ntitle **Win8.1U1SE_x64_boot_WIM**\n\nchainloader /bootmgr\n\n---------------------------------------------\n\n**2- \u0027****Win8.1U1_x86-install-WIM_x64-boot.WIM_Installer_** **WTG+WIMBoot+VHDX.imgPTN\u0027**will contains following files -\n\n**BOOTNXT**\n\n**WIMBoot.vhdx**(Contains Installation files of WIMBoot pointed to **sources\\\\install.wim** )\n\n**bootmgr** (Taken from x64 \u0027Win 8.1 U1\u0027 for BIOS/MBR Boot Manager)\n\n**bootmgr.efi** (Taken from x64 \u0027Win 8.1 U1\u0027 for UEFI Boot Manager)\n\n**boot\\\\bcd** (Pointed to **boot.wim (x64), boot.sdi and WIMBoot.vhdx**)\n\n**boot\\\\boot.sdi** (Taken from x64 \u0027Win 8.1 U1\u0027)\n\n**efi\\\\boot\\\\bootx64.efi** (Taken from x64 \u0027Win 8.1 U1\u0027)\n\n**efi\\\\microsoft\\\\boot\\\\bcd** (Pointed to **boot.wim (x64), boot.sdi and WIMBoot.vhdx**)\n\n**sources\\\\install.wim** **(Taken from x86 \u0027Win 8.1 U1\u0027)**\n\n**sources\\\\boot.wim** (Taken from x64 \u0027Win 8.1 U1\u0027)\n\n**sources\\\\lang.ini**\n\n**e2b\\\\CSM.bmg**\n\n**e2b\\\\menusetting**\n\n**e2b\\\\RestoreCSM (run as admin)**\n\n**e2b\\\\RestoreE2B (run as admin)**\n\n**e2b\\\\unifont.hex**\n\n**autorun.ico**\n\n**autorun.inf**\n\n**grldr**\n\n**menu.lst**\n\n**RestoreE2B.exe**\n\n**1- BIOS-** I will use BCD edit function inside **Bootice\\\\BCDEdit** to edit S:\\\\Boot\\\\**BCD** for creating boot entries for\n\n**\u0027Win8.1U1SE_x64_boot.wim\u0027**in**BIOS** mode (winload.exe to be put as loader).\n\n**2- UEFI-** I will use BCD edit function inside **Bootice\\\\BCDEdit** to edit S:\\\\efi\\\\Microsoft\\\\Boot\\\\**BCD** for creating boot entries for\n\n**\u0027Win8.1U1SE_x64_boot.wim\u0027**in **UEFI**mode (winload.efi to be put as loader).\n\n**BIOS mode:** **1-** BIOS -\\\u003e MBR -\\\u003e grubdos -\\\u003e grldr/menu.lst -\\\u003e **Easy2Boot Menu**   \n**2-** BIOS -\\\u003e MBR -\\\u003e grubdos -\\\u003e grldr/menu.lst -\\\u003e bootmgr -\\\u003e s:\\\\boot\\\\**BCD -\\\u003e Win8.1U1SE_x64_boot.wim**\n\n**UEFI mode:**UEFI-\\\u003e /efi/bootmgfw.efi -\\\u003e winload.efi -\\\u003e S:\\\\efi\\\\Microsoft\\\\Boot\\\\**BCD -\\\u003e** **Win8.1U1SE_x64_boot.wim**\n\n**Note -**After booting from \u0027**Win8.1U1_x86-install-WIM_x64-boot.WIM_Installer_WTG+WIMBoot+VHDX****.imgPTN\u0027**  \nor **\u0027Win8.1U1SE_x64_boot.wim\u0027** in **BIOS/** **UEFI**mode. I will use portable App \u0027**WinNTSetup 3.6.1_x64.exe\u0027**in order to mount \u0027**Win8.1U1_x86-install-WIM_x64-boot.WIM_Installer_WTG+WIMBoot+VHDX** **.imgPTN\u0027** **(within from**  \n**\\\\_ISO\\\\MAINMENU**folder of**Partition 2)** in **ImDisk** Virtual Drive. **\u0027WinNTSetup 3\u0027**will prepare local hard-disk for  \nInstalling **Win** 7/8/**8.1** .\n\n**Please reply me if above procedure also work for you...............**\n\n***Please provide me your precious suggestions in order to improve above configuration......***  \n\n**Thousands of Thanks and Regard*s*** to ![:worship:](https://reboot.pro/public/style_emoticons/default/worship.gif) ***Steve*** ***, ktp, alacran, cdob, misty, wimb, JFX, HALIKUS, Murphy 78, Wonko etc........***\n\n***Regards...***\n\n![:cheers:](https://reboot.pro/public/style_emoticons/default/cheers.gif)\n\n"
    },
    {
      "id": "185696",
      "timestamp": "2014-07-12T15:07:43+00:00",
      "author": "Wonko the Sane",
      "content": "Who knows?\n\nAGAIN, a .vhd is NOT a .vhdx, they use DIFFERENT FORMATS. \\\u003c- is this so difficult? ![:unsure:](https://reboot.pro/public/style_emoticons/default/unsure.png)\n\nThere is Native .vhd booting in some editions of Windows 7.\n\nThere is Native .vhd AND .vhdx booting in Windows 8 and similar.\n\nBOTH have seemingly the requisite of the filesystem on which they are mounted to be NTFS.\n\nIf you read, this time ATTENTIVELY the thread you linked to:\n\n[http://www.msfn.org/...can-it-be-done/](http://www.msfn.org/board/topic/158279-boot-os-from-vhd-in-fat32-drive-can-it-be-done/ \"External link\")\n\nyou will get to here:\n\n[http://blogs.technet...-explained.aspx](http://blogs.technet.com/b/ranjanajain/archive/2010/03/23/virtual-hard-disk-vhd-architecture-explained.aspx \"External link\")\n\nAs always, DO NOT trust any info, but rather TRY yourself.\n\nSee (please, please READ it):\n\n[http://technet.micro...y/hh825689.aspx](http://technet.microsoft.com/en-us/library/hh825689.aspx \"External link\")\n\nCreate a \"Native\" booting .vhd or .vhdx (depending on the OS used) on a NTFS volume, try booting from it, then repeat but from a FAT32 (of course the image needs to be smaller than 4 Gb).\n\nDoes it still work? ![:frusty:](https://reboot.pro/public/style_emoticons/default/frusty.gif)\n\nIf yes, the mentioned reference is incorrect, if no, then it is correct.\n\nThe non-native .vhd boot in the reference you provided (as I tried vainly ![:frusty:](https://reboot.pro/public/style_emoticons/default/frusty.gif) to explain you) is NOT a .vhd boot, but rather a RAW image boot, and it DOES apply to \"static\" .vhd ONLY AND NOT to any other type of .vhd AND NOT to .vhdx of ANY type.\n\nA .vhd booted through grub4dos and Firadisk or Winvblock (i.e. a RAW image boot) can be on a FAT32 fine, but of course since grub4dos does not support UEFI, you need BIOS or CSM.\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "186023",
      "timestamp": "2014-07-22T09:51:23+00:00",
      "author": "devdevadev",
      "content": "**@ Steve....**  \n\n1- Create two Primary Partition in your \u0027**Removable USB Drive\u0027** with the help of **BOOTICE** . **\u0027PTN 2\u0027** should be **NTFS** and\n\ngreater than**25 GB**. (25 GB is **minimum** size for 32-bit \u0027WTG\u0027, You should use greater for smooth operations).\n\n**PTN1 - FAT32 - 5 GB or above - DATA**\n\n**PTN2 - NTFS - 25 GB or above - E2B**\n\n2- Make **NTFS \u0027E2B\u0027 PTN** accessible to Windows with the help of **BOOTICE** and extract **E2B** files to **NTFS \u0027E2B\u0027 PTN**\n\nand make USB drive Bootable by installing**\u0027Grub4dos\u0027** to **MBR** with the help of **RMPrepUSB**.\n\n3- Drag and Drong **\u0027Win8.1U1_x86.iso\u0027** to **\u0027MakePartImage\u0027** desktop shortcut of **\u0027MPI_v041\u0027** in order to create an\n\n**NTFS** formatted **\u0027Win81U1_x86.imgPTN\u0027** of approx. **20 GB** or **Above****.**And then put **\u0027Win81U1_x86.imgPTN\u0027** file\n\ninto **\\\\_ISO\\\\MAINMENU** directory of **NTFS \u0027E2B\u0027 PTN** .\n\n4- Now make **FAT32 \u0027DATA\u0027 PTN** accessible to Windows again using **BOOTICE**. Boot from the your USB Drive and\n\nselect **\u0027Win81U1_x86.imgPTN\u0027** payload file and switch to **CSM**mode.\n\n5- Now **Reboot** to Main Windows OS and open File Explorer and note **Drive Letter** of your Removable USB Drive\n\n(Suppose it is **K:**)\n\n**6- Now Delete****(or move to any safe place )****following folders and files within from USB Drive*****(Very Important )*** **-**  \n**K:\\\\boot**  \n**K:\\\\efi**  \n**K:\\\\bootmgr**  \n**K:\\\\bootmgr.efi**  \n**K:\\\\support**\n\n7- Now open **\u0027WinNTSetup v.3.7.5\u0027** and create **dynamically expanding \u0027WTG.vhdx\u0027** of approx. **15 GB or greater**\n\nwithin any Partition of your **Local Hard Disk** (assume Root of **C: Drive** ). **\u0027WTG\u0027** Partition will be automatically mounted\n\nas **Z: Drive**. Now we will start Installation.  \n8- First browse **\u0027install.wim\u0027** file within from your USB Drive **K:\\\\sources\\\\install.wim**as Source. Then Select USB\n\nDrive **K:** as **Boot Drive** and **\u0027WTG\u0027** Partition **Z:** as **Installation Drive**   \n9- Check \" **Windows Image File Boot (WIMBoot) \"** option *(Can Ignore if USB Drive is not Ultra Fast)* .  \n10- Press **\u0027Setup\u0027** button and click **\u0027OK/Yes\u0027** to start Installation process.  \n11- After completing Installation Boot from your USB Drive ( **K:) 3 times** (whenever system restart) until you\n\nBoot to Desktop of **\u0027Win 8.1U1 to GO\u0027** .\n\n12- Reboot and Boot from your Internal Hard disk Partition (**C: Drive)** . Now copy **\u0027C:\\\\WTG.vhdx\u0027** file from **C:\\\\ Drive** to\n\nthe **Root** of your **USB Drive (K:WTG.vhd)**   \n13- Run **Command Prompt** (CMD) as **Admin** and type **attrib -h -r -s /s /d K:\\\\\\*.\\***  \n14- Now open **Bootice/BCDEdit** and browse **BCD** within from your USB Drive **K:\\\\boot\\\\BCD**   \n15- Press **\u0027Easy Mode\u0027** button and then you will find a BCD entry named **\u0027Windows 8.1\u0027.**  \n16- Under **\\[Boot Device\\] -\\\u003e\\\u003e Disk** : category choose **\u0027BOOT (WIM)/LOCATE(VHD)\u0027**option. ***(Very Important)***\n\n17- You can also rename OS title from **\u0027Windows 8.1\u0027** to **\u0027Win 8.1U1 to GO\u0027** according to your Choice.\n\n18- Now click **\u0027Save current system\u0027** and then Click **\u0027Save Globals\u0027**button.\n\n*++**Optional-**++* If you also want to add**\u0027Windows Installer\u0027** along with***\u0027WTG + WIMBoot + VHDX\u0027***setup , then you can\n\ncopy **\\\\boot\\\\boot.sdi** file within from**\u0027Win8.1U1_x86.iso\u0027** to the **K:\\\\boot\\\\** directory of you USB Drive. And\n\nthen add a BCD Entry **(Windows Installer)** pointed to both **K:\\\\source\\\\boot.wim** and **K:\\\\boot\\\\boot.sdi**.\n\nAnd then click **\u0027Save current system\u0027** and then Click **\u0027Save Globals\u0027**button again....\n\n19- Now move **\u0027WTG.vhdx\u0027** within from root of **C: Drive** to any other folder where you like for future use.\n\n(Can also Delete)  \n20- Now Boot from your **USB Drive (K:)** and choose **\u0027Win 8.1U1 to GO\u0027** option from**Boot Manager Menu**.  \n21- If you successfully Boot to Desktop of**\u0027Win 8.1 U1\u0027** then reboot again to Internal Hard disk.  \n22- And Install **\u0027Grub4dos\u0027** to **MBR** of your **USB Drive (K:)** with the help of**\u0027RMPrepUSB\u0027.**   \n23- Now Boot from your USB Drive to **CSM Menu** and then Press **\u0027Enter\u0027** Button.  \n24- Choose **\u0027Win 8.1U1 to GO\u0027** option from **Boot Manager Menu** and test it once again.  \n25- If it successfully boot to**\u0027Win 8.1U1 to GO\u0027** then you can switch from **CSM Menu** to **E2B Menu** as usual.\n\n26- Now it\u0027s......**DONE**.  \n\n**Note-** Use 32-Bit **\u0027Win8.1U1\u0027** if possible otherwise you may have to increase size of **.imgPTN** and**VHDX.** The size of my install.wim\u0027 was only 1.6 GB. It\u0027s why I create a smallest VHDX of size 1050 MB. So size of .imgPTN file was only 3.2GB. You can make some experiments with the SIZE of your \u0027WTG.vhdx\u0027 so that it can just contains **\u0027Pointer Files\u0027.**\n\nCheers.... ![:cheers:](https://reboot.pro/public/style_emoticons/default/cheers.gif)\n\n"
    },
    {
      "id": "186024",
      "timestamp": "2014-07-22T09:59:31+00:00",
      "author": "devdevadev",
      "content": "AFAIK, UEFI can boot from hidden fat32 \u0027ptn2\u0027. It\u0027s why I will keep EFI directory in both fat32 \u0027ptn1\u0027 and fat32 \u0027ptn2\u0027 . HALIKUS says that PE (boot.wim) only sees the NTFS partition as it\u0027s Set Active. But in my case I will inject \u0027Filter driver\u0027 within PE (boot.wim and Win8.1U1SE_x64_boot.wim) and VHDX (WIMBoot.vhdx) so that it will see non-active NTFS \u0027ptn3\u0027 in UEFI mode. In case of BIOS/MBR/CSM mode I had tested that PE (boot.wim and Win8.1U1SE_x64_boot.wim) and VHDX (WIMBoot.vhdx) sees non-active NTFS \u0027ptn3\u0027 without any problem .  \n\n**Will \u0027WinPE\u0027(inject with filter drive) see non-active NTFS \u0027ptn3\u0027 in UEFI mode or not ?**  \n\nFollowing is my expected UEFI configuration for my \u0027Removable\u0027 USB Drive.  \n\n**Partition 1-** FAT32 - will contains only EFI directory  \n\nptn1:\\\\EFI Directory  \nptn1:\\\\EFI\\\\Boot\\\\bootia32.efi - x86 hardware / firmware  \nptn1:\\\\EFI\\\\Boot\\\\bootx64.efi (bootmgfw.efi) - amd64 hardware / firmware  \nptn1:\\\\EFI\\\\Microsoft\\\\Boot\\\\BCD - (Relocated to PTN3 \u0027boot.wim and boot.sdi\u0027, \u0027WIMBoot.vhdx\u0027 ,  \n\u0027Win8.1SE_x64_boot.wim and boot.sdi\u0027 )  \n\n**Partition 2-** FAT32 - Active - Hidden  \n\nptn2:\\\\EFI Directory  \nptn2:\\\\EFI\\\\Boot\\\\bootia32.efi - x86 hardware / firmware  \nptn2:\\\\EFI\\\\Boot\\\\bootx64.efi (bootmgfw.efi) - amd64 hardware / firmware  \nptn2:\\\\EFI\\\\Microsoft\\\\Boot\\\\BCD - (Relocated to PTN3 \u0027boot.wim and boot.sdi\u0027, \u0027WIMBoot.vhdx\u0027 ,  \n\u0027Win8.1SE_x64_boot.wim and boot.sdi\u0027 )  \n\n**Partition 3 -** NTFS - hidden  \n\nptn3:\\\\boot\\\\boot.sdi  \nptn3:\\\\sources\\\\Win8.1U1SE_x64_boot.wim (Injected with \u0027cfadisk\u0027 drive and taken form 64-bit \u0027Win8.1SE.iso\u0027)  \nptn3:\\\\sources\\\\boot.wim (Injected with \u0027cfadisk\u0027 drive and taken form 64-bit \u0027Win 8.1 U1\u0027)  \nptn3:\\\\sources\\\\setup.exe  \nptn3:\\\\sources\\\\install.wim (taken form 32-bit \u0027Win 8.1 U1\u0027)  \nptn3:\\\\WIMBoot.vhdx  \nptn3:\\\\BOOTNXT  \nAbove UEFI configuration will boot in following sequence-  \nUEFI -\\\u003e /efi/bootmgfw.efi -\\\u003e winload.efi -\\\u003e(ptn1/ptn2):\\\\efi\\\\Microsoft\\\\Boot\\\\BCD -\\\u003e ptn3:\\\\ Win8.1U1SE_x64_boot.wim  \n-\\\u003e /efi/bootmgfw.efi -\\\u003e winload.efi -\\\u003e(ptn1/ptn2):\\\\efi\\\\Microsoft\\\\Boot\\\\BCD -\\\u003e ptn3:\\\\ Win8.1U1 Installer  \n-\\\u003e /efi/bootmgfw.efi -\\\u003e winload.efi -\\\u003e(ptn1/ptn2):\\\\efi\\\\Microsoft\\\\Boot\\\\BCD -\\\u003e ptn3:\\\\ W2G+WIMBoot+VHDX\n\n**Will above expected UEFI USB configuration work or not ?**   \n\nPlease give me your precious suggestions regarding this configuration.........  \n\nRegards.........  \n\n"
    },
    {
      "id": "186160",
      "timestamp": "2014-07-27T18:09:49+00:00",
      "author": "Wonko the Sane",
      "content": "Since I was senselessly solicited to provide my \"precious opinion/suggestion\" via PM on this:  \n\u003e **Will above expected UEFI USB configuration work or not ?**   \n\u003e\n\u003e Please give me your precious suggestions regarding this configuration.........\n\nHere is my \"opinion/suggestion\" (cannot really say if \"precious\" ![:unsure:](https://reboot.pro/public/style_emoticons/default/unsure.png)):  \n\nWho knows? ![:dubbio:](https://reboot.pro/public/style_emoticons/default/dubbio.gif)  \nJust §@ç#ing try doing it! (and see what happens) ![:ranting2:](https://reboot.pro/public/style_emoticons/default/ranting2.gif)   \n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)  \nWonko\n\n"
    },
    {
      "id": "186166",
      "timestamp": "2014-07-27T20:12:12+00:00",
      "author": "saddlejib",
      "content": "You\u0027re getting increasingly impatient........(just an observation)....\n\n"
    },
    {
      "id": "186167",
      "timestamp": "2014-07-27T20:14:09+00:00",
      "author": "saddlejib",
      "content": "p.s still a wealth of wisdom... (much appreciated by me at least)\n\n"
    },
    {
      "id": "186168",
      "timestamp": "2014-07-27T20:15:49+00:00",
      "author": "saddlejib",
      "content": "I\u0027m returning to *somnambulism now....*\n\n"
    },
    {
      "id": "186175",
      "timestamp": "2014-07-28T00:55:56+00:00",
      "author": "devdevadev",
      "content": "\u003e You\u0027re getting increasingly impatient........(just an observation)....\n\nHello Sir,  \n\nAre you talking about me or anyone else ?  \n\nPlease mention @..........because it\u0027s confusing ?  \n\nRegards........   \n"
    },
    {
      "id": "186181",
      "timestamp": "2014-07-28T07:39:24+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e You\u0027re getting increasingly impatient........(just an observation)....\n\nYep :smile:, though I do have my specific reasons for this increase.\n\n@devdevadev\n\nDon\u0027t worry, it was directed at me, saddlejb woke up from his sleep just to highlight how snappy was my reply in post #18.\n\nBy convention, if not explicitly directed at someone/something, a reply is related to last post on the thread before the reply.\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "186270",
      "timestamp": "2014-08-01T04:54:24+00:00",
      "author": "devdevadev",
      "content": "[http://reboot.pro/to...e-2#entry186244](http://reboot.pro/topic/19956-change-path-from-bootmgr-bootbcd-to-wim9mgr-bootwim-wim9mgr-wim/page-2#entry186244 \"\")\n\n"
    },
    {
      "id": "186271",
      "timestamp": "2014-08-01T05:05:37+00:00",
      "author": "devdevadev",
      "content": "\u003e **++By Murphy 79, on 12 Jul 2014, -11:47 PM, said in PM++**\n\u003e\n\u003e The bootmgr.efi and bootia32.efi from the 32-bit image are useless since there are no supported Windows OS versions. I think they have a win32 tablet version that uses uefi, but it\u0027s not available to anyone except oems. I haven\u0027t seen that one for myself, only heard about it in the wimboot thread.  \n\u003e Anyhow, if you are going to use a boot.wim from the x64 image, just use the bootmgr.efi and bootx64.efi files from the x64 image.It might be a little confusing to trash one bootmgr.efi for another bootmgr.efi, but trust me, they are not compatible. the one from the 32-bit image will not work at all.\n\nIt means there are two \u0027bootmgr.efi\u0027. Both 32-bit and 64-bit \u0027bootmgr.efi\u0027 are different. Only name is same. So I have to use 64-bit \u0027bootmgr.efi\u0027 and \u0027bootx64.efi\u0027 files from the x64 image in order to UEFI booting of 32-bit OS in 64-bit firmware/system.\n\nRegards.......\n\n"
    },
    {
      "id": "186272",
      "timestamp": "2014-08-01T05:07:37+00:00",
      "author": "devdevadev",
      "content": "@cdob  \nThanks for testing.......  \n\u003e ++By Murphy 79, on 3 Aug 2014,- 11:47 PM, said in PM++\n\u003e\n\u003e setup.exe is what is ran after the system finally boots. If you didn\u0027t have that, it wouldn\u0027t do anything after booting.  \n\u003e It would just reboot.  \n\u003e\n\u003e boot.wim are different that install.wim in that they have a single bootable index.  \n\u003e In the typical boot.wim it has the first index \"Windows PE\" which is used during upgrades and is not bootable.  \n\u003e This information gets copied to the $\\~BTWINDOWS folder during setup and the system proceeds from there.  \n\u003e\n\u003e The 2nd index in the boot.wim is bootable and contains most of the same files as the first index except that it is designed for boot installs.  \n\u003e The exact difference, I do not know. I know that they are very similar, but one is bootable.  \n\u003e\n\u003e As far as the setup.exe\u0027s functionality... I know that you need the same file that is in your boot.wim\u0027s bootable index root (setup.exe) in the dvd\u0027s sources\\\\ folder.  \n\u003e If they mismatch because of updates or something, it will give you a driver error during install. Well technically it has to be in the same folder as whatever boot.wim file you booted to.  \n\u003e So if you use 2 different folders, the corresponding boot.wim\u0027s setup.exe would need to be in the said folder.  \n\u003e\n\u003e **I \"think\" they are the same for x86 and x64, but I could be mistaken. I** would do your own research if you plan on copy/pasting them around.  \n\u003e --------------  \n\u003e Think of boot.wim as the setup program and install.wim as the payload.  \n\u003e boot.wim only contains the files to run the setup program.  \n\u003e install.wim contains what it tries to install.  \n\u003e\n\u003e The setup.exe inside the boot.wim will detect the architecture of the index you are trying to install.  \n\u003e There\u0027s a flag for each index to list whether or not it\u0027s x86 or amd64. The overall wim file is not specific to x86 or x64, but each index is.  \n\u003e --------------  \n\u003e install.wim does not have an architecture. If you have x86 indexes it will try to use those on an x86 setup.  \n\u003e If you have x64 indexes, it will try to use those by default.  \n\u003e --------------  \n\u003e\n\u003e You cannot boot both x86 and x64 UEFI from the same iso.  \n\u003e It needs the bootmgr.efi from the x86 version for x86 booting and the x64 version for x64 booting.  \n\u003e --------------  \n\u003e\n\u003e I don\u0027t believe that the boot sector affects uefi booting. I think it\u0027s determined by the bootia32.efi, bootx64.efi and bootmgr.efi files. I really don\u0027t think you can dual-uefi-boot the x86 and x64 without modding the efi files to point to different bootmgr.efi files.  \n\nActually after reading murphy msgs , I was thinking about merging indexes of x86 and x64 into \u0027x86_boot.wim\u0027.\n\nBut now I decide to use both \u0027x86_boot.wim\u0027 and \u0027x64_boot.wim\u0027 in place of using only \u0027x86_boot.wim\u0027 because modification is looking very complex..\n\nI want x86 UEFI booting because of increasing WIN Tablet around.\n\nAre you totally sure that **\u0027bootmgr.efi\u0027 is not used at USB disk.**\n\nIs it necessary to use **64-bit \u0027install.wim\u0027** in order to**install \u0027Win 8.1 U1\u0027** into **64-bit UEFI firmwar/system** ?\n\nOR\n\nCan I also use **32-bit \u0027install.wim\u0027** in place of **64-bit \u0027install.wim\u0027** ?\n\nRegards...\n\n"
    },
    {
      "id": "186297",
      "timestamp": "2014-08-04T06:00:45+00:00",
      "author": "devdevadev",
      "content": "\u003e Guys,  \n\u003e I\u0027ve just found a new free app-launcher called **TBlauncher** (created by [Terabyte Unlimited](http://www.terabyteunlimited.com/howto/tbwinre_tutorial.htm \"External link\")). There are **32bit** and **64it** versions.  \n\u003e Looks like a good alternative for Pstart.  \n\u003e\n\u003e Download the following zip and inside you can find both:  \n\u003e [http://www.terabyteu.../wp/tbwinre.zip](http://www.terabyteunlimited.com/downloads/wp/tbwinre.zip \"External link\")  \n\u003e\n\u003e **tblauncher.exe** for 32bit WinPE.  \n\u003e **tblauncher64.exe** for 64bit WinPE.  \n\u003e\n\u003e So now we have a good standalone FREE app launcher for whichever architecture we want!  \n\u003e ![:clap:](http://reboot.pro/public/style_emoticons/default/clap.gif)  \n\u003e\n\u003e [http://reboot.pro/to...e-4#entry166910](http://reboot.pro/topic/16544-create-a-bootable-winpe-40-usb-drive/page-4#entry166910 \"\")  \n\u003e\n\u003e This guy also managed to get it going nicely:  \n\u003e [http://forums.mydigi...ll\u003d1#post697187](http://forums.mydigitallife.info/threads/35530-ADK-WinPE-4-0?p\u003d697187\u0026amp;amp;viewfull\u003d1#post697187 \"External link\")\n\u003e\n\u003e UEFI + BIOS bootable USB-stick with Win8 Recovery folder sources\\\\boot.wim\n\u003e\n\u003e is made with few mouseclicks in Win 8 Configuration \\\u0026amp;gt; Recovery menu  \n\u003e\n\u003e I have made TBx64.exe AutoIt3 program and added to system32 in Win8 Recovery boot.wim  \n\u003e Remove winpeshl.ini and add modified startnet.cmd to launch TBx64.exe and Recovery Environment.  \n\u003e\n\u003e TBx64.exe will search for TBLauncher64.exe found e.g. in in root of USB-stick.  \n\u003e All Apps can be in root of USB-stick and launched from TBLauncher Menu.  \n\u003e\n\u003e On booting from USB-stick then Recovery environment appears auto with TBLauncher Menu.  \n\u003e One can launch e.g. WinNTSetup2_x64.exe and prepare drive for install of any Windows e.g. XP  \n\u003e\n\u003e ![attachicon.gif](http://reboot.pro/public/style_images/metro/attachicon.gif)[W8_REC.jpg](http://reboot.pro/index.php?app\u003dcore\u0026amp;amp;module\u003dattach\u0026amp;amp;section\u003dattach\u0026amp;amp;attach_rel_module\u003dpost\u0026amp;amp;attach_id\u003d14129 \"\")  \n\u003e\n\u003e I would like to make better picture.  \n\u003e Do you know PrintScreen program that works in x64 Win8 Recovery environment ?  \n\u003e\n\u003e ![:cheers:](http://reboot.pro/public/style_emoticons/default/cheers.gif)  \n\u003e\n\u003e Download TBx64.7z from [http://www.mediafire.../?233dka636369k](http://www.mediafire.com/?233dka636369k \"External link\")  \n\u003e\n\u003e [http://reboot.pro/to...e-4#entry166946](http://reboot.pro/topic/16544-create-a-bootable-winpe-40-usb-drive/page-4#entry166946 \"\")\n\n***Hello Everyone....***   \n\nI want to create **\u0027TBLx86_boot.wim\u0027** and**\u0027TBLx64_boot.wim\u0027** in such a way so that both contains following \u0027Portable Apps\u0027 and  \n\u0027Drivers\u0027. And Both will show**\u0027TBLauncher\u0027** within **Windows Recovery Environment** (Troubleshoot Screen). So that I can use  \n**\u0027WinNTSetup_v3.61_x86-x64\u0027** in order to install either **\u0027WIMBoot\u0027** or**\u0027WIMBoot + VHDX\u0027** into LOCAL HARDDISK\u0027 of PC/**Tablets**   \nin both **UEFI (both x86 and x64)**and BIOS mode.  \n\n**1- Installed \u0027cfadisk\u0027 driver**  \n**2- File Manager**  \n**3- Explorer (x86-x64)**  \n**4- ImDisk (x86-x64)**  \n**6- BOOTICE v1.321 (x86-x64)**  \n**5- WinNTSetup v3.61 (x86-x64)**  \n**7- Notepad ++**  \n**8- Command Prompt**  \n**9- Take Screenshot (x86-x64)**  \n**10- TeraCopy (x86-x64)**  \n**11- Everything (x86-x64)**  \n**12- Task Manager**  \n**13- Portable VLC Player**  \n**14- Foxit Reader (x86-x64)**  \n**15- Image for Windows**  \n**16- DaRT To-ols**  \n**17- System Recovery Options**  \n**18- Recover Files**  \n**19- Hardware Info**  \n**20- WS405**\n\n![post-65263-0-38536600-1407393977.png](http://reboot.pro/uploads/monthly_08_2014/post-65263-0-38536600-1407393977.png)\n\n![post-65263-0-86540500-1407393991.png](http://reboot.pro/uploads/monthly_08_2014/post-65263-0-86540500-1407393991.png)\n\n![post-65263-0-00306400-1407394006.png](http://reboot.pro/uploads/monthly_08_2014/post-65263-0-00306400-1407394006.png)\n\n![post-65263-0-53048400-1407394056.jpg](http://reboot.pro/uploads/monthly_08_2014/post-65263-0-53048400-1407394056.jpg)\n\n![post-65263-0-62261400-1407394076.png](http://reboot.pro/uploads/monthly_08_2014/post-65263-0-62261400-1407394076.png)\n\n**-****------------------------------------------------------------------------------------------------------------------**\n\n**\\\\bootmgr.efi****(may be Optional because according to \u0027cdob\u0027 it does not use at USB disk)**   \n**\\\\efi\\\\boot\\\\bootia32.efi\n\\\\efi\\\\boot\\\\bootx64.efi\n\\\\efi\\\\microsoft\\\\w81x86.efi\n\\\\efi\\\\microsoft\\\\w81x64.efi\n\\\\efi\\\\microsoft\\\\boot\\\\bcd_Win8.1U1_Installer****(Relocated to \u0027boot.sdi** and **TBLx86_boot.wim\u0027 and \u0027boot.sdi** and**TBLx64_boot.wim\u0027)**   \n**\\\\boot\\\\boot.sdi\n\\\\sources\\\\TBLx86_boot.wim****(with a bootable index)**   \n**\\\\sources\\\\TBLx64_boot.wim****(with a bootable index)**   \n**\\\\sources\\\\w8186.exe\n\\\\sources\\\\w8164.exe\n\\\\sources\\\\install.wim****(want to use****only 32-bit \u0027install.wim\u0027 file,****But if** **not possible then have to use****c****ombined x86-x64 \u0027install.wim\u0027 file****)**  \n**------------------------------------------------------------------------------------------------------------------**\n\nI will also use **\u0027TBLx86_boot.wim\u0027** and**\u0027TBLx64_boot.wim\u0027** in order to extract/install**32-bit Win 8.1 U1** **\u0027install.wim\u0027**into Local Hard disk of PC/Tablet in both **UEFI (both x86 and x64)** and BIOS mode.  \n\nIf anybody know about the whole procedure for creating **\u0027TBLx86_boot.wim\u0027** and**\u0027TBLx64_boot.wim\u0027 ,**then please tell me about the Step by Step procedure.  \n\n***Thanks in Advance..............***  \n\n***Regards...........***.  \n\n#### Attached Thumbnails {#attach_wrap}\n\n* [![1.png](http://reboot.pro/uploads/monthly_08_2014/post-65263-0-38536600-1407393977_thumb.png)](http://reboot.pro/uploads/monthly_08_2014/post-65263-0-38536600-1407393977.png \"1.png - Size: 117.68KB\"){#ipb-attach-url-15010-0-53403200-1676066495}\n* [![2.png](http://reboot.pro/uploads/monthly_08_2014/post-65263-0-86540500-1407393991_thumb.png)](http://reboot.pro/uploads/monthly_08_2014/post-65263-0-86540500-1407393991.png \"2.png - Size: 30.55KB\"){#ipb-attach-url-15011-0-53412600-1676066495}\n* [![3.png](http://reboot.pro/uploads/monthly_08_2014/post-65263-0-00306400-1407394006_thumb.png)](http://reboot.pro/uploads/monthly_08_2014/post-65263-0-00306400-1407394006.png \"3.png - Size: 71.38KB\"){#ipb-attach-url-15012-0-53418700-1676066495}\n* [![4.jpg](http://reboot.pro/uploads/monthly_08_2014/post-65263-0-53048400-1407394056_thumb.jpg)](http://reboot.pro/uploads/monthly_08_2014/post-65263-0-53048400-1407394056.jpg \"4.jpg - Size: 121.02KB\"){#ipb-attach-url-15013-0-53423800-1676066495}\n* [![5.png](http://reboot.pro/uploads/monthly_08_2014/post-65263-0-62261400-1407394076_thumb.png)](http://reboot.pro/uploads/monthly_08_2014/post-65263-0-62261400-1407394076.png \"5.png - Size: 61.13KB\"){#ipb-attach-url-15014-0-53428500-1676066495}\n\n"
    },
    {
      "id": "186328",
      "timestamp": "2014-08-06T22:25:09+00:00",
      "author": "cdob",
      "content": "\u003e It means both \u0027x86_boot.wim\u0027 and \u0027x64_boot.wim\u0027 may be same if we copy required 64-bit UEFI files into \u0027x86_boot.wim\u0027 .  \n\u003e\n\u003e And then we can also use modified \u0027x86_boot.wim\u0027 in order to UEFI booting in x64-firmware/system. But for it we have to points efi\\\\microsoft\\\\boot\\\\bcd to \u0027winload.efi\u0027 from within the modified \u0027x86_boot.wim\u0027 instead of \u0027winload.exe\u0027.\nCan you describe more detailed?  \nWhich steps are required to boot a x86 boot.wim at amd64 hardware?  \n\nI get a error 0xc0000359 ntoskrnl.exe could not be loaded.  \nRead the x86 kernel fails at UEFI amd64 boot.  \n\n```\nidentifier              {5cd15b26-1c1c-11e4-96c1-000c29eec2b3}\ndevice                  ramdisk\u003d[F:]\\sources\\boot_x86.wim,{ramdiskoptions}\npath                    \\windows\\system64\\winload.efi\ndescription             UEFI_P1: boot_x86.wim  system64\\winload.efi\nosdevice                ramdisk\u003d[F:]\\sources\\boot_x86.wim,{ramdiskoptions}\nsystemroot              \\windows\ndetecthal               Yes\nwinpe                   Yes\n```\n\nWhat\u0027s the reason to support x86 at UEFI?  \nI expect 4 GB RAM at a UEFI machine.   \n"
    },
    {
      "id": "186329",
      "timestamp": "2014-08-07T02:18:50+00:00",
      "author": "devdevadev",
      "content": "@cdob\n\n**[http://reboot.pro/to...e-2#entry186272](http://reboot.pro/topic/19868-ultimate-super-smart-secret-removable-usb-drive-with-mega-booting/page-2#entry186272 \"\")**\n\nRegards.....\n\n"
    },
    {
      "id": "186869",
      "timestamp": "2014-08-31T10:12:58+00:00",
      "author": "devdevadev",
      "content": "I always use of **VHDX** along with **WIMBoot** because it provide following side advantages to me -\n\n**1-** In case of **\u0027WTG + WIMBoot + VHDX\u0027** , VHDX reduces overall Windows Installation time because during Installation I put VHDX within Hard disk and when Installation become complete then I copy VHDX from Hard disk to USB Drive. If I don\u0027t use VHDX then Windows Installation take hours. Actually I use very complex Multiboot configuration in my USB Drive. In case WIMBoot become corrupt then I don\u0027t have to format whole USB Partition. I only delete VHDX file and re-install windows within it. Suppose currently I am booting from **\u0027WTG + WIMBoot + VHDX\u0027** and I want to re-install WIMBoot within USB drive. So there is neither need to format whole USB partition nor restart System multiple times. I will create a different VHDX file within USB drive and install windows within it. And after one restart second VHDX will become ready to use. I can copy IMP. data from 1st VHDX to 2nd VHDX easily. And then can delete 1st VHDX without any problem.\n\nSo, If I use VHDX along with WIMBoot, then it save overall Windows Installation time, allow easy re-installation of WIMBoot without any hard work, better management of Windows Installation.\n\n**2-** In case of **\u0027WIMBoot + VHDX\u0027**, VHDX allow me to have Dual/Triple OS in a single Partition of my Internal Hard disk. And there is no need to keep one OS in one partition. And there is no need to format any partition of Internal hard disk again and again. I format only VHDX in order to re-install various WIMBoot\u0027s within C: drive of my system. I use AIO \u0027install.wim\u0027 file in my C: drive along with both \u0027Win8.1Pro.vhdx\u0027 and \u0027Win8.1Ent.vhdx\u0027. So if one OS will become corrupt then at lease 2nd OS work properly.\n\n**3-** I can copy **\u0027install.wim + VHDX + Boot files\u0027** from Hard disk to USB and vice-versa during emergency.\n\n**4-** We can also transfer **\u0027WIMBoot + VHDX\u0027**form one PC to another PC just by copy paste process. And there is no need to repeat whole windows installation again and again.\n\n**Note-**I always use dynamically VHDX files because it doesn\u0027t consume unnecessary space within drives.\n\n*Regards............*\n\n"
    },
    {
      "id": "186870",
      "timestamp": "2014-08-31T10:13:48+00:00",
      "author": "devdevadev",
      "content": "Hello Everyone......\n\nSometime before I got a**\u0027USB.zip\u0027** from *[here](https://mega.co.nz/#!gBxSRQIS!Rx5yjEp2SyPhqvjGvRPIjCQUKiQMqIoLiWXB8ezg6bI \"External link\")* which contains following files within **efi\\\\microsoft\\\\** directory-\n\n![post-65263-0-80684800-1409501268.png](http://reboot.pro/uploads/monthly_08_2014/post-65263-0-80684800-1409501268.png)\n\nCan anybody please tell me about the **use/role** of above **.efi** files during **UEFI Booting** ?\n\n***Regards...***  \n\n#### Attached Thumbnails {#attach_wrap}\n\n* [![HALIKUS EFI FILES.png](http://reboot.pro/uploads/monthly_08_2014/post-65263-0-80684800-1409501268_thumb.png)](http://reboot.pro/uploads/monthly_08_2014/post-65263-0-80684800-1409501268.png \"HALIKUS EFI FILES.png - Size: 26.42KB\"){#ipb-attach-url-15039-0-53433000-1676066495}\n\n"
    },
    {
      "id": "186875",
      "timestamp": "2014-08-31T15:19:12+00:00",
      "author": "devdevadev",
      "content": "Hello Everyone.....  \nI have three partition in my removable USB drive as follows-  \n**PTN 1 -** FAT32 - 5 GB - DATA  \n**PTN 2 -** FATE2 - 10 GB - E2B  \n**PTN 3 -** NTFS - 15 GB - WIN  \nAnd I have **\u0027SMART USB\u0027** directory within Internal Hard disk which contains three sub-directories as follows-  \n**\\\\SMART USB\\\\DATA**  \n**\\\\SMART USB\\\\E2B**  \n**\\\\SMART USB\\\\WIN**  \n**\\\\SMART USB\\\\SMART_USB.cmd**  \n**\\\\SMART USB\\\\SMART_USB_Shortcut.cmd**  \n**\\\\SMART USB\\\\SMART_USB_Shortcut.vbs**  \nI want to create a **\u0027SMART_USB.cmd\u0027** which will perform following functions-  \n1- Delete all content of**\u0027PTN 1\u0027** and copy content of **\u0027\\\\SMART USB\\\\DATA\u0027** folder into root of**\u0027PTN 1\u0027**  \n2- Make **\u0027PTN 2\u0027**visible to Windows  \n3- Delete all content of **\u0027PTN 2\u0027** and copy content of **\u0027\\\\SMART USB\\\\E2B\u0027** folder into root of **\u0027PTN 2\u0027**  \n4- Make **\u0027PTN 3\u0027**visible to Windows  \n5- Delete all content of**\u0027PTN 3\u0027** and copy content of **\u0027\\\\SMART USB\\\\WIN\u0027** folder into root of **\u0027PTN 3\u0027**  \n6- Make**\u0027****PTN 1\u0027**visible to Windows  \nShould I use \u0027**altmbr.bin\u0027** from [SYSLINUX](http://www.syslinux.org/wiki/index.php/Download \"External link\") package which allows to boot partition by number ?  \nCan anybody help me in finding ***CMD commands*** which will ***Unhide Hidden Partition*** (PTN2/PTN3/PTN1)\u0027 ?  \n***Thanks in Advance***\n\n"
    },
    {
      "id": "186879",
      "timestamp": "2014-09-01T02:53:50+00:00",
      "author": "devdevadev",
      "content": "Finally I got my new***\u0027SMART_USB.cmd\u0027***.\n\nThousands of thanks to**\u0027steve6375\u0027**for providing required code lines.....\n\n```\n@ECHO Off\ncls\n\n:: set cmd shell window size\nmode con: cols\u003d100 lines\u003d15\n\nSETLOCAL ENABLEEXTENSIONS\ncolor 48\n\npopd\npushd \"%~dp0\"\nif exist \"%systemdrive%\\Program Files\\RMPrepusb\\RMPartusb.exe\"  pushd \"%systemdrive%\\Program Files\\RMPrepusb\"\nif exist \"%systemdrive%\\Program Files (x86)\\RMPrepusb\\RMPartusb.exe\" pushd \"%systemdrive%\\Program Files (x86)\\RMPrepusb\"\nif not exist RMPARTUSB.exe echo Please install RMPrepUSB to the standard Program Files location \u0026 echo OR copy RMPartUSB.exe to %~dp0! \u0026 pause \u0026 goto :end\n\n\necho ____________________________________________________________________________________________________\necho ___________________________________,*\"*._ Welcome KRISHNA _.*\"*,________________________________________________________________________________________________________________________________________\necho.\n:: echo SELECT A USB DRIVE\n:: echo \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\necho.\nrmpartusb% LIST | find \"DRIVE\"\necho.\necho.\nset DD\u003d\nset /P DD\u003dPlease enter your lucky number: \nset /a DD\u003dDD\nif \"%DD%\"\u003d\u003d\"\" goto :end\nif \"%DD%\"\u003d\u003d\"0\" goto :end\n\nset USBDRIVELETTER\u003d\nREM get the drive letter of the newly formatted drive\nFOR /F \"tokens\u003d*\" %%A IN (\u0027RMPARTUSB DRIVE^\u003d%dd% GETDRV\u0027) DO %%A\nIf \"%USBDRIVELETTER%\"\u003d\u003d\"\" goto :EOF\n\ncls\n\n\n\n\n::re-order partitions into correct order\nRMPARTUSB drive\u003d%DD% FIRSTPART\u003d0 SURE\n\n:: Erase all files and folders of \u0027PTN 1\u0027\nrd /q /s %USBDRIVELETTER%\\\nattrib /S -r -a -h -s %USBDRIVELETTER%\\*.*\ndel /S /q %USBDRIVELETTER%\\*.*\nrd /s /q %USBDRIVELETTER%\\*.*\n\n:: copy content of \u0027\\SMART USB\\DATA\u0027 folder to root of \u0027PTN 1\u0027\nEcho copying \"%~dp0DATA\" to %USBDRIVELETTER%\nxcopy /herky \"%~dp0DATA\\*.*\" \"%USBDRIVELETTER%\\*.*\"\n\n::  Apply attribute commands to the content of \u0027PTN1\u0027\nattrib +h +r +s /s /d %USBDRIVELETTER%\\*.* \u003enul 2\u003enul\nattrib +h -r -s /s /d %USBDRIVELETTER%\\Welcome.exe \u003enul 2\u003enul\n\n\n\n\n::set partition 2 (2nd partition) as the accessible partition\nRMPARTUSB drive\u003d%DD% FIRSTPART\u003d2 SURE\n\n:: Erase all files and folders of \u0027PTN 2\u0027\nrd /q /s %USBDRIVELETTER%\\\nattrib /S -r -a -h -s %USBDRIVELETTER%\\*.*\ndel /S /q %USBDRIVELETTER%\\*.*\nrd /s /q %USBDRIVELETTER%\\*.*\n\n:: copy content of \u0027\\SMART USB\\E2B\u0027 folder to root of \u0027PTN 2\u0027\nEcho copying \"%~dp0E2B\" to %USBDRIVELETTER%\nxcopy /herky \"%~dp0E2B\\*.*\" \"%USBDRIVELETTER%\\*.*\"\n\n::  Apply attribute commands to the content of \u0027PTN2\u0027\nattrib +h +r +s /s /d %USBDRIVELETTER%\\*.* \u003enul 2\u003enul\nattrib +h -r -s /s /d %USBDRIVELETTER%\\Welcome.exe \u003enul 2\u003enul\n\n\n\n\n::set partition 3 (3nd partition) as the accessible partition\nRMPARTUSB drive\u003d%DD% FIRSTPART\u003d3 SURE\n\n:: Erase all files and folders of \u0027PTN 3\u0027\nrd /q /s %USBDRIVELETTER%\\\nattrib /S -r -a -h -s %USBDRIVELETTER%\\*.*\ndel /S /q %USBDRIVELETTER%\\*.*\nrd /s /q %USBDRIVELETTER%\\*.*\n\n:: copy content of \u0027\\SMART USB\\WIN\u0027 folder into root of \u0027PTN 3\u0027\nEcho copying \"%~dp0WIN\" to %USBDRIVELETTER%\nxcopy /herky \"%~dp0WIN\\*.*\" \"%USBDRIVELETTER%\\*.*\"\n\n::  Apply attribute commands to the content of \u0027PTN 3\u0027\nattrib +h +r +s /s /d %USBDRIVELETTER%\\*.* \u003enul 2\u003enul\nattrib +h -r -s /s /d %USBDRIVELETTER%\\Welcome.exe \u003enul 2\u003enul\n\n\n\n\n::re-order partitions into correct order\nRMPARTUSB drive\u003d%DD% FIRSTPART\u003d0 SURE\n\ncls\n```\n\n***Cheers........***\n\n"
    },
    {
      "id": "186880",
      "timestamp": "2014-09-01T05:46:00+00:00",
      "author": "devdevadev",
      "content": "I want to backup **MBR** to ***LBA31, LBA32*** and ***LBA33*** whenever ***PTN1, PTN2*** and***PTN3*** become accessible to Windows.\n\nSo what code should I use in place of **\u0027????\u0027**?\n\n```\n::re-order partitions into correct order\nRMPARTUSB drive\u003d%DD% FIRSTPART\u003d0 SURE\n\n::Backup MBR to LBA31\n        ????\n\n\n::set partition 2 (2nd partition) as the accessible partition\nRMPARTUSB drive\u003d%DD% FIRSTPART\u003d2 SURE\n\n::Backup MBR to LBA32\n        ????\n\n\n::set partition 3 (3nd partition) as the accessible partition\nRMPARTUSB drive\u003d%DD% FIRSTPART\u003d3 SURE\n\n::Backup MBR to LBA33\n        ????\n\n\n::re-order partitions into correct order\nRMPARTUSB drive\u003d%DD% FIRSTPART\u003d0 SURE\n\ncls\n```\n\nPlease help me.......\n\n"
    },
    {
      "id": "186926",
      "timestamp": "2014-09-02T14:04:04+00:00",
      "author": "devdevadev",
      "content": "Finally I got RMPARTUSB code lines in order to backup **MBR** from **LBA0** to **LBA31, LBA32** and **LBA33** whenever ***PTN1, PTN2*** and***PTN3*** become accessible to Windows. So now my new **\u0027SMART_USB.cmd\u0027** is -\n\n```\n@ECHO Off\ncls\n\n:: set cmd shell window size\nmode con: cols\u003d100 lines\u003d15\n\nSETLOCAL ENABLEEXTENSIONS\ncolor 48\n\n\npopd\npushd \"%~dp0\"\nif exist \"%systemdrive%\\Program Files\\RMPrepusb\\RMPartusb.exe\"  pushd \"%systemdrive%\\Program Files\\RMPrepusb\"\nif exist \"%systemdrive%\\Program Files (x86)\\RMPrepusb\\RMPartusb.exe\" pushd \"%systemdrive%\\Program Files (x86)\\RMPrepusb\"\nif not exist RMPARTUSB.exe echo Please install RMPrepUSB to the standard Program Files location \u0026 echo OR copy RMPartUSB.exe to %~dp0! \u0026 pause \u0026 goto :end\n\n\necho ____________________________________________________________________________________________________\necho ___________________________________,*\"*._ Welcome KRISHNA _.*\"*,________________________________________________________________________________________________________________________________________\necho.\n:: echo SELECT A USB DRIVE\n:: echo \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\necho.\nrmpartusb% LIST | find \"DRIVE\"\necho.\necho.\nset DD\u003d\nset /P DD\u003dPlease enter your lucky number: \nset /a DD\u003dDD\nif \"%DD%\"\u003d\u003d\"\" goto :end\nif \"%DD%\"\u003d\u003d\"0\" goto :end\n\nset USBDRIVELETTER\u003d\nREM get the drive letter of the newly formatted drive\nFOR /F \"tokens\u003d*\" %%A IN (\u0027RMPARTUSB DRIVE^\u003d%dd% GETDRV\u0027) DO %%A\nIf \"%USBDRIVELETTER%\"\u003d\u003d\"\" goto :EOF\n\ncls\n\n\n::Re-order Partitions into correct order\nRMPARTUSB DRIVE\u003d%DD% FIRSTPART\u003d0 SURE\n\n::Backup MBR to LBA31\nRMPARTUSB DRIVE\u003d%DD% USBTOFILE FILE\u003d\"x31.bin\" FILESTART\u003d0 USBSTART\u003d0  LENGTH\u003d1SEC SURE\nRMPARTUSB DRIVE\u003d%DD% FILETOUSB FILE\u003d\"x31.bin\" FILESTART\u003d0 USBSTART\u003d31 LENGTH\u003d1SEC SURE\n\n:: Copy content of \u0027\\SMART USB\\DATA\u0027 folder to root of \u0027PTN 1\u0027\nEcho copying \"%~dp0DATA\" to %USBDRIVELETTER%\nxcopy /herky \"%~dp0DATA\\*.*\" \"%USBDRIVELETTER%\\*.*\"\n\n::  Apply attribute commands to the content of \u0027PTN1\u0027\nattrib +h +r +s /s /d %USBDRIVELETTER%\\*.* \u003enul 2\u003enul\nattrib +h -r -s /s /d %USBDRIVELETTER%\\Welcome.exe \u003enul 2\u003enul\n\n\n\n::Set Partition 2 (2nd Partition) as the accessible Partition\nRMPARTUSB DRIVE\u003d%DD% FIRSTPART\u003d2 SURE\n\n::Backup MBR to LBA32\nRMPARTUSB DRIVE\u003d%DD% USBTOFILE FILE\u003d\"x32.bin\" FILESTART\u003d0 USBSTART\u003d0  LENGTH\u003d1SEC SURE\nRMPARTUSB DRIVE\u003d%DD% FILETOUSB FILE\u003d\"x32.bin\" FILESTART\u003d0 USBSTART\u003d32 LENGTH\u003d1SEC SURE\n\n:: Erase all files and folders of \u0027PTN 2\u0027\nrd /q /s %USBDRIVELETTER%\\\nattrib /S -r -a -h -s %USBDRIVELETTER%\\*.*\ndel /S /q %USBDRIVELETTER%\\*.*\nrd /s /q %USBDRIVELETTER%\\*.*\n\n:: Copy content of \u0027\\SMART USB\\E2B\u0027 folder to root of \u0027PTN 2\u0027\nEcho copying \"%~dp0E2B\" to %USBDRIVELETTER%\nxcopy /herky \"%~dp0E2B\\*.*\" \"%USBDRIVELETTER%\\*.*\"\n\n::  Apply attribute commands to the content of \u0027PTN2\u0027\nattrib +h +r +s /s /d %USBDRIVELETTER%\\*.* \u003enul 2\u003enul\nattrib +h -r -s /s /d %USBDRIVELETTER%\\Welcome.exe \u003enul 2\u003enul\n\n\n\n::Set Partition 3 (3nd Partition) as the accessible Partition\nRMPARTUSB DRIVE\u003d%DD% FIRSTPART\u003d3 SURE\n\n::Backup MBR to LBA33\nRMPARTUSB DRIVE\u003d%DD% USBTOFILE FILE\u003d\"x33.bin\" FILESTART\u003d0 USBSTART\u003d0  LENGTH\u003d1SEC SURE\nRMPARTUSB DRIVE\u003d%DD% FILETOUSB FILE\u003d\"x33.bin\" FILESTART\u003d0 USBSTART\u003d33 LENGTH\u003d1SEC SURE\n\n:: Erase all files and folders of \u0027PTN 3\u0027\nrd /q /s %USBDRIVELETTER%\\\nattrib /S -r -a -h -s %USBDRIVELETTER%\\*.*\ndel /S /q %USBDRIVELETTER%\\*.*\nrd /s /q %USBDRIVELETTER%\\*.*\n\n:: Copy content of \u0027\\SMART USB\\WIN\u0027 folder into root of \u0027PTN 3\u0027\nEcho copying \"%~dp0WIN\" to %USBDRIVELETTER%\nxcopy /herky \"%~dp0WIN\\*.*\" \"%USBDRIVELETTER%\\*.*\"\n\n::  Apply attribute commands to the content of \u0027PTN 3\u0027\nattrib +h +r +s /s /d %USBDRIVELETTER%\\*.* \u003enul 2\u003enul\nattrib +h -r -s /s /d %USBDRIVELETTER%\\Welcome.exe \u003enul 2\u003enul\n\n\n\n::Re-order Partitions into correct order\nRMPARTUSB DRIVE\u003d%DD% FIRSTPART\u003d0 SURE\n\ncls\n```\n\n***Cheers...... :smile:***\n\n"
    },
    {
      "id": "187776",
      "timestamp": "2014-09-27T03:43:18+00:00",
      "author": "devdevadev",
      "content": "I use **\u0027GetLine.cmd\u0027** along with \u0027Restore_PTN.cmd\u0027 and \u0027SMART_USB.cmd\u0027 in order to set \u0027Master Password\u0027 for authentication.\n\n**++GetLine.cmd++**\n\n```\n:: GetLine - no echo, use for getting a passphrase\n\n:: Usage:  call GetLine.cmd\n::         if not \"%Line%\"\u003d\u003d\"Secret password\" goto :EOF\n::\n:: Returns:  %Line%\n:: echo\u0027s * for each character entered by user\n:: can use \u003cbackspace\u003e key\n:: press enter to finish input\n\n   @Echo Off   \n   :HInput\n   ::Version 3.0     \n   SetLocal DisableDelayedExpansion\n   Set \"Line\u003d\"\n   Rem Save 0x08 character in BS variable\n   For /F %%# In (\n   \u0027\"Prompt;$H\u0026For %%# in (1) Do Rem\"\u0027\n   ) Do Set \"BS\u003d%%#\"\n\n   :HILoop\n   Set \"Key\u003d\"\n   For /F \"delims\u003d\" %%# In (\n   \u0027Xcopy /L /W \"%~f0\" \"%~f0\" 2^\u003eNul\u0027\n   ) Do If Not Defined Key Set \"Key\u003d%%#\"\n   Set \"Key\u003d%Key:~-1%\"\n   SetLocal EnableDelayedExpansion\n   If Not Defined Key Goto :HIEnd\n   If %BS%\u003d\u003d^%Key% (Set /P \"\u003d%BS% %BS%\" \u003cNul\n   Set \"Key\u003d\"\n   If Defined Line Set \"Line\u003d!Line:~0,-1!\"\n   ) Else Set /P \"\u003d*\" \u003cNul\n   If Not Defined Line (EndLocal \u0026Set \"Line\u003d%Key%\"\n   ) Else For /F delims^\u003d^ eol^\u003d %%# In (\n   \"!Line!\") Do EndLocal \u0026Set \"Line\u003d%%#%Key%\"\n   Goto :HILoop\n   :HIEnd\necho.\nendlocal\u0026 endlocal\u0026 set Line\u003d%Line%\n\n```\n\n\u003cbr /\u003e\n\n"
    },
    {
      "id": "187781",
      "timestamp": "2014-09-27T10:41:31+00:00",
      "author": "devdevadev",
      "content": "**@tblo**  \n\nHi.......  \nI am also using slightly modified **\u0027RestoreMBR\u0027.** Actually following is the whole setup which I always keep within **\u0027SMART USB\u0027** directory within my PC.  \n\n**SMART USB\\\\DATA (For Storage Purposes)**  \n**SMART USB\\\\E2B (Contains E2B files along with all .imgPTN payload files and Imp. software and drivers)**  \n**SMART USB\\\\WIN (Contains boot.wim , install.wim , vhdx etc...)**  \n**SMART USB\\\\DEV\\\\RestorePTN.exe**  \n**SMART USB\\\\E2B\\\\RestorePTN.exe**  \n**SMART USB\\\\WIN\\\\RestorePTN.exe**  \n**SMART USB\\\\GetLine.cmd**  \n**SMART USB\\\\grubinst.exe**  \n**SMART USB\\\\grubinst_new.exe**  \n**SMART USB\\\\LockDismount.exe**  \n**SMART USB\\\\MSVBVM60.DLL**  \n**SMART USB\\\\RMPARTUSB.exe**  \n**SMART USB\\\\SMART_USB.cmd (It create my whole \u0027SMART USB\u0027 by just one click )**  \n**SMART USB\\\\SMART_USB_Shortcut.cmd (It create \u0027SMART USB\u0027 shortcut in Desktop)**  \n**SMART USB\\\\SMART_USB_Shortcut.vbs**  \n**SMART USB\\\\touchdrv.exe**  \n\n**Note-**   \n\n**1-** My all **.imgPTN** payload files already contains **\u0027RestorePTN.exe\u0027** . **RestorePTN.exe** contains following files-  \n\n**RMPARTUSB.exe**  \n**MSVBVM60.DLL**  \n**GetLine.cmd**  \n**Restore_PTN.cmd**  \n\n**2-** I also have to keep a **.txt file** in following format along with all**.imgPTN** payload files **(Except WTG.imgPTN)** in order to backup **CSM-MBR** of each**.imgPTN** payload files. So that I can switch to any **.imgPTN** within from **UEFI System** without changing BIOS mode..  \n\ne.g.  \n\n**Win7Ult-SP1-x86-Mar2014.txt**\n\n```\ntitle Win 7 Ultimate\\n  \n/%grub%/qrun.g4b $HOME$/Win7Ult-SP1-x86-Mar2014.imgPTNAUTO\ndd if\u003d(hd0)+1 of\u003d(hd0)37+1\nboot\n```\n\n**Win81AIO-S14-20in1-x86-en-US-Mar2014.txt**\n\n```\ntitle Win 8.1 Update 1\\n  \n/%grub%/qrun.g4b $HOME$/Win81AIO-S14-20in1-x86-en-US-Mar2014.imgPTNAUTO\ndd if\u003d(hd0)+1 of\u003d(hd0)38+1\nboot\n```\n\nWhen I want to to re-create my fully working **\u0027SMART USB\u0027** , then I just have to double click **\u0027SMART USB\u0027** shortcut in the Desktop. And then **\u0027SMART_USB.cmd\u0027** ask for USB selection just after **\u0027Master Password\u0027 authentication****(Password \u003d fred****)**. After choosing desired USB Drive it first delete all previous contents of **PTN2** and **PTN3** . After that it automatically copy contents of **DATA, E2B** and **WIN** folders into**PTN1, PTN2** and**PTN3** of my USB Drive respectively. It also set hidden attribute to each files and folders except**\u0027SMART_PTN.exe\u0027** .\n\n++**SMART_USB.cmd**++\n\n```\n@ECHO Off\ncls\n\n:: set cmd shell window size\nmode con: cols\u003d100 lines\u003d15\n\nSETLOCAL ENABLEEXTENSIONS\ncolor 9F\n\ncall :check_Permissions\nif \"%ADMIN%\"\u003d\u003d\"FAIL\" goto :EOF\n\n\n\npushd \"%~dp0\"\n:plp\ncls\necho._______________________________________________________________________________________________________________________________________                             ____________________________________                                    *\"*._ Welcome KRISHNA _.*\"*                           \necho.\necho.\necho.\necho.\t\necho                                    *****************************\necho ----------------------------------- LET\u0027S DO SOMETHING SPECIAL! ------------------------------------                                   *****************************                                                                                        \necho.\necho.\necho.\ncall GetLine.cmd\nif /i \"%Line%\"\u003d\u003d\"abort\" exit /b\nif /i not \"%Line%\"\u003d\u003d\"fred\" goto :plp\ncls\n\n\n\nif exist \"%systemdrive%\\Program Files\\RMPrepusb\\RMPartusb.exe\"  pushd \"%systemdrive%\\Program Files\\RMPrepusb\"\nif exist \"%systemdrive%\\Program Files (x86)\\RMPrepusb\\RMPartusb.exe\" pushd \"%systemdrive%\\Program Files (x86)\\RMPrepusb\"\nif not exist RMPARTUSB.exe echo Please install RMPrepUSB to the standard Program Files location \u0026 echo OR copy RMPartUSB.exe to %~dp0! \u0026 pause \u0026 goto :end\n\n\n\n\necho._______________________________________________________________________________________________________________________________________                             ____________________________________                                    *\"*._ Welcome KRISHNA _.*\"*                           \necho.\necho.\n:: echo SELECT A USB DRIVE\n:: echo \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\necho.\nrmpartusb% LIST | find \"DRIVE\"\necho.\necho.\nset DD\u003d\nset /P DD\u003dPlease choose your desired USB Drive: \nset /a DD\u003dDD\nif \"%DD%\"\u003d\u003d\"\" goto :end\nif \"%DD%\"\u003d\u003d\"0\" goto :end\n\nset USBDRIVELETTER\u003d\nREM get the drive letter of the newly formatted drive\nFOR /F \"tokens\u003d*\" %%A IN (\u0027RMPARTUSB DRIVE^\u003d%dd% GETDRV\u0027) DO %%A\nIf \"%USBDRIVELETTER%\"\u003d\u003d\"\" goto :EOF\n\n\ncls\n\n\n::Re-order Partitions into correct order\nRMPARTUSB DRIVE\u003d%DD% FIRSTPART\u003d0 SURE\n\n::Backup MBR to LBA29\nRMPARTUSB DRIVE\u003d%DD% USBTOFILE FILE\u003d\"x29.bin\" FILESTART\u003d0 USBSTART\u003d0  LENGTH\u003d1SEC SURE\nRMPARTUSB DRIVE\u003d%DD% FILETOUSB FILE\u003d\"x29.bin\" FILESTART\u003d0 USBSTART\u003d29 LENGTH\u003d1SEC SURE\n\n:: Copy content of \u0027\\SMART USB\\DEV\u0027 folder to root of \u0027PTN 1\u0027\nEcho copying \"%~dp0DEV\" to %USBDRIVELETTER%\nxcopy /herky \"%~dp0DEV\\*.*\" \"%USBDRIVELETTER%\\*.*\"\n\n::  Apply attribute commands to the content of \u0027PTN1\u0027\nattrib +h +r +s /s /d %USBDRIVELETTER%\\\"EFI\" \u003enul 2\u003enul\nattrib +h -r -s /s /d %USBDRIVELETTER%\\Welcome.exe \u003enul 2\u003enul\nattrib -h -s /s /d %USBDRIVELETTER%\\\"Welcome\" \u003enul 2\u003enul\n\n\n\n\n::Set Partition 2 (2nd Partition) as the accessible Partition\nRMPARTUSB DRIVE\u003d%DD% FIRSTPART\u003d2 SURE\n\n::Backup MBR to LBA32\nRMPARTUSB DRIVE\u003d%DD% USBTOFILE FILE\u003d\"x32.bin\" FILESTART\u003d0 USBSTART\u003d0  LENGTH\u003d1SEC SURE\nRMPARTUSB DRIVE\u003d%DD% FILETOUSB FILE\u003d\"x32.bin\" FILESTART\u003d0 USBSTART\u003d32 LENGTH\u003d1SEC SURE\n\n:: Erase all files and folders of \u0027PTN 2\u0027\nrd /q /s %USBDRIVELETTER%\\\nattrib /S -r -a -h -s %USBDRIVELETTER%\\*.*\ndel /S /q %USBDRIVELETTER%\\*.*\nrd /s /q %USBDRIVELETTER%\\*.*\n\n:: Copy content of \u0027\\SMART USB\\E2B\u0027 folder to root of \u0027PTN 2\u0027\nEcho copying \"%~dp0E2B\" to %USBDRIVELETTER%\nxcopy /herky \"%~dp0E2B\\*.*\" \"%USBDRIVELETTER%\\*.*\"\n\n::  Apply attribute commands to the content of \u0027PTN2\u0027\nattrib +h +r +s /s /d %USBDRIVELETTER%\\_ISO \u003enul 2\u003enul\nattrib +h +r +s /s /d %USBDRIVELETTER%\\Efi \u003enul 2\u003enul\nattrib +h +r +s /s /d %USBDRIVELETTER%\\\"Smart Apps\" \u003enul 2\u003enul\nattrib +h +r +s /s /d %USBDRIVELETTER%\\autorun.inf \u003enul 2\u003enul\nattrib +h +r +s /s /d %USBDRIVELETTER%\\autounattend.xml \u003enul 2\u003enul\nattrib +h +r +s /s /d %USBDRIVELETTER%\\e2b.ico \u003enul 2\u003enul\nattrib +h +r +s /s /d %USBDRIVELETTER%\\FASTLOAD.YES \u003enul 2\u003enul\nattrib +h +r +s /s /d %USBDRIVELETTER%\\grldr \u003enul 2\u003enul\nattrib +h +r +s /s /d %USBDRIVELETTER%\\HitmanPro.exe \u003enul 2\u003enul\nattrib +h +r +s /s /d %USBDRIVELETTER%\\HitmanPro_x64.exe \u003enul 2\u003enul\nattrib +h +r +s /s /d %USBDRIVELETTER%\\Kickstarter.exe \u003enul 2\u003enul\nattrib +h +r +s /s /d %USBDRIVELETTER%\\menu.lst \u003enul 2\u003enul\nattrib +h +r +s /s /d %USBDRIVELETTER%\\PassPass.bak \u003enul 2\u003enul\nattrib +h +r +s /s /d %USBDRIVELETTER%\\ReadMe.txt \u003enul 2\u003enul\nattrib +h +r +s /s /d %USBDRIVELETTER%\\unattend.xml \u003enul 2\u003enul\nattrib +h +r +s /s /d %USBDRIVELETTER%\\SMART_USB.cmd \u003enul 2\u003enul\nattrib +h +r +s /s /d %USBDRIVELETTER%\\SMART_USB_Shortcut.cmd \u003enul 2\u003enul\nattrib +h +r +s /s /d %USBDRIVELETTER%\\SMART_USB_Shortcut.vbs \u003enul 2\u003enul\nattrib +h -r -s /s /d %USBDRIVELETTER%\\Welcome.exe \u003enul 2\u003enul\nattrib -h -s /s /d %USBDRIVELETTER%\\\"Welcome\" \u003enul 2\u003enul\n\n\n\n\n::Set Partition 3 (3nd Partition) as the accessible Partition\nRMPARTUSB DRIVE\u003d%DD% FIRSTPART\u003d3 SURE\n\n::Backup MBR to LBA33\nRMPARTUSB DRIVE\u003d%DD% USBTOFILE FILE\u003d\"x33.bin\" FILESTART\u003d0 USBSTART\u003d0  LENGTH\u003d1SEC SURE\nRMPARTUSB DRIVE\u003d%DD% FILETOUSB FILE\u003d\"x33.bin\" FILESTART\u003d0 USBSTART\u003d33 LENGTH\u003d1SEC SURE\n\n:: Erase all files and folders of \u0027PTN 3\u0027\nrd /q /s %USBDRIVELETTER%\\\nattrib /S -r -a -h -s %USBDRIVELETTER%\\*.*\ndel /S /q %USBDRIVELETTER%\\*.*\nrd /s /q %USBDRIVELETTER%\\*.*\n\n:: Copy content of \u0027\\SMART USB\\WIN\u0027 folder into root of \u0027PTN 3\u0027\nEcho copying \"%~dp0WIN\" to %USBDRIVELETTER%\nxcopy /herky \"%~dp0WIN\\*.*\" \"%USBDRIVELETTER%\\*.*\"\n\n::  Apply attribute commands to the content of \u0027PTN 3\u0027\nattrib +h +r +s /s /d %USBDRIVELETTER%\\*.* \u003enul 2\u003enul\nattrib +h -r -s /s /d %USBDRIVELETTER%\\Welcome.exe \u003enul 2\u003enul\nattrib -h -s /s /d %USBDRIVELETTER%\\\"Welcome\" \u003enul 2\u003enul\n\n\n\n\n::Re-order Partitions into correct order\nRMPARTUSB DRIVE\u003d%DD% FIRSTPART\u003d0 SURE\n\n\n\n\n\nREM install grub4dos - use new grubinst to install to PBR\necho Installing grub4dos to PBR of %USBDRIVELETTER%...\nset GR\u003dgrubinst_new.exe\n\nif \"%dd%\"\u003d\u003d\"0\" exit\n\nREM Dismount the drive, run grubinst, remount the drive\n\"%~dp0LockDismount.exe\" -force %dd% %GR% -t\u003d0 --install-partition\u003d1 (hd%dd%)\nIf errorlevel 1 color 4f \u0026 pause \u0026 exit\nREM use touchdrv to ensure MBR changes are not removed by Windows!\ntouchdrv %USBDRIVELETTER%\n\n\nREM also install to MBR\necho.\necho Installing grub4dos to MBR of %USBDRIVELETTER%...\nset GR\u003dgrubinst.exe\nif %DD% GEQ 10 set GR\u003dgrubinst_new.exe\n\"%~dp0LockDismount.exe\" -force %dd% %GR% -t\u003d0 --skip-mbr-test (hd%dd%)\nIf errorlevel 1 color 4f \u0026 pause \u0026 exit\ntouchdrv %USBDRIVELETTER%\n\n\ncls\n```\n\n++**Restore_PTN.cmd**++\n\n```\n@ECHO Off\ncls\n\n:: set cmd shell window size\nmode con: cols\u003d100 lines\u003d15\n\nSETLOCAL ENABLEEXTENSIONS\ncolor 9F\n\ncall :check_Permissions\nif \"%ADMIN%\"\u003d\u003d\"FAIL\" goto :EOF\n\n\nEcho copying %~dp0 to %SystemDrive%\\e2b folder...\nxcopy /herky \"%~dp0*.*\" \"%SystemDrive%\\e2b\\*.*\"\n\n\n\npushd \"%~dp0\"\n:plp\ncls\necho._______________________________________________________________________________________________________________________________________                             ____________________________________                                    *\"*._ Welcome KRISHNA _.*\"*                           \necho.\necho.\necho.\necho.\t\necho                                    *****************************\necho ----------------------------------- LET\u0027S DO SOMETHING SPECIAL! ------------------------------------                                   *****************************                                                                                        \necho.\necho.\necho.\ncall GetLine.cmd\nif /i \"%Line%\"\u003d\u003d\"abort\" exit /b\nif /i not \"%Line%\"\u003d\u003d\"fred\" goto :plp\ncls\n\n\n\nif exist \"%systemdrive%\\Program Files\\RMPrepusb\\RMPartusb.exe\"  pushd \"%systemdrive%\\Program Files\\RMPrepusb\"\nif exist \"%systemdrive%\\Program Files (x86)\\RMPrepusb\\RMPartusb.exe\" pushd \"%systemdrive%\\Program Files (x86)\\RMPrepusb\"\nif not exist RMPARTUSB.exe echo Please install RMPrepUSB to the standard Program Files location \u0026 echo OR copy RMPartUSB.exe to %~dp0! \u0026 pause \u0026 goto :end\n\n\n\n\necho._______________________________________________________________________________________________________________________________________                             ____________________________________                                    *\"*._ Welcome KRISHNA _.*\"*                           \necho.\necho.\t\n:: echo SELECT A USB DRIVE\n:: echo \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\necho.\nrmpartusb% LIST | find \"DRIVE\"\necho.\necho.\nset DD\u003d\nset /P DD\u003dPlease choose your desired USB Drive: \nset /a DD\u003dDD\nif \"%DD%\"\u003d\u003d\"\" goto :end\nif \"%DD%\"\u003d\u003d\"0\" goto :end\n\nset USBDRIVELETTER\u003d\nREM get the drive letter of the newly formatted drive\nFOR /F \"tokens\u003d*\" %%A IN (\u0027RMPARTUSB DRIVE^\u003d%dd% GETDRV\u0027) DO %%A\nIf \"%USBDRIVELETTER%\"\u003d\u003d\"\" goto :EOF\n\n\n\n:: echo Hide/Unhide \u0027Smart Apps\u0027 folder\n:: echo \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\necho.\nset ttt\u003d%USBDRIVELETTER%\\\"Smart Apps\"\nattrib %ttt% | find \" SHR \" \u003e nul \u0026 if  not errorlevel 1 goto :PTN\n\n:: hide the folder\nattrib +h +r +s /s /d %ttt%\ngoto :h1\n\n:unhide\n:: unhide the folder\nattrib -h -s /s /d %ttt%\n:h1\n\n\n\n:PTN\n\n:: --- RestorMBR ---\n\ncls\ncolor 9F\n\necho._______________________________________________________________________________________________________________________________________                             ____________________________________                                    *\"*._ Welcome KRISHNA _.*\"*                           \necho.\t\n\n\necho. Choose a RestoreMBR Type:\necho.\necho.   1\u003d Restore MBR from LBA30 [Data Partition will be visible to Windows]\necho.   2\u003d Restore MBR from LBA32  [E2B Partition will be visible to Windows]\necho.   3\u003d Restore MBR from LBA33  [WIN Partition wiil be visible to Windows]\necho.   A\u003d Abort\necho. Esc\u003d Switch to .imgPTN Partition Images\n\n\necho.\nset ask\u003d\nif not \"%AUTORUN%\"\u003d\u003d\"1\" set /p ask\u003dWHERE YOU WANT TO SWITCH ?   \nif /i \"%ask%\"\u003d\u003d\"A\" goto :EOF\n\n:: Set attribute to \u0027Smart Apps\u0027 folder and \u0027WELCOME.exe\u0027 file\nattrib +h +r +s /s /d %USBDRIVELETTER%\\\"Smart Apps\"\nattrib +h /s /d %USBDRIVELETTER%\\\"WELCOME.exe\"\n\ncls\n\nif /i \"%ask%\"\u003d\u003d\"2\" goto :PTN2\nif /i \"%ask%\"\u003d\u003d\"3\" goto :PTN3\nif /i \"%ask%\"\u003d\u003d\" \" goto :CSMBR\nif /i \"%ask%\"\u003d\u003d\"  \" goto :unhide\n\n\nset LBA\u003d29\nset MBR\u003d\nset PTN\u003d\ncall :getsec\nif \"%MBR%%PTN%\"\u003d\u003d\"11\" goto :gotsec\n\nset LBA\u003d30\nset MBR\u003d\nset PTN\u003d\ncall :getsec\nif \"%MBR%%PTN%\"\u003d\u003d\"11\" goto :gotsec\n\nset LBA\u003d60\nset MBR\u003d\nset PTN\u003d\ncall :getsec\nif \"%MBR%%PTN%\"\u003d\u003d\"11\" goto :gotsec\n\nset LBA\u003d1\nset MBR\u003d\nset PTN\u003d\ncall :getsec\nif \"%MBR%%PTN%\"\u003d\u003d\"11\" goto :gotsec\necho No backup MBR found! \u0026 pause \u0026 goto :end\n\n\n:PTN2\n:: --- set LBA 32\nset LBA\u003d32\nset MBR\u003d\nset PTN\u003d\ncall :getsec\nif \"%MBR%%PTN%\"\u003d\u003d\"11\" goto :gotsec\n\n\n:PTN3\n:: --- set LBA 33\nset LBA\u003d33\nset MBR\u003d\nset PTN\u003d\ncall :getsec\nif \"%MBR%%PTN%\"\u003d\u003d\"11\" goto :gotsec\n\n\n:CSMBR\ncolor 1F\n:: --- Restor CSM-MBR ---\necho.\necho.\necho   Choose a CSM-MBR-\necho.\necho     1\u003d Easy Rescue Suite 2014\necho     2\u003d SB Golden Suite 2014\necho     3\u003d Ultimate Super Smart Solution 2014\necho     4\u003d Win7Ult-SP1-x86-Mar2014\necho     5\u003d Win81AIO-S14-20in1-x86-en-US-Mar2014\necho     6\u003d XXX Master Stroke 2014\necho     Y\u003d Previous Partition Image\necho     A\u003d Abort\necho.\n\nset ask\u003d\nif not \"%AUTORUN%\"\u003d\u003d\"Y\" set /p ask\u003dWHERE YOU WANT TO SWITCH ?      \nif /i \"%ask%\"\u003d\u003d\"1\" goto :LBA34\nif /i \"%ask%\"\u003d\u003d\"2\" goto :LBA35\nif /i \"%ask%\"\u003d\u003d\"3\" goto :LBA36\nif /i \"%ask%\"\u003d\u003d\"4\" goto :LBA37\nif /i \"%ask%\"\u003d\u003d\"5\" goto :LBA38\nif /i \"%ask%\"\u003d\u003d\"6\" goto :LBA39\nif /i \"%ask%\"\u003d\u003d\"A\" goto :EOF\nif /i \"%ask%\"\u003d\u003d\" \" goto :PTN\n\n\ncls\n\n\n:: LBA31\nset LBA\u003d31\nset MBR\u003d\nset PTN\u003d\ncall :getsec\nif \"%MBR%%PTN%\"\u003d\u003d\"11\" goto :gotsec\n\necho WARNING: No backup MBR found in LBA31 (please use latest version of E2B!)\nif not exist %TEMP%\\E2B0.TMP echo ERROR: No previous backup of CSM MBR found in %TEMP% folder! \u0026 pause \u0026 goto :end\necho.\necho Restoring MBR from %TEMP%\\E2B0.TMP...\nRMPARTUSB FILETOUSB drive\u003d%DD% FILE\u003d\"%TEMP%\\E2B0.TMP\" USBSTART\u003d0  LENGTH\u003d1SEC FILESTART\u003d0 SURE \u003e nul\nif errorlevel 1 echo WRITE FAILED! \u0026 pause \u0026 goto :end\necho MBR Restored OK - please disconnect and re-connect the E2B drive now.\ngoto :end\n\n\n:LBA34\n:: LBA34 should contain a backup\nset LBA\u003d34\nset MBR\u003d\nset PTN\u003d\ncall :getsec\nif \"%MBR%%PTN%\"\u003d\u003d\"11\" goto :gotsec\n\n:LBA35\n:: LBA35 should contain a backup\nset LBA\u003d35\nset MBR\u003d\nset PTN\u003d\ncall :getsec\nif \"%MBR%%PTN%\"\u003d\u003d\"11\" goto :gotsec\n\n:LBA36\n:: LBA36 should contain a backup\nset LBA\u003d36\nset MBR\u003d\nset PTN\u003d\ncall :getsec\nif \"%MBR%%PTN%\"\u003d\u003d\"11\" goto :gotsec\n\n:LBA37\n:: LBA37 should contain a backup\nset LBA\u003d37\nset MBR\u003d\nset PTN\u003d\ncall :getsec\nif \"%MBR%%PTN%\"\u003d\u003d\"11\" goto :gotsec\n\n:LBA38\n:: LBA38 should contain a backup\nset LBA\u003d38\nset MBR\u003d\nset PTN\u003d\ncall :getsec\nif \"%MBR%%PTN%\"\u003d\u003d\"11\" goto :gotsec\n\n:LBA39\n:: LBA39 should contain a backup\nset LBA\u003d39\nset MBR\u003d\nset PTN\u003d\ncall :getsec\nif \"%MBR%%PTN%\"\u003d\u003d\"11\" goto :gotsec\n\n\n\n:: ------\n\n\n:end\npopd\nendlocal\nGOTO :EOF\n\n\n:gotsec\nRMPARTUSB drive^\u003d%DD% usbinfo usbstart^\u003d%LBA% LENGTH\u003d1SEC SURE\necho Found backup MBR at SECTOR %LBA%\necho.\n\n:: MUST NOT USE USB drive to store .TMP file as RMPartUSB cannot access it after dismounting the volume!\n\n:: Save LBA 0 to E2B0.TMP\nRMPARTUSB USBTOFILE drive\u003d%DD% FILE\u003d\"%TEMP%\\E2B0.TMP\" USBSTART\u003d0 LENGTH\u003d1SEC FILESTART\u003d0 SURE \u003e nul\n\nRMPARTUSB USBTOFILE drive\u003d%DD% FILE\u003d\"%TEMP%\\E2B%LBA%.TMP\" USBSTART\u003d%LBA% LENGTH\u003d1SEC FILESTART\u003d0 SURE \u003e nul\nif errorlevel 1 goto :end\nRMPARTUSB FILETOUSB drive\u003d%DD% FILE\u003d\"%TEMP%\\E2B%LBA%.TMP\" USBSTART\u003d0  LENGTH\u003d1SEC FILESTART\u003d0 SURE \u003e nul\nif errorlevel 1 goto :end\necho MBR Restored OK\ngoto :PTN\n\n\n:getsec\necho Checking LBA%LBA%...\nFOR /F \"tokens\u003d16,17 delims\u003d- \" %%A IN (\u0027RMPARTUSB drive^\u003d%DD% usbinfo usbstart^\u003d%LBA% length\u003d1sec sure`^| FIND \"01F0\"\u0027) DO (\nif \"*%%A*%%B*\"\u003d\u003d\"*55*AA*\" echo Found MBR \u0026 set MBR\u003d1\n)\nFOR /F \"tokens\u003d4 delims\u003d- \" %%A IN (\u0027RMPARTUSB drive^\u003d%DD% usbinfo usbstart^\u003d%LBA% length\u003d1sec sure`^| FIND \"01C0\"\u0027) DO (\nif not \"*%%A*\"\u003d\u003d\"00\" echo Found Partition 1 Entry \u0026 set PTN\u003d1\n)\n\ngoto :eof\n\n\n:check_Permissions\n    \u003enul 2\u003e\u00261 \"%SYSTEMROOT%\\system32\\cacls.exe\" \"%SYSTEMROOT%\\system32\\config\\system\"\n\tREM --\u003e If error flag set, we do not have admin.\n\tif \u0027%errorlevel%\u0027 NEQ \u00270\u0027 (\n        echo.\n\techo Sorry - you need to run this script as Administrator.\n        echo.\n\techo Please use right-click - Run as administrator.\n\techo.\n\techo.\n\tcolor cf\n\tpause\n\tSet ADMIN\u003dFAIL\n    ) else (\n\techo Administrative permissions confirmed.\n    )\n\n```\n\n***Cheers....***\n\n"
    },
    {
      "id": "188563",
      "timestamp": "2014-11-15T19:15:04+00:00",
      "author": "devdevadev",
      "content": "*++Roaming between different firmware types++*  \nWindows supports two types of PC firmware: Unified Extensible Firmware Interface (UEFI), which is the new standard, and legacy BIOS firmware, which was used in most PCs shipping with Windows 7 or earlier version of Windows. Each firmware type has completely different Windows boot components that are incompatible with each other. Beyond the different boot components, Windows supports different partition styles and layout requirements for each type of firmware as shown in the following diagrams.\n\n![IC611724.gif](http://i.technet.microsoft.com/dynimg/IC611724.gif \"BIOS Layout\")![IC611725.gif](http://i.technet.microsoft.com/dynimg/IC611725.gif \"UEFI Layout\")\n\nThis presented a unique challenge for Windows To Go because the firmware type is not easily determined by end-users---a UEFI computer looks just like a legacy BIOS computer and Windows To Go must boot on both types of firmware.\n\nTo enable booting Windows To Go on both types of firmware, a new disk layout is provided for Windows 8 that contains both sets of boot components on a FAT32 system partition and a new command-line option was added to bcdboot.exe to support this configuration. The **/f** option is used with the **bcdboot /s** command to specify the firmware type of the target system partition by appending either **UEFI** , **BIOS** or **ALL** . When creating Windows To Go drives manually you must use the **ALL** parameter to provide the Windows To Go drive the ability to boot on both types of firmware. For example, on volume H: (your Windows To Go USB drive letter), you would use the command **bcdboot C:\\\\windows /s H: /f ALL**. The following diagram illustrates the disk layout that results from that command:\n\n![IC611726.gif](http://i.technet.microsoft.com/dynimg/IC611726.gif \"Firmware Roaming Disk Layout\")\n\n**This is the only supported disk configuration for Windows To Go. With this disk configuration, a single Windows To Go drive can be booted on computers with UEFI and legacy BIOS firmware.**\n\n***Regards....***\n\n"
    },
    {
      "id": "188570",
      "timestamp": "2014-11-15T20:59:16+00:00",
      "author": "Wonko the Sane",
      "content": "Well, I guess that a link to the original source:\n\n[http://technet.micro...y/jj592685.aspx](http://technet.microsoft.com/it-it/library/jj592685.aspx \"External link\")\n\n[http://technet.micro...px#stg_firmware](http://technet.microsoft.com/it-it/library/jj592685.aspx#stg_firmware \"External link\")\n\nwould have been nice. ![:whistling:](http://reboot.pro/public/style_emoticons/default/happy22.gif)\n\nOtherwise the \"supported by WHOM?\" question would have been spontaneous....\n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "188813",
      "timestamp": "2014-11-24T15:18:50+00:00",
      "author": "devdevadev",
      "content": "++***Create Secret Win 8.1 U1 **\u0027WTG + WIMBoot + VHDX\u0027 Configuration within** \u0027Removable USB Drive\u0027***++  \n**1-** Create 3 Partitions in your Removable USB Drive as follows with the help of **BOOTICE**.  \nPTN1 - FAT32 - DEV (Active) - 1GB or Greater  \nPTN2 - FAT32 - E2B - 1GB or Greater  \nPTN3 - NTFS - WIN - 10GB or Greater  \n**2-** Set FAT32 **\u0027E2B\u0027** Partition as Active and make NTFS **\u0027WIN\u0027** Partition accessible to Windows with the help of BOOTICE.  \nPTN1 - NTFS - WIN - 10GB or Greater  \nPTN2 - FAT32 - E2B (Active) - 1GB or Greater  \nPTN3 - FAT32 - DEV - 1GB or Greater  \n**3-** Install**\u0027Microdrive (cfadisk)\u0027** driver in your Main OS so that**\u0027WinNTSetup v.3.7.5\u0027**can access all partition of  \nRemovable USB Drive. No need to restart your system, Just Re-plug your **\u0027Removable USB Drive\u0027** and system  \nwill show all partitions of**\u0027Removable USB Drive\u0027** .  \n**4-** Copy ***++Win 8.1 Update 1++*** **\u0027install.wim\u0027** file within Root of NTFS **\u0027WIN\u0027**Partition of Removable USB Drive.  \ni.e. **\\[WIN\\]:\\\\install.wim**  \n**5-** Now Run**\u0027WinNTSetup v.3.7.5\u0027** and create **Dynamically Expanding VHDX** file within your Internal Hard Disk.  \ni.e. **C:\\\\Windows X.vhd** , which will be mounted automatically as Z: Drive.  \n**6-** Now Choose **\\[WIN\\]:\\\\install.wim** as **Source File** , FAT32**\u0027E2B\u0027** Partition as **Boot Drive** and **Z:** Drive as  \n**Installation Drive.**  \n**7** - Don\u0027t forget to check**\u0027WIMBoot\u0027** check-box. After that press **\u0027Setup\u0027** button and press**\u0027OK\u0027** in order to extract contents  \nof **\\[WIN\\]:\\\\install.wim** file to **Z \\[Windows X.vhd\\]:** Drive  \n**8-** After completing copying process **Restart** your PC in order to start **\u0027Sysprep\u0027**phase.  \nNext Step is very**IMPORTANT**.........So be careful...  \n**9-** Now you have to **Boot** from your **\u0027Removable USB Drive\u0027** successively**3 times** whenever system will **RESTART**.  \nSo Please Boot from your **\u0027Removable USB Drive\u0027** until your reach to Desktop of **WTG** .  \n**10-** After three successive booting from your **\u0027Removable USB Drive\u0027** , You will reach to the **Desktop of WTG**.  \n**11-** Now It\u0027s time to install**\u0027Microdrive (cfadisk)\u0027** driver within **C** ***urrent*** Windows ***(Booted within from \u0027Windows X.vhd\u0027)***  \n**12-** After Installing **\u0027Microdrive (cfadisk)\u0027** Restart your System and ***\u0027Boot from your Internal Hard Disk\u0027.***  \n**13-** Now copy **C:\\\\Windows X.vhd** file to the Root of NTFS **\\[WIN\\]:** Partition of your Removable USB Drive.  \n**14-** Now Run ***Command Prompt as Admin*** and execute following command :  \n**attrib -h -r -s /s /d K:\\\\\\*.\\***  \nWhere **K:** is Drive letter of FAT32**\u0027E2B\u0027** Partition of your**\u0027Removable USB Drive\u0027**.  \n**15-** Now ***RELOCATE***both **K:\\\\Boot\\\\BCD** and **K:\\\\EFI\\\\microsoft\\\\Boot\\\\BCD** to NTFS **\u0027WIN\u0027** Partition of **\u0027Removable USB**  \n**Drive\u0027** and press **\u0027Save Globals\u0027** button.***(This is very Important Step so be Careful.)***  \n**16-** Now Uninstall **\u0027Microdrive (cfadisk)\u0027** driver within from your **Main OS** ....(No need to restart System just **Re-plug**  \nRemovable USB Drive in order to Apply Changes). Now you will see only one partition of your \u0027Removable USB Drive\u0027.  \n**17-** Now open**BOOTICE/Part Manager** once again and make FAT32**\u0027DEV\u0027** Partition **accessible to Windows**in  \nfollowing manner - (Play with **\u0027Set Accessible\u0027** Button until you get exact following Partition Sequence because  \nsometimes it become ***RANDOM***during swapping of Partitions. So It may be Play time if you are lucky....)  \nPTN1 - FAT32 - DEV - For Data Storage  \nPTN2 - FAT32 - E2B (Active) - \u0027Boot Files\u0027 + \u0027EFI\u0027 Files  \nPTN3 - NTFS - WIN - \\\\install.wim + \\\\Windows X.vhd  \n**18-** Now Boot from your**\u0027Removable USB Drive\u0027** and you will Boot to Complete**\"WTG + WIMBoot + VHDX\"**  \nconfiguration if you will be **LUCKY**....  \n**19-** ***CONGRATULATIONS...........++DONE++*** .......*.**It\u0027s Coffee time.......*...  \n++***Optional-***++ If you have successfully boot to**\"WTG + WIMBoot + VHDX\u0027**configuration. Then you can also test  \nfollowing Steps -  \n**1-** Create **\u0027E2B\u0027** and**\u0027WIN\u0027** folder in the Desktop of your Main OS.  \n**2-** Copy all contents of **\u0027E2B\u0027 Partition** to **\u0027E2B\u0027 folder** and all contents of **\u0027WIN\u0027 Partition** to**\u0027WIN\u0027 folder**.  \n**3-** Now format both**\u0027E2B\u0027 Partition** and**\u0027WIN\u0027 Partitions** . (There should not be any change in **Physical Partition Table**.)  \n**4-** Now Copy all contents of**\u0027E2B\u0027 folder** to**\u0027E2B\u0027 Partition** and **\u0027WIN\u0027 folder** to**\u0027WIN\u0027 Partition**.  \n**5-** And Re-arrange all Partition of**\u0027Removable USB Drive\u0027** in following sequence once again-  \nPTN1 - FAT32 - DEV - For Data Storage  \nPTN2 - FAT32 - E2B (Active) - \u0027Boot Files\u0027 + \u0027EFI\u0027 Files  \nPTN3 - NTFS - WIN - \\\\install.wim + \\\\Windows X.vhd  \n**6-** Now Boot from your **\u0027Removable USB Drive\u0027** . It will still successfully Boot**\"WTG + WIMBoot + VHDX\u0027** configuration.  \n**WELL DONE**.  \n**THANKS \\\u0026 REGARDS....... :smile:** **.**\n\n"
    },
    {
      "id": "188925",
      "timestamp": "2014-11-28T19:25:50+00:00",
      "author": "devdevadev",
      "content": "***++Install Filter Driver (cfadisk) within \u0027Boot.wim\u0027 On-the-FLY++***\n\n**1-** First download **\u0027Mount.zip\u0027** from ***++[HERE](http://reboot.pro/index.php?app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d15166 \"\")++***\n\n**2-** Create a folder**\u0027Mount WIM\u0027** in the root of **C: Drive**.\n\n**3-** Mount **Index #2** Image of **\\\\sources\\\\boot.wim** to **\u0027C:\\\\Mount WIM\u0027** folder with the help of either**\u0027DISM GUI 4.0\u0027**\n\nor **\u0027****GImageX v2.1.1\u0027**Tool.\n\n**4-** Extract all files of **\u0027Mount.zip\u0027** to**\u0027C:\\\\Mount WIM\u0027** folder\n\n**5-**Dismount **\\\\sources\\\\boot.wim**\n\n**6-**Now ****\\\\**sources\\\\boot.wim** is ready to load**\u0027install.wim\u0027**file within from **ANY Partition** of **\u0027Removable USB Drive\u0027**.\n\n**7- Done.......**\n\nAnd now you can **boot** both ***32 Bit*** ***\u0027Boot.wim\u0027*** *and **64-Bit*** ***\u0027Boot.wim\u0027*****(\"testsigning\" option must be enable in BIOS BCD \\\u0026 UEFI BCD)** within from any Partition (**PTN1/PTN2/PTN3/PTN4)** of your **\u0027Removable USB Drive\u0027** in order to load **\u0027install.wim\u0027** file within from any Partition (**PTN1/PTN2/PTN3/PTN4** ) of your **\u0027Removable USB Drive\u0027** in both**BIOS** and **UEFI****(****Secure Boot Disable****)**mode.\n\n**Cheers.... :smile:**  \n\n#### Attached Files {#attach_wrap}\n\n* [![Attached File](http://reboot.pro/public/style_extra/mime_types/zip.gif)](http://reboot.pro/index.php?s\u003dc92efc4e527a70dd15dc826e407a523c\u0026app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d15166 \"Download attachment\") [**Mount.zip**](http://reboot.pro/index.php?s\u003dc92efc4e527a70dd15dc826e407a523c\u0026app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d15166 \"Download attachment\") **8.79KB** 582 downloads\n\n"
    },
    {
      "id": "188926",
      "timestamp": "2014-11-28T20:01:23+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e **2-** Mount **\\\\sources\\\\boot.wim** to **\u0027C:\\\\Mount WIM\u0027** folder  \n\u003e ...  \n\u003e **4-**Dismount **\\\\sources\\\\boot.wim**\nPosting how exactly to do this mounting/dismounting would probably be appreciated. :smile:  \n\n\u003cbr /\u003e\n\nI am not sure to understand the reason for   \n\n```\n\ncmd /q /c \"FOR %%i IN (C D E F G H I J K L N M O P Q R S T U V W X Y Z) DO IF EXIST %%i:\\AUTO.CMD cmd /k %%i:\\AUTO.cmd\"\n```\n\nin mysetup.cmd, when everything else is \"hardcoded\" to paths on the X: drive.  \n\nJFYI, the IF EXIST will throw an error on machines with \"multi card readers\", see:  \n[http://www.msfn.org/...e-3#entry987564](http://www.msfn.org/board/topic/149675-install-xp-from-a-iso-file/page-3#entry987564 \"External link\")  \n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)  \nWonko   \n"
    },
    {
      "id": "188929",
      "timestamp": "2014-11-29T13:39:41+00:00",
      "author": "steve6375",
      "content": "Has anyone tried this?\n\nI have done this using an AutoUnattend.xml from a removable drive and an unmodified Win8 ISO file.\n\ndrvload runs ok but it says it needs a reboot to take affect (which I obviously cannot do with WinPE).\n\nThe other partition on the USB removable drive does not appear until I unplug the USB drive and re-insert it.\n\n"
    },
    {
      "id": "188931",
      "timestamp": "2014-11-29T16:18:16+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e Has anyone tried this?  \n\u003e\n\u003e I have done this using an AutoUnattend.xml from a removable drive and an unmodified Win8 ISO file.  \n\u003e drvload runs ok but it says it needs a reboot to take affect (which I obviously cannot do with WinPE).  \n\u003e\n\u003e The other partition on the USB removable drive does not appear until I unplug the USB drive and re-insert it.\nI am not sure to understand your report/the issue ![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png).  \n\nThough it is not entirely clear, the approach devadev explained is about a \"preliminary step\" to modify (offline) the boot.wim BEFORE adding it to an USB stick.  \n\nOnce you have run drvload and unmounted the boot.wim, the next time you boot from the boot.wim it should be able to have the cfadisk installed and thus see the non-first partition. (there is no unplugging and re-plugging of anything involved and the boot.wim is not booted into until after having being modified).  \n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)  \nWonko   \n"
    },
    {
      "id": "188932",
      "timestamp": "2014-11-29T16:26:29+00:00",
      "author": "steve6375",
      "content": "No, that is not what devs mod does.\n\nIf you look at the download, it just adds a winpeshl.ini file which runs a batch file when WinPE boots.\n\nSo cfadisk driver is not installed until boot time (each and every time WinPE boots, drvload is run).\n\nThe difference seems to be that when I run drvload (win 8 x86), it says it installed correctly but that a reboot is required, with devadev\u0027s WinPE, it does not say that a reboot is required.\n\n"
    },
    {
      "id": "188933",
      "timestamp": "2014-11-29T18:06:30+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e The difference seems to be that when I run drvload (win 8 x86), it says it installed correctly but that a reboot is required, with devadev\u0027s WinPE, it does not say that a reboot is required.\n\nNow I see. :smile:, my bad :blush:   \n\ndrvload in itself:  \n[http://msdn.microsof...bedded.60).aspx](http://msdn.microsoft.com/en-US/library/ff795042(v\u003dwinembedded.60).aspx \"External link\")  \nshould not even work if a reboot is actually needed. ![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png)  \n\nIt is entirely possible that the message you get is a \"deceiving\" one, maybe it is the Win8 that behaves \"strangely\".  \n\nAnd to add a filter driver a reboot should not actually be needed, though the \"unplug and re-plug\" should actually be needed (or maybe killing and restarting the current shell would do as well).  \n\nAll in all I would actually see if it is possible to add the cfadisk (or dummydisk or diskmod) to the offline PE in boot.wim (i.e. without using drvload, but rather DISM), I mean it is not like \"as is\" you have a choice to install or not install the filter driver and the on-the-fly installation would make sense only if needed on some systems and not needed on others, but off hand I cannot see any particular reason to NOT have such a filter driver installed. ![:dubbio:](http://reboot.pro/public/style_emoticons/default/dubbio.gif)  \n\nBut about a \"load filter driver on demand\", there was a similar attempt some time ago, never finalized:  \n[http://reboot.pro/to...-disk/?p\u003d176958](http://reboot.pro/topic/9461-page-file-in-usb-hard-disk/?p\u003d176958 \"\")  \nand another one:  \n[http://reboot.pro/to...filter-drivers/](http://reboot.pro/topic/20033-is-it-possible-to-script-specific-disk-filter-drivers/ \"\")  \n\nYou could try playing a bit with devcon, as hinted in the above, it is possible that a reboot (as well as the unplug/replug) can be simulated (or maybe it is possible to always pre-install a \"actually dummy\" filter driver and only replace it without a reboot when needed), but I have no idea on where to find such \"do nothing\" \"placeholder\" or how to build one. ![:ph34r:](http://reboot.pro/public/style_emoticons/default/scared9.gif)):  \n[http://msdn.microsof...er_driver_tools](http://msdn.microsoft.com/en-us/library/windows/hardware/ff544746(v\u003dvs.85).aspx#ddk_example_26_replace_a_filter_driver_tools \"External link\")  \n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)  \nWonko   \n"
    },
    {
      "id": "188934",
      "timestamp": "2014-11-29T18:40:43+00:00",
      "author": "steve6375",
      "content": "I tried devadev\u0027s method using Win 8.1 x86 boot.wim and it worked.\n\nThe screenshot shows that no reboot message occurred and the REM_PTN2 which was the 2nd partition on the removable flash drive was visible after the driver was installed.\n\nIt does seem to completely change the drive letters though!!!! presumably because the removable drive is now seen as a hard drive.\n\nSo there must be a difference somewhere in timing using the winpeshl.ini \\[LaunchApps\\] section compared to when the \\\\AutoUnattend.xml detection starts.\n\nI think the winpeshl.exe first looks for winpeshl.ini - if it exists then it runs it and theAuto,cmd and then runs setup so no shell is launched. If it does not exist it runs wpeinit (from startnet.cmd) which then looks for \\\\Autounattend.xml.\n\nThis is a shame as I was hoping to use the driver with \\\\AutoUnattend.xml so I could add cfadisk to any Windows Install ISO without needing to open the ISO at all!\n\nP.S. The reason why devadev likes this method is that it should (??) not break Secure Boot if used in a EUFI payload as the driver is unsigned. If it was added into the WinPE itself, then you would also need to fiddle with the BCD, etc.  \n\n#### Attached Thumbnails {#attach_wrap}\n\n* [![CaptureKrishna.jpg](http://reboot.pro/uploads/monthly_11_2014/post-17818-0-28446700-1417285718_thumb.jpg)](http://reboot.pro/uploads/monthly_11_2014/post-17818-0-28446700-1417285718.jpg \"CaptureKrishna.jpg - Size: 120.37KB\"){#ipb-attach-url-15167-0-53445700-1676066495}\n\n"
    },
    {
      "id": "188935",
      "timestamp": "2014-11-29T18:56:05+00:00",
      "author": "steve6375",
      "content": "@Wonko - thanks, I tried using devcon and other utilities to dismount/remount, etc. but none worked.\n\nThe only thing that works is unplugging and re-connecting the USB drive when running drvload via the \\\\AutoUnattend.xml method) ![:frusty:](http://reboot.pro/public/style_emoticons/default/frusty.gif)\n\n"
    },
    {
      "id": "188936",
      "timestamp": "2014-11-29T19:23:08+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e @Wonko - thanks, I tried using devcon and other utilities to dismount/remount, etc. but none worked.  \n\u003e The only thing that works is unplugging and re-connecting the USB drive when running drvload via the \\\\AutoUnattend.xml method) ![:frusty:](http://reboot.pro/public/style_emoticons/default/frusty.gif)\nBut it is strange that it cannot be (one way or the other ![:ph34r:](http://reboot.pro/public/style_emoticons/default/scared9.gif)) \"simulated\", see if this works:  \n[http://digital.ni.co...62573A700602459](http://digital.ni.com/public.nsf/allkb/1D120A90884C25AF862573A700602459 \"External link\")  \n\nAbout drive lettering change, I can see that it is \\*needed\\*.  \nIn the \\\\DosDevices Registry key a \"Removable\" USB stick will have an entry starting with \"\\\\??\\\\STORAGE#RemovableMedia#\" while a \"fixed one\" will have the \"usual\" DiskSignature+start offset  \n[http://www.911cd.net...showtopic\u003d19663](http://www.911cd.net/forums//index.php?showtopic\u003d19663 \"External link\")  \n\nBut maybe one could try a trick or two with mountvol (or similar) to remove the drive letter before disabling and re-detecting the stick ![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png) (or even recreating the drive letter assignment by direct Registry editing using the appropriate DiskSignature+start offset sintax)  \n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)  \nWonko   \n"
    },
    {
      "id": "188937",
      "timestamp": "2014-11-29T19:28:46+00:00",
      "author": "steve6375",
      "content": "Yes, I tried that. No joy.\n\n"
    },
    {
      "id": "188938",
      "timestamp": "2014-11-29T20:06:01+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e Yes, I tried that. No joy.\nStrange.  \nReally strange. ![:dubbio:](http://reboot.pro/public/style_emoticons/default/dubbio.gif)  \nOn XP it works fine (I use it \\*normally\\*, I use the \"Safely remove hardware\" to remove the stupid multi-card reader and devcon restart to later re-enable it). I get error code 47 (re-plug needed) when I do the removal, then I run devcon on the appropriate hub and get back to \"working device\".  \nMaybe it is a feature of the PE environment or an \"enhancement\" in later Windows systems.  \n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)  \nWonko   \n"
    },
    {
      "id": "188939",
      "timestamp": "2014-11-29T20:15:02+00:00",
      "author": "steve6375",
      "content": "How do I do a \u0027Safely remove h/w\u0027 in WInPE?\n\n"
    },
    {
      "id": "188944",
      "timestamp": "2014-11-30T04:41:11+00:00",
      "author": "devdevadev",
      "content": "***++Easiest Way for Installing Filter Driver (cfadisk) within \u0027Boot.wim\u0027 On-the-FLY++***\n\n**1-** First download ***++\u0027++******++Filter Driver On-the-Fly v1.0.zip++******++\u0027++*** file from ***++[HERE](http://reboot.pro/index.php?app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d15170 \"\")++***\n\n**2-** Extract **\u0027****Filter Driver On-the-Fly v1.0.zip****\u0027** to any location and ***double-click*** on \u0027**CreateDesktopShortCuts.cmd\u0027**in\n\norder to create ***\u0027****Mount_wim_2\u0027***Desktop shortcut Icon.\n\n**3-** Drag-and-drop desired **\u0027boot.wim\u0027** file onto the ***\u0027****Mount_wim_2\u0027***Desktop shortcut in order to continue process.\n\nIt will automatically mount the**\u0027boot.wim\u0027** file and copy **Filter Driver files**to **%SystemDrive%\\\\mount4**folder\n\n**4-**You can cross-check mounted **%SystemDrive%\\\\mount4** folder for changes ***(not required)*** otherwise\n\n**Just C** **lose Explorer****(Don\u0027t forget to Close****Explorer,****It\u0027s very Important) !.**\n\n**5-** And then Enter **C** or **D** for **Commit changes** or **Discard**.\n\n**6-**Press any key to Continue...\n\n**7- Done.......**\n\nAnd now you can **boot** both ***32 Bit*** ***\u0027Boot.wim\u0027*** *and **64-Bit*** ***\u0027Boot.wim\u0027*****(\"testsigning\" option must be enable in BIOS BCD \\\u0026 UEFI BCD)** within from any Partition (**PTN1/PTN2/PTN3/PTN4)** of your **\u0027Removable USB Drive\u0027** in order to load **\u0027install.wim\u0027** file within from any Partition (**PTN1/PTN2/PTN3/PTN4** ) of your **\u0027Removable USB Drive\u0027** in both**BIOS** and **UEFI****(****Secure Boot Disable****)**mode.\n\n***I find this method much more reliable than using \u0027DISM GUI 4.0\u0027 or \u0027GImageX v2.1.1\u0027 or any other tools and a lot easier...***  \n\n**Cheers.... :smile:**  \n\n#### Attached Files {#attach_wrap}\n\n* [![Attached File](http://reboot.pro/public/style_extra/mime_types/zip.gif)](http://reboot.pro/index.php?s\u003d3d50788d1defdca51a240cccafcf40b1\u0026app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d15170 \"Download attachment\") [**Filter Driver On-the-Fly v1.0.zip**](http://reboot.pro/index.php?s\u003d3d50788d1defdca51a240cccafcf40b1\u0026app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d15170 \"Download attachment\") **11.4KB** 1147 downloads\n\n"
    },
    {
      "id": "188945",
      "timestamp": "2014-11-30T15:07:48+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e How do I do a \u0027Safely remove h/w\u0027 in WInPE?\nTry with RemoveDrive ![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png): [http://www.uwe-siebe...ivetools_e.html](http://www.uwe-sieber.de/drivetools_e.html \"External link\") or with the same devcon, it should be something \\*like\\* devcon remove \"USB\\\\VID_xxxx\\\u0026PID_yyyy\"  \n\n\u003cbr /\u003e\n\nJust tested in XP:  \n\u003e devcon listclass USB  \n\u003e devcon status \\*USB\\*  \n\u003e Found ID: USB\\\\VID_058F\\\u0026PID_6362\\\\058F312D81B  \n\u003e devcon disable \"@USB\\\\VID_058F\\\u0026PID_6362\\\\058F312D81B\" \\\u003c- **Code22**   \n\u003e devcon restart \\*ROOT_HUB20\\* \\\u003c-nothing happens  \n\u003e devcon enable \"@USB\\\\VID_058F\\\u0026PID_6362\\\\058F312D81B\" \\\u003c- restored as before  \n\u003e\n\u003e devcon remove \"@USB\\\\VID_058F\\\u0026PID_6362\\\\058F312D81B\" \\\u003c- vanished  \n\u003e devcon restart \\*ROOT_HUB20\\* \\\u003c- restored as before  \n\u003e\n\u003e [http://www.uwe-siebe...ivetools_e.html](http://www.uwe-sieber.de/drivetools_e.html \"External link\")  \n\u003e removedrive E: \\\u003c- **Code21**   \n\u003e devcon restart \\*ROOT_HUB20\\* \\\u003c- restored as before  \n\u003e\n\u003e [http://www.heise.de/...links/208.shtml](http://www.heise.de/ct/03/16/links/208.shtml \"External link\")  \n\u003e\n\u003e deveject.exe -EjectId:\"USB\\\\VID_058F\\\u0026PID_6362\\\\058F312D81B\" \\\u003c- **Code47**   \n\u003e devcon restart \\*ROOT_HUB20\\* \\\u003c- restored as before\nSeemingly Windows 8.1 (and possibly 8) needs to do it twice ![:w00t:](http://reboot.pro/public/style_emoticons/default/w00t.gif), see:  \n[https://www.raymond....g-and-reinsert/](https://www.raymond.cc/blog/remount-ejected-or-safely-removed-usb-device-without-unplug-and-reinsert/ \"External link\")  \n\nWhat I don\u0027t seem to find is an easy way in batch to find out to which USB HUB the device is connected. ![:dubbio:](http://reboot.pro/public/style_emoticons/default/dubbio.gif)  \n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)  \nWonko   \n"
    },
    {
      "id": "188946",
      "timestamp": "2014-11-30T19:56:14+00:00",
      "author": "steve6375",
      "content": "Hi Wonko\n\nThanks for the posts and tips. By experimenting with RemoveDrive and RestartStrDev, I have found out what the problem was.\n\nThe drvload command (and RemoveDrive) did not work because the batch file it is running, is on the USB drive so Windows cannot lock and dismount the USB drive to remove it and re-enumerate the drives again.\n\nTo fix this, I copy a set of batch files + the driver files to the X: ramdrive and then run a batch file on drive X:.\n\nThis runs drvload fine but all drive letters are now changed because the USB drive is now a hard disk as seen by Windows and becomes C:!\n\nSo I then have to look through all drive letters again to find the USB drive letter again, and then carry on with the rest of the batch file to load the ISO file from the USB drive using ImDisk.\n\nphew!\n\nAnyway, the result is that Windows Setup can see all partitions on a Removable drive.\n\nJust how useful this will be I am not sure... I guess the ISO file could be on the 2nd partition of a removable drive now...\n\n"
    },
    {
      "id": "188947",
      "timestamp": "2014-11-30T20:27:09+00:00",
      "author": "devdevadev",
      "content": "\u003e The drvload command (and RemoveDrive) did not work because the batch file it is running, is on the USB drive so Windows cannot lock and dismount the USB drive to remove it and re-enumerate the drives again.\n\u003e\n\u003e To fix this, I copy a set of batch files + the driver files to the X: ramdrive and then run a batch file on drive X:.\n\u003e\n\u003e This runs drvload fine but all drive letters are now changed because the USB drive is now a hard disk as seen by Windows and becomes C:!\n\u003e\n\u003e So I then have to look through all drive letters again to find the USB drive letter again, and then carry on with the rest of the batch file to load the ISO file from the USB drive using ImDisk.\n\u003e\n\u003e phew!\n\u003e\n\u003e Anyway, the result is that Windows Setup can see all partitions on a Removable drive.\n\u003e\n\u003e Just how useful this will be I am not sure... I guess the ISO file could be on the 2nd partition of a removable drive now...\n\nHEy...Steve...\n\nI think I had already suggested exactly the same IDEA **( for copy a set of batch files + the driver files to the X: ramdrive and then run a batch file on drive X:.****)** to you in mail. I was expecting for the success. And Finally you got that point. Now It will be going be very useful for us (Specially for me).\n\nThanks for your researching.......\n\n"
    },
    {
      "id": "188948",
      "timestamp": "2014-11-30T20:35:26+00:00",
      "author": "steve6375",
      "content": "Sure, but copying batch files etc. seemed unnecessary at the time. As it turns out, it is necessary to run from the X: drive otherwise the C: drive and USB drive is locked by Windows and a \u0027reboot is required\u0027 message is returned.\n\n"
    },
    {
      "id": "188949",
      "timestamp": "2014-11-30T22:18:29+00:00",
      "author": "cdob",
      "content": "\u003e the same IDEA\nAnother idea: integrate the filter driver (cfadisk, dummydisk, diskmod) to boot.wim: dism /Add-Driver  \n\n\u003e the IF EXIST will throw an error on machines with \"multi card readers\"\nThe XP cmd.exe would throw an error, later versions not anymore.  \nNo, a empty card reader slot won\u0027t throw a error.   \n"
    },
    {
      "id": "188950",
      "timestamp": "2014-11-30T22:37:20+00:00",
      "author": "devdevadev",
      "content": "\u003e Another idea: integrate the filter driver (cfadisk, dummydisk, diskmod) to boot.wim: dism /Add-Driver\n\nThanks for the Tip.... :wink:\n\nActually we all already knew about this. And I was also using this till now. But I had heard from somewhere that we can\u0027t do ***UEFI Booting (Secur Boot Enable)*** of unsigned driver integrated **\u0027boot.wim\u0027.** And AFAIK, all filter drivers are unsigned. **AM I RIGHT ??**\n\nIt\u0027s why I have to look for Filter Driver On-the-Fly. And I think now It should do ***UEFI Booting (Secur Boot Enable)*** of on-the-fly \u0027cfadisk\u0027 injected **\u0027boot.wim\u0027** . **AM I RIGHT ?**\n\n**Regards....**\n\n"
    },
    {
      "id": "188953",
      "timestamp": "2014-12-01T07:54:52+00:00",
      "author": "androidserv",
      "content": "\u003e No, that is not what devs mod does.\n\u003e\n\u003e If you look at the download, it just adds a winpeshl.ini file which runs a batch file when WinPE boots.\n\u003e\n\u003e So cfadisk driver is not installed until boot time (each and every time WinPE boots, drvload is run).\n\u003e\n\u003e The difference seems to be that when I run drvload (win 8 x86), it says it installed correctly but that a reboot is required, with devadev\u0027s WinPE, it does not say that a reboot is required.\n\n@Steve6375: In case you might not notice, devdevadev\u0027s cfadisk is a forked/updated version by some MDL user (hence the new name \"microdrive\") which is different from original cfadisk.sys.\n\nFYI, I didn\u0027t get things worked with original cfadisk.sys. But with the new cfadisk (microdriver) version, things worked right away.\n\nThings even worked better with diskmod (ie. on WindowsToGo), because diskmod can regconize any usb stick as usb hdd whereas cfadisk can only regconize the one from which it\u0027s installed.\n\nAbout this \"on-the-fly\" method or any method of integrating unsigned drivers, it won\u0027t work on Win x64 if we haven\u0027t set its BCD entry with \"Testsigning ON\" option. Does anyone have ideas to bypass that?\n\n**Edited by androidserv, 01 December 2014 - 08:03 AM.**\n"
    },
    {
      "id": "188957",
      "timestamp": "2014-12-01T10:00:22+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e Another idea: integrate the filter driver (cfadisk, dummydisk, diskmod) to boot.wim: dism /Add-Driver\n\nYep :smile::\n\u003e All in all I would actually see if it is possible to add the cfadisk (or dummydisk or diskmod) to the offline PE in boot.wim (i.e. without using drvload, but rather DISM), I mean it is not like \"as is\" you have a choice to install or not install the filter driver and the on-the-fly installation would make sense only if needed on some systems and not needed on others, but off hand I cannot see any particular reason to NOT have such a filter driver installed. ![:dubbio:](http://reboot.pro/public/style_emoticons/default/dubbio.gif)\n\nbut as Steve pointed out, adding it on the fly (with his modified method through autounattend.xml) might allow for keeping the .iso \"untouched\".\n\n\u003e The XP cmd.exe would throw an error, later versions not anymore.  \n\u003e No, a empty card reader slot won\u0027t throw a error.\n\nGood to know for next time ![:thumbsup:](http://reboot.pro/public/style_emoticons/default/thumbsup.gif), still the looking for all drives to invariably end on X: specifically wasn\u0027t needed.  \n\n@androidserv  \nThe way the cfadisk driver behaves depends on the .inf, **cdob** made it installable as attached to USBSTOR\\\\Gendisk (please read to all USB disks) a lot of time ago, JFYI:\n\n[http://www.msfn.org/...ation/?p\u003d818429](http://www.msfn.org/board/topic/126868-fixed-drive-usb-driver-integration/?p\u003d818429 \"External link\")\n\nBut yes, nowadays I would prefer Diskmod anyway. :smile:\n\n@Steve6375\n\nAs I see it you could see if you can pre-populate \\\\DosDevices (*a la* migrate.inf) with the appropriate drive letter(s) for the stick volumes after having \"removed\" the device and before \"restoring\" it or you could try playing with the \"no automount\" settings available in PE 3\u0027s and 4\u0027s and attribute the drive letters with mountvol.\n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "188968",
      "timestamp": "2014-12-01T13:51:24+00:00",
      "author": "steve6375",
      "content": "\u003e About this \"on-the-fly\" method or any method of integrating unsigned drivers, it won\u0027t work on Win x64 if we haven\u0027t set its BCD entry with \"Testsigning ON\" option. Does anyone have ideas to bypass that?\n\nIt **does**work on WinPE\\\\Setup though. The new E2B v1.61Beta3 automatically installs cfadisk when you boot from an x86 or 64-bit Windows Install ISO and this allows Setup to access files on any partition on the USB Removable Flash drive. I tested with Win 7 64-bit ISO.\n\n"
    },
    {
      "id": "188969",
      "timestamp": "2014-12-01T14:23:36+00:00",
      "author": "devdevadev",
      "content": "\u003e It **does**work on WinPE\\\\Setup though. The new E2B v1.61Beta3 automatically installs cfadisk when you boot from an x86 or 64-bit Windows Install ISO and this allows Setup to access files on any partition on the USB Removable Flash drive. I tested with Win 7 64-bit ISO.\n\nYou mean **64-bit Windows Install** **ISO** can also **BIOS Boot** from **PTN2/PTN3/PTN4** of **\u0027Removable USB Drive\u0027** without Enabling **\" Testsigning \"** option in **BIOS BCD**. Could I understood correctly ??\n\nDoes **64-bit Windows Install** **ISO** also **UEFI******Boot**** **(Secure Boot Disable)** from **PTN2/PTN3/PTN4** of **\u0027Removable USB Drive\u0027** without Enabling **\" Testsigning \"** option in **UEFI****BCD** if we install *++**\u0027microdrive\u0027 filter driver On-the-Fly**++*within **64-bit \u0027boot.wim\u0027** ???\n\nRegards....\n\n"
    },
    {
      "id": "188970",
      "timestamp": "2014-12-01T14:25:42+00:00",
      "author": "steve6375",
      "content": "Hmmm - I have hit a bit of a problem!\n\nI tested Win7 64-bit Windows Install ISO and it worked fine, but the Win 8.1 64-bit Windows Install ISO failed!\n\nWhen the drvload cfadisk ran, it said a reboot was required, but worse still was that the USB drive then disappeared after it ran!\n\nIt is not visible in Diskpart and unplugging/reconnecting the USB drive physically does not fix it either!\n\nMaybe I will have to remove this \u0027feature\u0027 from E2B...\n\n"
    },
    {
      "id": "188971",
      "timestamp": "2014-12-01T14:34:36+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e Hmmm - I have hit a bit of a problem!\n\u003e\n\u003e I tested Win7 64-bit Windows Install ISO and it worked fine, but the Win 8.1 64-bit Windows Install ISO failed!\n\u003e\n\u003e When the drvload cfadisk ran, it said a reboot was required, but worse still was that the USB drive then disappeared after it ran!\n\u003e\nMaybe ![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png):\n\n\u003e Seemingly Windows 8.1 (and possibly 8) needs to do it twice ![:w00t:](http://reboot.pro/public/style_emoticons/default/w00t.gif), see:  \n\u003e [https://www.raymond....g-and-reinsert/](https://www.raymond.cc/blog/remount-ejected-or-safely-removed-usb-device-without-unplug-and-reinsert/ \"External link\")\n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "188974",
      "timestamp": "2014-12-01T15:29:35+00:00",
      "author": "androidserv",
      "content": "\u003e I tested Win7 64-bit Windows Install ISO and it worked fine, but the Win 8.1 64-bit Windows Install ISO failed!\n\u003e\n\u003e When the drvload cfadisk ran, it said a reboot was required, but worse still was that the USB drive then disappeared after it ran!\n\u003e\n\u003e It is not visible in Diskpart and unplugging/reconnecting the USB drive physically does not fix it either!\n\nMaybe things are different on Windows 7 and ISO booting method. (IIRC, some article said that if you install the driver\u0027s certificate (if any), Win 7 won\u0027t even pop up any warning).\n\nI mentioned about the error because I have only done tests on Windows 8.1 Update 1 Pro. And well:\n\n- If we use cfadisk (microdrive), drvload will say the driver has been installed successfully, but the USB drive is not available anymore just as Steve said.\n\n- If we use diskmod, drvload will inform that the driver can\u0027t be installed with error code 0xe000024b\n\n"
    },
    {
      "id": "188975",
      "timestamp": "2014-12-01T15:54:18+00:00",
      "author": "devdevadev",
      "content": "**\u0027loveleeyoungae\u0027** had provided me a checklist about integrating filter drivers as follow:  \n**a.** ++BIOS Mode:++ Winx86 works without any concern about Testsigning.  \n**b.** ++BIOS Mode:++ Winx64 works **ONLY** when Testsigning is ON/ENABLED.  \n**c.** ++UEFI Mode but Secure Boot is **OFF/DISABLED**:++ Winx86 works without any concern about Testsigning.  \n**d.** ++UEFI Mode but Secure Boot is **OFF/DISABLED**:++ Winx64 works **ONLY** when Testsigning is ON/ENABLED.  \n**e.** ++UEFI Mode and Secure Boot is **ON/ENABLED**:++ No matter how you try to change BCD boot options or settings,  \n**BOTH** Winx86 and Winx64 **can\u0027t** work.  \nTill now point **a,b,c** and **d** seems to be**TURE**. But what about**++\u0027point e\u0027++ ?**Is**\u0027point e\u0027** also correct **?**  \nCan anybody please confirm about ++\u0027++ **++point e\u0027++ ?**  \n*Regards..* **.**\n\n"
    },
    {
      "id": "188980",
      "timestamp": "2014-12-01T19:13:18+00:00",
      "author": "cdob",
      "content": "\u003e But I had heard from somewhere that we can\u0027t do UEFI Booting\nYes, it\u0027s not possible at windows default files.  \n\n\u003e UEFI Mode and Secure Boot is ON/ENABLED: No matter how you try to change BCD boot options or settings, BOTH Winx86 and Winx64 can\u0027t work.\nWin8.1SE patches winload.exe too. Secure boot is possible at unsigned drivers.  \nTry Win8.1SE secure boot.   \n"
    },
    {
      "id": "188982",
      "timestamp": "2014-12-02T00:35:38+00:00",
      "author": "devdevadev",
      "content": "\u003e Yes, it\u0027s not possible at windows default files.  \n\u003e\n\u003e Win8.1SE patches winload.exe too. Secure boot is possible at unsigned drivers.  \n\u003e Try Win8.1SE secure boot.\n\n\u003cbr /\u003e\n\nThanks for maintaining the**Hope** .....  \n\nYou mean ++ChrisR++ **32/64-bit \u0027Win8.1SE\u0027** **(integrated with unsigned drivers** **)**patches **\u0027winload.exe\u0027** in order to successfully **UEFI Boot with****Secure Boot Enable ?**   \n\nAFAIK, **\u0027winload.efi\u0027** is boot file in case of **UEFI Booting** (both for **Secure Boot Enable** and **Secure Boot Disable** ). So why **Win8.1SE** patches **\u0027winload.exe\u0027** instead of **\u0027winload.efi** \u0027. Is there no need to patch **\u0027winload.efi\u0027** for **Secure UEFI Booting along with unsigned drivers** ??  \n\nAfter reading you post, Now It\u0027s looking that If we use patched **\u0027winload.exe/****\u0027winnload.efi\u0027** (if necessary) within **32/64-bit \u0027boot.wim\u0027** **(integrated with unsigned drivers** **)**then It may also perform successful **Secure UEFI Booting at Unsigned Drivers ?**\n\n**AM I RIGHT ?**\n\nCan I use **patched \u0027winload.exe\u0027** from**\u0027Win8.1SE\u0027** to my**32/64-bit \u0027boot.wim\u0027** ?\n\nDoes**\u0027** **Win8.1SE_2014-10-17.zip\u0027** already contains **patched \u0027winload.exe\u0027** of both**32-bit and 64-bit** ? Or It patch **\u0027winload.exe\u0027**during creation of **32/64-bit \u0027Win8.1SE\u0027** ?\n\nAre both **32-bit** and**64-bit \u0027winload.exe\u0027** are same ?\n\nRegards.....\n\n"
    },
    {
      "id": "188983",
      "timestamp": "2014-12-02T05:38:05+00:00",
      "author": "cdob",
      "content": "I\u0027m remember a post about \u0027You Require Permissions From TrustedInstaller\u0027 at the oven.  \nNo, I don\u0027t remember details anymore.  \nSorry, not winload.exe at UEFI. winload.efi  \n\nDidn\u0027t you integrate cfadisk to Win8?SE in the past?  \nCan you boot this at UEFI mode?   \n"
    },
    {
      "id": "188984",
      "timestamp": "2014-12-02T06:14:46+00:00",
      "author": "devdevadev",
      "content": "\u003e I\u0027m remember a post about \u0027You Require Permissions From TrustedInstaller\u0027 at the oven.\n\nI have read above mentioned Tutorial and It\u0027s very useful. Thanks for that....But I can copy**\u0027winload.exe\u0027** within from **\u0027Win8.1SE_x86_boot.wim\u0027** by just mounting WIM file. then why this Tutorial ??\n\n\u003e Didn\u0027t you integrate cfadisk to Win8?SE in the past?  \n\u003e Can you boot this at UEFI mode?\n\nI had integrated**microdrive (cfadisk)** to **\u0027Win8.1SE_x86_boot.wim\u0027** in the past. But I had not created\n\n**\u0027Win8.1SE_x64_boot.wim\u0027** till now because I don\u0027t have neither any **64-bit OS** nor any **UEFI machine** at this time\n\nin order to test. Actually I am waiting for releasing**\u0027Win 10 x64\u0027.** :wink: And want to knew about all the fact regarding\n\n**64-bit Secure UEFI Booting**in advance before I buy my upcoming UEFI machine. :smile: But Internet is seems to be\n\nuseless this time for getting some important information about **patching** of**\u0027winload.exe/winload.efi\u0027** in order to\n\n**Secure UEFI Booting** of **Unsigned Driver** integrated **32/64-bit \u0027boot.wim\u0027**.\n\nIf you don\u0027t mind, then Can you please tell me about the Final Conclusion about these **Secure UEFI Booting** confusions ?\n\nI can\u0027t stay with these UEFI confusions till I buy a UEFI machine ....So please help me......\n\nThanks \\\u0026 Regards....\n\n"
    },
    {
      "id": "188985",
      "timestamp": "2014-12-02T07:19:37+00:00",
      "author": "androidserv",
      "content": "\u003e I\u0027m remember a post about \u0027You Require Permissions From TrustedInstaller\u0027 at the oven.  \n\u003e No, I don\u0027t remember details anymore.  \n\u003e Sorry, not winload.exe at UEFI. winload.efi  \n\u003e\n\u003e Didn\u0027t you integrate cfadisk to Win8?SE in the past?  \n\u003e Can you boot this at UEFI mode?\n\nI tried that. UEFI firmware didn\u0027t allow the integrated win81sepe.wim to boot even though all 3 BCD parameters were set:\n\nloadoptions DISABLE_INTEGRITY_CHECKS\n\nnointegritychecks Yes\n\ntestsigning Yes\n\nAbout **default**Win81SE_PE build:\n\nI saw the threads about \"patched winload.exe\" on the oven. It looks like they all mentioned that the winload.exe/.efi of Win8.1SEPE is patched, hence we\u0027ll have to add those BCD parameters above for a successful boot. However, my built one doesn\u0027t require that!\n\nEven though it was built with default settings and the special BCD parameters were deleted, it could still boot in Enabled Secure Boot UEFI.\n\n**Edited by androidserv, 02 December 2014 - 07:23 AM.**\n"
    },
    {
      "id": "188986",
      "timestamp": "2014-12-02T07:43:10+00:00",
      "author": "devdevadev",
      "content": "\u003e About **default**Win81SE_PE build:\n\u003e\n\u003e I saw the threads about \"patched winload.exe\" on the oven. It looks like they all mentioned that the winload.exe/.efi of Win8.1SEPE is patched, hence we\u0027ll have to add those BCD parameters above for a successful boot. **However, my built one doesn\u0027t require that!**\n\u003e\n\u003e Even though it was built with default settings and the special BCD parameters were deleted, it could still boot in Enabled Secure Boot UEFI.\n\nCan you please tell more about your **Special Built** (Win81SE_PE build**)**? Please..... :smile: How you have created your special build which can successfully boot in **Secure Boot enabled UEFI**even after**integrating unsigned driver** ?\n\nRegards...\n\n"
    },
    {
      "id": "188987",
      "timestamp": "2014-12-02T08:28:59+00:00",
      "author": "androidserv",
      "content": "\u003e Can you please tell more about your **Special Built** (Win81SE_PE build**)**? Please..... :smile: How you have created your special build which can successfully boot in **Secure Boot enabled UEFI**even after**integrating unsigned driver** ?\n\u003e\n\u003e Regards...\n\nPlease read the post carefully. That part belongs to the 2nd paragraph which is about **default build (no driver integration)**.\n\n"
    },
    {
      "id": "189005",
      "timestamp": "2014-12-02T15:55:14+00:00",
      "author": "devdevadev",
      "content": "If we have a Windows Installer **\u0027boot.wim\u0027** and a WinPE **\u0027Win8.1SE_x86_boot.wim\u0027.** then -\n\nFor **\u0027boot.wim\u0027** **-** Boot Index is : **2**  \nFor **\u0027Win8.1SE_x86_boot.wim\u0027** **-** Boot Index is : **1**  \n\nSo now***\u0027***++***Filter Driver On-the-Fly v1.1.zip\u0027***++ mount **Image Index 2** for**\u0027boot.wim\u0027** and **Image Index 1** for**\u0027Win8.1SE_x86_boot.wim\u0027**.  \n\n#### Attached Files {#attach_wrap}\n\n* [![Attached File](http://reboot.pro/public/style_extra/mime_types/zip.gif)](http://reboot.pro/index.php?s\u003d3d50788d1defdca51a240cccafcf40b1\u0026app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d15178 \"Download attachment\") [**Filter Driver On-the-Fly v1.1.zip**](http://reboot.pro/index.php?s\u003d3d50788d1defdca51a240cccafcf40b1\u0026app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d15178 \"Download attachment\") **11.57KB** 750 downloads\n\n"
    },
    {
      "id": "189022",
      "timestamp": "2014-12-02T22:24:16+00:00",
      "author": "cdob",
      "content": "\u003e any UEFI machine at this time in order to test.\nNeither did I test Win8.1SE at UEFI machnines, hence I doubt my previous statement today. Sorry for the confusion.  \n\nDid anybody test boot.wim integration or on-the-fly adding at real Secure Boot hardware?   \n"
    },
    {
      "id": "189026",
      "timestamp": "2014-12-03T00:07:20+00:00",
      "author": "androidserv",
      "content": "\u003e Did anybody test boot.wim integration or on-the-fly adding at real Secure Boot hardware?\n\nI did. Both methods don\u0027t work.\n\n- Integrated boot.wim: Secure Boot will prevent the boot.wim to load, saying the driver\u0027s signature is not verified - even when \"loadoptions\", \"nointegritychecks\", \"testsigning\" are set.\n\n- On-the-fly boot.wim: Boot.wim is loaded and the Setup GUI shows up, but the driver can\u0027t be installed. As Steve said, the USB is even disappeared. Re-run the drvload command, it will output the \"Unable to load etc...\" error.\n\n"
    },
    {
      "id": "189027",
      "timestamp": "2014-12-03T00:36:18+00:00",
      "author": "devdevadev",
      "content": "It\u0027s looking that **\u0027JFX\u0027** had not patched **\u0027winload.efi\u0027** . Is it not possible to patch **\u0027winload.efi\u0027** ?\n\nIn **\u0027Secure UEFI Booting\u0027** , Does **driver\u0027s signature** verified/checked by Hardware **(System UEFI Firmware)** instead of Software files in Windows Installer **(winload.efi)** ?\n\nRegards....\n\n"
    }
  ]
}