{
  "id": "19797",
  "title": "Questions about USB Booting on UEFI systems",
  "isPinned": false,
  "isFirstTopic": false,
  "isLocked": false,
  "tags": [],
  "forumNotes": [
    {
      "id": "184269",
      "timestamp": "2014-05-12T18:20:27+00:00",
      "author": "misty",
      "content": "I was recently asked to implement UEFI boot support in MistyPE and have made some progress with this. It\u0027s currently being tested by someone with the required hardware - not being able to test your own work is an unusual position to be in as a project developer.  \n\nAnyway, I\u0027ve been doing my best to research UEFI - in particular booting WinPE on UEFI systems. I\u0027m pretty confused due to the sometimes conflicting information I\u0027ve come across, hence this post. If someone can clarify/confirm any of the following then please help.  \n\n**1\\]** - UEFI systems can be 32-bit or 64-bit, but not both?  \n\n**2\\]** - a 32-bit UEFI system cannot boot a 64-bit WinPE?  \n\n**3\\]** - a 64-bit UEFI system cannot boot a 32-bit WinPE?  \n\n**4\\]** - the UEFI boot file is *\\\\EFI\\\\boot\\\\bootia32.efi* on 32-bit UEFI systems?  \n\n**5\\]** - the UEFI boot file is *\\\\EFI\\\\boot\\\\bootix64.efi* on 64-bit (amd64) UEFI systems?  \n\n**6\\]** - if *\\\\EFI\\\\boot\\\\bootia32.efi* is not available then *bootmgfw.efi* can be copied from a 32-bit Windows installation (path *\\\\Windows\\\\boot\\\\EFI\\\\bootmgfw.efi* ) and renamed as *\\\\EFI\\\\boot\\\\bootia32.efi* ? Or alternatively the same file can be extracted from 32-bit install.wim.  \n\n**7\\]** - if *\\\\EFI\\\\boot\\\\bootix64.efi* is not available then *bootmgfw.efi* can be copied from a 64-bit Windows installation (path *\\\\Windows\\\\boot\\\\EFI\\\\bootmgfw.efi* ) and renamed as *\\\\EFI\\\\boot\\\\bootia32.efi* ? Or alternatively the same file can be extracted from 64-bit install.wim.  \n\n**8\\]** - the only boot files actually required on a UEFI system (for WinPE boot) are -  \n\\* \\\\EFI\\\\boot\\\\bootia32.efi (or bootx64.efi on amd64 UEFI systems)  \n\\* \\\\EFI\\\\microsoft\\\\boot\\\\BCD  \n\n**9** - if a hard disk is used, or a fixed type USB disk, then the disk should be converted to GPT and should include the following partitions -  \n\\* EFI (FAT32)  \n\\* MSR (128 MB)  \n\\* Seperate partition for data  \n\n**10** - Microsoft recommends that the EFI partition not contain WinPE, however WinPE will boot from this hidden partition?  \n\n**11\\]** - Removable media cannot be converted to a GPT disk?  \n\n**12\\]** - if Removable media is used then it should contain one FAT32 partition containing the EFI boot files?  \n\n**13\\]** - if removable media with one FAT32 partition is used then this partition can also be set as active and the same device can be booted on BIOS based systems providing that bootmgr and \\\\boot\\\\BCD are also present?  \n\n**14\\]** - the Compatibility Support Module (CSM) provides legacy BIOS compatibility and will boot MBR partitioned disks.  \n\n\u003cbr /\u003e\n\nAny help/clarification/information will be appreciated as my tests so far have been limited to VMWare Player with the following workaround manually added to the virtual machine configuration file -  \n\n```\nfirmware\u003d\"efi\"\n```\n\nRegards,  \n\nMisty   \n"
    },
    {
      "id": "184270",
      "timestamp": "2014-05-12T18:49:24+00:00",
      "author": "steve6375",
      "content": "See answers in red (to the best of my understanding!)\n\n\u003e I was recently asked to implement UEFI boot support in MistyPE and have made some progress with this. It\u0027s currently being tested by someone with the required hardware - not being able to test your own work is an unusual position to be in as a project developer.\n\u003e\n\u003e Why not use a VM like VirtualBox? You can boot from a VDisk or a USB disk by using DavidB\u0027s VMUB utility. You can test both 64-bit and 32-bit UEFI booting. Just set up the VM.\n\u003e\n\u003e Anyway, I\u0027ve been doing my best to research UEFI - in particular booting WinPE on UEFI systems. I\u0027m pretty confused due to the sometimes conflicting information I\u0027ve come across, hence this post. If someone can clarify/confirm any of the following then please help.  \n\u003e\n\u003e **1\\]** - UEFI systems can be 32-bit or 64-bit, but not both?\n\u003e\n\u003e Not sure if this is a rule, but generally a system with a 64-bit CPU has a UEFI firmware which will only list devices with 64-bit efi boot files (even though it could also boot 32-bit efi).  \n\u003e\n\u003e **2\\]** - a 32-bit UEFI system cannot boot a 64-bit WinPE?\n\u003e\n\u003e A 32-bit CPU cannot run 64-bit code!  \n\u003e\n\u003e **3\\]** - a 64-bit UEFI system cannot boot a 32-bit WinPE?\n\u003e\n\u003e Not sure if it *cannot*boot - but most UEFI firmware versions which are running on 64-bit CPUs just ignore 32-bit efi boot files.  \n\u003e\n\u003e **4\\]** - the UEFI boot file is *\\\\EFI\\\\boot\\\\bootia32.efi* on 32-bit UEFI systems?\n\u003e\n\u003e on x86 systems this is the *default*file. Any file name/path can be set up in NVRAM in the UEFI BIOS.\n\u003e\n\u003e **5\\]** - the UEFI boot file is *\\\\EFI\\\\boot\\\\bootix64.efi* on 64-bit (amd64) UEFI systems?\n\u003e\n\u003e ditto  \n\u003e\n\u003e **6\\]** - if *\\\\EFI\\\\boot\\\\bootia32.efi* is not available then *bootmgfw.efi* can be copied from a 32-bit Windows installation (path *\\\\Windows\\\\boot\\\\EFI\\\\bootmgfw.efi* ) and renamed as *\\\\EFI\\\\boot\\\\bootia32.efi*? Or alternatively the same file can be extracted from 32-bit install.wim.\n\u003e\n\u003e so it is written...  \n\u003e\n\u003e **7\\]** - if *\\\\EFI\\\\boot\\\\bootix64.efi* is not available then *bootmgfw.efi* can be copied from a 64-bit Windows installation (path *\\\\Windows\\\\boot\\\\EFI\\\\bootmgfw.efi* ) and renamed as *\\\\EFI\\\\boot\\\\bootia32.efi*? Or alternatively the same file can be extracted from 64-bit install.wim.\n\u003e\n\u003e so it is written...  \n\u003e\n\u003e **8\\]** - the only boot files actually required on a UEFI system (for WinPE boot) are -  \n\u003e \\* \\\\EFI\\\\boot\\\\bootia32.efi (or bootx64.efi on amd64 UEFI systems)  \n\u003e \\* \\\\EFI\\\\microsoft\\\\boot\\\\BCD\n\u003e\n\u003e depends what is in the .efi file - it could boot to grub2 first... I have not studied the \u0027boot chain\u0027 fully - maybe someone else can fill you (and me) in?  \n\u003e\n\u003e **9** - if a hard disk is used, or a fixed type USB disk, then the disk should be converted to GPT and should include the following partitions -  \n\u003e \\* EFI (FAT32)  \n\u003e \\* MSR (128 MB)  \n\u003e \\* Seperate partition for data\n\u003e\n\u003e No, EFI will boot from a single FAT32/FAT16 disk as well as GPT/ESP  \n\u003e\n\u003e **10** - Microsoft recommends that the EFI partition not contain WinPE, however WinPE will boot from this hidden partition?\n\u003e\n\u003e What is an EFI partition? Do you mean [ESP](https://en.wikipedia.org/wiki/EFI_System_partition \"External link\")? I think it could in theory.  \n\u003e\n\u003e **11\\]** - Removable media cannot be converted to a GPT disk?\n\u003e\n\u003e Never tried - maybe Easus Home Partition Master will do it?  \n\u003e\n\u003e **12\\]** - if Removable media is used then it should contain one FAT32 partition containing the EFI boot files?\n\u003e\n\u003e yes - but this applies to ANY type of boot device (e.g. USB HDDs) also.  \n\u003e\n\u003e **13\\]** - if removable media with one FAT32 partition is used then this partition can also be set as active and the same device can be booted on BIOS based systems providing that bootmgr and \\\\boot\\\\BCD are also present?\n\u003e\n\u003e In theory the partitions \u0027Active\u0027 flag could be set or cleared - it shouldn\u0027t matter for UEFI booting. It also shouldn\u0027t matter for MBR booting - e.g. grub4dos mbr will boot to grub4dos in MBR mode even if no partition is marked as Active - it depends on what the MBR boot code does. In practise, some MBR BIOSes do seem to need an active partition.  \n\u003e\n\u003e **14\\]** - the Compatibility Support Module (CSM) provides legacy BIOS compatibility and will boot MBR partitioned disks.\n\u003e\n\u003e Yes  \n\u003e\n\u003e Any help/clarification/information will be appreciated as my tests so far have been limited to VMWare Player with the following workaround manually added to the virtual machine configuration file -\n\u003e\n\u003e ```\n\u003e firmware\u003d\"efi\"\n\u003e ```\n\u003e\n\u003e Regards,  \n\u003e\n\u003e Misty\n\u003e\n\u003cbr /\u003e\n\n"
    },
    {
      "id": "184271",
      "timestamp": "2014-05-12T19:02:40+00:00",
      "author": "Wonko the Sane",
      "content": "JFYI (should you have missed any of them):\n\n[http://homepage.ntlw...ot-process.html](http://homepage.ntlworld.com./jonathan.deboynepollard/FGA/efi-boot-process.html \"External link\")\n\n[http://homepage.ntlw...ot-process.html](http://homepage.ntlworld.com/jonathan.deboynepollard/FGA/windows-nt-6-boot-process.html \"External link\")\n\n[http://www.thomas-kr...tick_in_Windows](http://www.thomas-krenn.com/en/wiki/Creating_Windows_UEFI_Boot-Stick_in_Windows \"External link\")\n\n[http://technet.micro...y/dn336950.aspx](http://technet.microsoft.com/en-us/library/dn336950.aspx \"External link\")\n\n[http://www.911cd.net...showtopic\u003d25262](http://www.911cd.net/forums//index.php?showtopic\u003d25262 \"External link\")\n\n[http://www.911cd.net...showtopic\u003d25596](http://www.911cd.net/forums//index.php?showtopic\u003d25596 \"External link\")\n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "184272",
      "timestamp": "2014-05-12T19:08:17+00:00",
      "author": "steve6375",
      "content": "Guess a useful bit from Wonko\u0027s link for the PE boot chain is...\n\u003e\n\u003e Windows NT versions 5.x\n\u003e\n\u003e For the 64-bit versions of Windows NT 5.x, the EFI boot loader is \\\\EFI\\\\Microsoft\\\\WINNT50\\\\IA64LDR.EFI (sometimes \\\\EFI\\\\Microsoft\\\\WINNT50C\\\\IA64LDR.EFI), which comprises NTLDR, the Windows NT boot loader that loads and executes the Windows NT kernel from files in the Windows boot volume.\n\u003e\n\u003e 64-bit versions of Windows NT 5.x use EFI as it was designed to be used.\n\u003e\n\u003e Windows NT versions 6.x\n\u003e\n\u003e For Windows NT 6, the EFI boot loader is \\\\EFI\\\\Microsoft\\\\Boot\\\\Bootmgfw.efi, which is the Microsoft Boot Manager --- another boot manager, which presents a second menu of boot options, read from a database file in a Microsoft-proprietary format, which in turn list boot loader programs to invoke and options to pass to them.\n\u003e\n\u003e Windows NT 6 needlessly duplicates the functionality of the EFI boot manager, and needlessly makes a user-visible distinction between all other operating systems (listed on the first boot manager menu, which Microsoft configures to be displayed for only 2 seconds in order to, in Microsoft\u0027s own words, \"make it easier\" for users) and Windows NT (listed on the second boot manager menu).\n\u003e\nSo after Bootmgfw.efi I guess it looks at the BCD...?\n\nand\n\u003e On EFI firmware machines, it is a file located in the \"\\\\EFI\\\\Microsoft\\\\Boot\\\\\" directory on the EFI system partition.\n\n"
    },
    {
      "id": "184273",
      "timestamp": "2014-05-12T19:59:37+00:00",
      "author": "erwan.l",
      "content": "Hi Misty,\n\nAnother common mistake as well : dont forget that a EFI BCD shall look at winload.efi whereas a non EFI BCD shall look at winload.exe.\n\nRegards,\n\nErwan\n\n"
    },
    {
      "id": "184274",
      "timestamp": "2014-05-12T20:02:19+00:00",
      "author": "misty",
      "content": "**@steve6375** , **Wonko** and **erwan.l**   \nThank you all very much for the informative responses. This will really help with the goal of implementing UEFI support in MistyPE/Mini-WinFE ![:cheers:](http://reboot.pro/public/style_emoticons/default/cheers.gif)  \n\n\u003cbr /\u003e\n\n\u003e So after Bootmgfw.efi I guess it looks at the BCD...?  \n\u003e\n\u003e and\n\u003e\n\u003e \u003cbr /\u003e\n\u003e\n\u003e \u003cbr /\u003e\n\u003e\n\u003e \u003e On EFI firmware machines, it is a file located in the \"\\\\EFI\\\\Microsoft\\\\Boot\\\\\" directory on the EFI system partition.\n\u003e\n\u003e \u003cbr /\u003e\n\u003e\nOn my test (VM) system I didn\u0027t use Bootmgfw.efi at all - just bootia32.efi/bootx64.efi copied from a Windows source DVD. I suspect these files are identical to the respective bootmgfw.efi files - although I haven\u0027t checked in a hex editor.  \n\n**@everyone**   \nIs there any advantage at all in using a GPT disk (with a seperate ESP) over a basic (MBR) disk with a FAT32 partition?  \n\nRegards,  \n\nMisty  \n\nP.s. If I follow all of Wonko\u0027s links (+ links to links to links, etc) how many years older will I be :tongue:   \n"
    },
    {
      "id": "184275",
      "timestamp": "2014-05-12T20:39:06+00:00",
      "author": "alacran",
      "content": "You will be Teraold then.\n\n"
    },
    {
      "id": "184276",
      "timestamp": "2014-05-12T21:04:35+00:00",
      "author": "cdob",
      "content": "\u003e Is there any advantage at all in using a GPT disk (with a seperate ESP) over a basic (MBR) disk with a FAT32 partition?\nIt may be possible a strange OEM machine requires GPT and declines MBR.  \nI haven\u0027t detected one so far. MBR works always.  \n\n@all  \nCan anybody claim GPT only case?  \nWhich machine requires GPT and declines MBR?  \n\nAt small USB SSD I\u0027m using MBR and one FAT32 partition.  \nAt bigger ones one FAT32 and another NTFS partition.  \n\nThere is disk limit 2 TB at MBR.  \nIt\u0027ll take a some time till I reach the limit at a spare 4 TB USB SSD...  \n\nAnother case: given a GPT disk with data.  \nAdd UEFI boot files to this disk. Given existings partitions this is simple less simple.   \n"
    },
    {
      "id": "184277",
      "timestamp": "2014-05-13T05:33:56+00:00",
      "author": "erwan.l",
      "content": "Related (thus including PXE) : Boot WINPE over PXE on a UEFI computer ([http://labalec.fr/erwan/?p\u003d791](http://labalec.fr/erwan/?p\u003d791 \"External link\"))   \n"
    },
    {
      "id": "184278",
      "timestamp": "2014-05-13T06:53:56+00:00",
      "author": "misty",
      "content": "Thanks again to everyone for their responses. I have a bit more time to reply, so here goes.  \n\n\u003e It may be possible a strange OEM machine requires GPT and declines MBR.  \n\u003e I haven\u0027t detected one so far. MBR works always.\nThis is interesting and welcome news - most of the Windows based UEFI booting appears to be steering towards the use of GPT disks ![:frusty:](http://reboot.pro/public/style_emoticons/default/frusty.gif)  \n\n\u003cbr /\u003e\n\n\u003e Another common mistake as well : dont forget that a EFI BCD shall look at winload.efi whereas a non EFI BCD shall look at winload.exe.\nMy UEFI BCD store did contain an entry for winload.efi. Your comment prompted me to check my *NORMAL* (non-UEFI) BCD store and I noticed that an entry for winload.exe was missing, however WinPE was still booting. I did a quick test and made a new BCD store without the *path \\\\windows\\\\system32\\\\winload.efi* entry - the VM still booted my WinPE. In fact, it was possible to boot both a UEFI and non-UEFI with the same BCD store (in different locations). This was a quick test with an x64 build of WinPE 4.0.  \n\n\u003cbr /\u003e\n\n\u003e JFYI (should you have missed any of them):\nI did (miss them, ++ALL++ of them) - so thanks. Your google fu is extra-ordinary ![:worship:](http://reboot.pro/public/style_emoticons/default/worship.gif) I particularly liked the 911cd forum threads - your ongoing education of Ed is most amusing. You are a very patient teacher.  \n\n\u003cbr /\u003e\n\n\u003e Why not use a VM like VirtualBox? You can boot from a VDisk or a USB disk by using DavidB\u0027s VMUB utility. You can test both 64-bit and 32-bit UEFI booting. Just set up the VM.\nI did use VMWare Player, and this was helpful. Most of the questions in my first post were actually verified on a VM, however I was also after feedback about UEFI on real hardware as there\u0027s a lot of information out there about very different implementations of UEFI depending on the vendor/OEM. The VMUB utility sounds interesting - thanks for the headsup ![:thumbsup:](http://reboot.pro/public/style_emoticons/default/thumbsup.gif)  \n\n\u003e **3\\]** - a 64-bit UEFI system cannot boot a 32-bit WinPE?  \n\u003e\n\u003e Not sure if it cannot boot - but most UEFI firmware versions which are running on 64-bit CPUs just ignore 32-bit efi boot files.\nI did a quick test in my VM prior to my first post. I used a 64-bit VM and a 64-bit .efi boot file to try to boot a 32-bit WinPE. boot.wim was loaded to RAM and the boot process started, then resulted in an error (can\u0027t remember what the error was, I think it related to winload.efi. This is frustrating as I see no reason why a 32-bit WinPE cannot boot on a 64-bit UEFI system. This (from [here](http://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface \"External link\")) might be relevant -  \n\n```\nProcessor compatibility\n...UEFI requires the firmware and operating system loader (or kernel) to be size-matched; for example, a 64-bit UEFI implementation can only load a 64-bit UEFI operating system boot loader or kernel. After the system transitions from \"Boot Services\" to \"Runtime Services\", the operating system kernel takes over. At this point, the kernel can change processor modes if it desires, but this bars usage of the runtime services (unless the kernel switches back again)....\n```\n\n\u003e **8\\]** - the only boot files actually required on a UEFI system (for WinPE boot) are -  \n\u003e \\* \\\\EFI\\\\boot\\\\bootia32.efi (or bootx64.efi on amd64 UEFI systems)  \n\u003e \\* \\\\EFI\\\\microsoft\\\\boot\\\\BCD  \n\u003e\n\u003e depends what is in the .efi file - it could boot to grub2 first... I have not studied the \u0027boot chain\u0027 fully - maybe someone else can fill you (and me) in?\nWhilst this is interesting, my very narrow focus (at this time) is UEFI WinPE boot using standard MS files. Cheers anyway.  \n\n\u003e 10 - Microsoft recommends that the EFI partition not contain WinPE, however WinPE will boot from this hidden partition?  \n\u003e\n\u003e What is an EFI partition? Do you mean ESP? I think it could in theory.\nI did mean ESP - thanks for the correction. It did boot on a VM and the added advantage is that a generic BCD store can be used with paths (device, etc) set as *boot* .  \n\n\u003e **12\\]** - if Removable media is used then it should contain one FAT32 partition containing the EFI boot files?  \n\u003e\n\u003e yes - but this applies to ANY type of boot device (e.g. USB HDDs) also.\nThe best news of all - also confirmed by others.  \n\nThanks again to everyone.  \n\n![:cheers:](http://reboot.pro/public/style_emoticons/default/cheers.gif)  \n\nMisty   \n"
    },
    {
      "id": "184280",
      "timestamp": "2014-05-13T10:22:45+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e P.s. If I follow all of Wonko\u0027s links (+ links to links to links, etc) how many years older will I be :tongue:\n\nEver wondered WHY EXACTLY you say \"**wise** , ++*old*++ man\"? ![:dubbio:](http://reboot.pro/public/style_emoticons/default/dubbio.gif)\n\n\u003e I did (miss them, ++ALL++ of them) - so thanks. Your google fu is extra-ordinary ![:worship:](http://reboot.pro/public/style_emoticons/default/worship.gif) I particularly liked the 911cd forum threads - your ongoing education of Ed is most amusing. You are a very patient teacher.  \n\nJFYI, Ed_P is a rather expert user (and I believe a mainframe programmer in a previous job), he knows much more than you might think about computers, but he has a strange \"allergy\" for the initial booting part, and sometimes, when these matters are touched, it can happen that he goes a bit astray and needs to be shouted at ![:w00t:](http://reboot.pro/public/style_emoticons/default/w00t.gif) to regain connection with the issue at hand. I am not particularly patient, but when I have to \"fight\" with my friend Ed_P, I find it useful to shout a little louder than usual, as -historically - it helps getting faster to the solution (besides having some fun with the bickering :wink:).\n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "184287",
      "timestamp": "2014-05-13T13:56:33+00:00",
      "author": "pscEx",
      "content": "\u003e P.s. If I follow all of Wonko\u0027s links (+ links to links to links, etc) how many years older will I be :tongue:\n\n![:clap:](http://reboot.pro/public/style_emoticons/default/clap.gif)\n\nPeter ![:cheers:](http://reboot.pro/public/style_emoticons/default/cheers.gif)\n\n"
    },
    {
      "id": "184295",
      "timestamp": "2014-05-13T20:07:37+00:00",
      "author": "misty",
      "content": "\u003e \u003cbr /\u003e\n\u003e\n\u003e \u003e **3\\]** - a 64-bit UEFI system cannot boot a 32-bit WinPE?  \n\u003e \u003e\n\u003e \u003e Not sure if it cannot boot - but most UEFI firmware versions which are running on 64-bit CPUs just ignore 32-bit efi boot files.\n\u003e I did a quick test in my VM prior to my first post. I used a 64-bit VM and a 64-bit .efi boot file to try to boot a 32-bit WinPE. boot.wim was loaded to RAM and the boot process started, then resulted in an error (can\u0027t remember what the error was, I think it related to winload.efi. This is frustrating as I see no reason why a 32-bit WinPE cannot boot on a 64-bit UEFI system. This (from [here](http://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface \"External link\")) might be relevant -  \n\u003e\n\u003e ```\n\u003e Processor compatibility\n\u003e ...UEFI requires the firmware and operating system loader (or kernel) to be size-matched; for example, a 64-bit UEFI implementation can only load a 64-bit UEFI operating system boot loader or kernel. After the system transitions from \"Boot Services\" to \"Runtime Services\", the operating system kernel takes over. At this point, the kernel can change processor modes if it desires, but this bars usage of the runtime services (unless the kernel switches back again)....\n\u003e ```\n\u003e\n\u003e \u003cbr /\u003e\n\u003e\nJust checked this again. The error code is as follows -  \n\n```\nFile: \\windows\\system32\\winload.efi\nStatus: 0xc0000359\nInfo: The selected entry could not be loaded because the application is missing or corrupt.\n```\n\nThis was an attempt to use a 32-bit WinPE 4.0 on a 64-bit VM with UEFI firmware.  \n\nRegards,  \n\nMisty   \n"
    },
    {
      "id": "184300",
      "timestamp": "2014-05-14T05:49:07+00:00",
      "author": "Agent47",
      "content": "\u003e Removable media cannot be converted to a GPT disk?\n\n\"Rufus\" can create GPT partitioned removable disk.\n\n[http://rufus.akeo.ie/](http://rufus.akeo.ie/ \"External link\")\n\n[http://www.eightforu...te-windows.html](http://www.eightforums.com/tutorials/15458-uefi-bootable-usb-flash-drive-create-windows.html \"External link\")\n\nBut so far all UEFI systems seems to boot fine from MBR partitioned, FAT32 formatted removable media.\n\n"
    },
    {
      "id": "184301",
      "timestamp": "2014-05-14T06:07:18+00:00",
      "author": "erwan.l",
      "content": "Actually, is not there often a confusion between UEFI and GPT?\n\nThe first is a firmware specification whereas the later is a disk specification.\n\nThe UEFI specs include GPT but it does not mean GPT is a pre requisite to UEFI.\n\nEven if some vendors might make it mandatory in the future.\n\nTo my understanding, GPT was invented to get rid of MBR limitations (the 2TB limit being one of them).\n\nI did not read in depth the UEFI specs but [wikipedia](http://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface \"External link\")for states:\n\n```\nDisk device compatibility\n\nIn addition to the standard PC disk partition scheme, which uses a master boot record (MBR), UEFI works with a new partitioning scheme: GUID Partition Table (GPT). GPT is free from many of the limitations of MBR. In particular, the MBR limits on the number and size of disk partitions (up to 4 primary partitions per disk, up to 2 TB  per disk) are relaxed. GPT allows for a maximum disk and partition size of 8 ZB .\n\nThe UEFI specification explicitly requires support for FAT32 for EFI System partitions (ESPs), and FAT16 or FAT12 for removable media; specific implementations may support other file systems.\n```\n\n\u003cbr /\u003e\n\n"
    },
    {
      "id": "185254",
      "timestamp": "2014-06-29T17:40:52+00:00",
      "author": "devdevadev",
      "content": "Lots of thanks to Everyone for sharing very useful information regarding UEFI booting...........\n\nRegards...............\n\n**Edited by devdevadev, 29 June 2014 - 05:42 PM.**\n"
    }
  ]
}