{
  "id": "20187",
  "title": "Optimizing boot scripts",
  "isPinned": false,
  "isFirstTopic": false,
  "isLocked": false,
  "tags": [],
  "forumNotes": [
    {
      "id": "188955",
      "timestamp": "2014-12-01T08:31:39+00:00",
      "author": "DavidB",
      "content": "I created this topic to continue the offtopic discussion from [http://reboot.pro/to...n-datatraveler/](http://reboot.pro/topic/20176-need-tool-to-flip-the-removable-bit-on-a-kingston-datatraveler/ \"\")  \nThis way I will be ontopic ![:D](http://reboot.pro/public/style_emoticons/default/biggrin.png)  \n\nI modified my Grub4DOS boot scripts so I can save/load the automatic loading of the internal USB 2.0 driver from 0.46a.  \nAlso I implemented a way to detect if the driver is already enabled, using info found at this page: [http://www.rmprepusb...s-and-functions](http://www.rmprepusb.com/tutorials/grub4dos/grub4dos-internal-variables-and-functions \"External link\") (thank you Steve).   \n\nmenu.lst:  \n\n```\nif not \"%MAINRAN%\"\u003d\u003d\"1\" call /initialize.g4b.gz\ndefault %DefMenu%\n\ntitle ^U USB 2.0 internal driver (U)\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nconfigfile /usb2load.lst\n\ntitle\nroot\n\ntitle Ultimate BootCD 5.33\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nconfigfile /ubcd/menus/grub4dos/main.lst\n\ntitle Memtest 5.01\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nmap /iso/memtest.img (fd0)||map --mem /iso/memtest.img (fd0)\nmap --hook\nchainloader (fd0)+1\nrootnoverify (fd0)\nmap --floppies\u003d1\n\ntitle Paragon Backup \u0026 Recovery CD\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nmap /iso/Paragon_BootCD.iso (0xFF)||map --mem /iso/Paragon_BootCD.iso (0xFF)\nmap --hook\nroot (0xFF)\nchainloader (0xFF)\n\ntitle ^P Paragon Backup \u0026 Recovery CD 2nd way (P)\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nmap /iso/Paragon_BootCD.iso (0xFF)||map --mem /iso/Paragon_BootCD.iso (0xFF)\nmap --hook\nroot (0xff)\nkernel /VMLINUZP vga\u003d0x314\ninitrd /INITRD.GZ\n\ntitle ^M MiniTool Partition Wizard (M)\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nmap /iso/MiniTool_Partition_Wizard.iso (0xFF)||map --mem /iso/MiniTool_Partition_Wizard.iso (0xFF)\nmap --hook\nroot (0xFF)\nchainloader (0xFF)\n\ntitle gparted 0.20.0 live\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nmap /iso/gparted-live-0.20.0-2-i486.iso (0xff) || map --mem /iso/gparted-live-0.20.0-2-i486.iso (0xff)\nmap --hook\nroot (0xff)\nkernel /live/vmlinuz boot\u003dlive config union\u003daufs noswap noprompt vga\u003d788 ip\u003dfrommedia findiso\u003d/iso/gparted-live-0.20.0-2-i486.iso toram\u003dfilesystem.squashfs\ninitrd /live/initrd.img\n\ntitle Parted Magic\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nmap /iso/pmagic_2014_09_29.iso (0xff) || map --mem /iso/pmagic_2014_09_29.iso (0xff)\nmap --hook\nroot (0xff)\nkernel /pmagic/bzImage edd\u003doff load_ramdisk\u003d1 prompt_ramdisk\u003d0 rw vga\u003dnormal sleep\u003d10 loglevel\u003d0 max_loop\u003d256 vmalloc\u003d384MiB keymap\u003dus iso_filename\u003d/iso/pmagic_2014_09_29.iso\ninitrd /pmagic/initrd.img\n\ntitle PartitionGuru 462 FreeDOS\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nmap --mem /iso/PartitionGuru462FreeDOS.img.gz (fd0)\nmap --hook\nroot (fd0)\nchainloader /kernel.sys\n\ntitle SystemRescueCd\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nkernel /sysrcd/rescue32 subdir\u003dsysrcd setkmap\u003dus\ninitrd /sysrcd/initram.igz\n\ntitle\nroot\n\ntitle Knoppix LiveCD\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nconfigfile /KNOPPIX/knoppix.lst\n\ntitle ^F Start installed Fedora 18 on USB drive (F)\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nkernel (hd0,1)/boot/vmlinuz-3.9.9-201.fc18.i686 root\u003dUUID\u003d5831c69e-e9fd-4f61-812a-ebb9207c1155 rd.md\u003d0 rd.lvm\u003d0 rd.dm\u003d0 rd.luks\u003d0 rhgb quiet vga\u003d791\ninitrd (hd0,1)/boot/initramfs-3.9.9-201.fc18.i686.img\n\ntitle Switch to GRUB2 core.img for booting Linux (Ubuntu, Fedora etc)\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nclear\necho Please wait, searching for GRUB2 core img...\nset IMGF\u003d0\nfind --set-root --ignore-floppies --ignore-cd /boot/grub2/i386-pc/core.img \u003e nul \u0026\u0026 set IMGF\u003d1 \u0026\u0026 kernel /boot/grub2/i386-pc/core.img \u0026\u0026 boot\nif \"%IMGF%\"\u003d\u003d\"0\" find --set-root --ignore-floppies --ignore-cd /boot/grub/i386-pc/core.img \u003e nul \u0026\u0026 set IMGF\u003d1 \u0026\u0026 kernel /boot/grub/i386-pc/core.img \u0026\u0026 boot\nif \"%IMGF%\"\u003d\u003d\"0\" clear \u0026\u0026 echo GRUB2 core img not found! Returning to main menu... \u0026\u0026 pause --wait\u003d5\nconfigfile\n\ntitle\nroot\n\ntitle Start an antivirus rescue disk\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nconfigfile /antivirus.lst\n\ntitle\nroot\n\ntitle ^B Find bootable Windows NT/2000/XP/Vista/7/8 partitions (B)\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\ncall /findbwin.g4b.gz\nconfigfile\n\ntitle\nroot\n\ntitle Windows XP SP3 x86 setup\nmap --unmap\u003d0:0xff\nmap --unhook \u0026\u0026 map --rehook\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nls /usbdrive.tag \u003e nul || find --set-root --devices\u003dhf /usbdrive.tag\nconfigfile /winxpsetup.lst\n\ntitle Windows 7 SP1 setup\nmap --unmap\u003d0:0xff\nmap --unhook \u0026\u0026 map --rehook\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nls /usbdrive.tag \u003e nul || find --set-root --devices\u003dhf /usbdrive.tag\nconfigfile /win7setup.lst\n\ntitle\nroot\n\ntitle ^S Shutdown (S)\nhalt\n\ntitle ^R Reboot (R)\nreboot\n```\n\n\u003cbr /\u003e\n\ninitialize.g4b:  \n\n```\n!BAT\ntimeout 30 \u0026\u0026 /hotkey \u003e nul\ncolor black/cyan yellow/cyan \u003e nul\nset PLOPDRV\u003dFalse \u0026\u0026 cat --hex --locate\u003d\"PoLPu@\" --number\u003d1 (md)0x3d0+0x130 \u003e nul \u0026\u0026 set PLOPDRV\u003dTrue\nset USB2DRV\u003dFalse\nset /a USBDRN\u003d*0x8351 \u0026 0xff \u003e nul\nif not \"%USBDRN%\"\u003d\u003d\"0\" set USB2DRV\u003dTrue\nset LDUSBDRV\u003dFalse\nset MAINRAN\u003d1 \u0026\u0026 graphicsmode -1 640:800 480:600 24:32 \u003e nul\n\ncat --length\u003d3 --skip\u003d0 --number\u003d1 /menucfg | set NTS\u003d\nset /a DefMenu\u003d10*%NTS:~0,1%+%NTS:~1,1% \u003e nul\nif not \"%NTS:~2,1%\"\u003d\u003d\"1\" goto :end\nset LDUSBDRV\u003dTrue\nif \"%USB2DRV%\"\u003d\u003d\"False\" usb --init\nset /a USBDRN\u003d*0x8351 \u0026 0xff \u003e nul\nif not \"%USBDRN%\"\u003d\u003d\"0\" set USB2DRV\u003dTrue\n:end\n```\n\n\u003cbr /\u003e\n\nusb2load.lst:  \n\n```\ntimeout 30\ndefault 2\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu% \u003e nul\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu% \u003e nul\n\ntitle ...Back to Main Menu\nwrite --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nconfigfile /menu.lst\n\ntitle\nroot\n\niftitle [if \"%LDUSBDRV%\"\u003d\u003d\"False\"] Enable USB 2.0 internal driver automatic loading all sessions\nclear\nwrite --offset\u003d0 (bd)/menucfg %NTS%1 \u003e nul\nif \"%USB2DRV%\"\u003d\u003d\"True\" set LDUSBDRV\u003dTrue \u0026\u0026 echo -e USB 2.0 internal driver automatic loading enabled\nif \"%USB2DRV%\"\u003d\u003d\"False\" usb --init \u0026\u0026 set /a USBDRN\u003d*0x8351 \u0026 0xff \u003e nul ;; if \"%USB2DRV%\"\u003d\u003d\"False\" if not \"%USBDRN%\"\u003d\u003d\"0\" set USB2DRV\u003dTrue \u0026\u0026 set LDUSBDRV\u003dTrue \u0026\u0026 echo -e \\r\\nUSB 2.0 internal driver automatic loading enabled\necho -e Returning to main menu...\npause --wait\u003d5\nconfigfile /menu.lst\n\niftitle [if \"%LDUSBDRV%\"\u003d\u003d\"True\"] Disable USB 2.0 internal driver automatic loading all sessions\nclear\nwrite --offset\u003d0 (bd)/menucfg %NTS%0 \u003e nul\nset LDUSBDRV\u003dFalse \u003e nul \u0026\u0026 echo -e USB 2.0 internal driver automatic loading disabled\\r\\nReturning to main menu...\npause --wait\u003d5\nconfigfile /menu.lst\n\niftitle [if \"%USB2DRV%\"\u003d\u003d\"False\"] Just enable USB 2.0 internal driver this session\nclear\nusb --init\nset /a USBDRN\u003d*0x8351 \u0026 0xff \u003e nul\nif not \"%USBDRN%\"\u003d\u003d\"0\" set USB2DRV\u003dTrue\necho -e \\r\\nReturning to main menu...\npause --wait\u003d5\nconfigfile /menu.lst\n```\n\n\u003cbr /\u003e\n\nBtw, here I used the slow iftitle\u0027s because I rarely use this menu (it\u0027s loading the USB driver automatically).  \n\nThe rest of the files: [![Attached File](http://reboot.pro/public/style_extra/mime_types/zip.gif)](http://reboot.pro/index.php?s\u003db2bb83e5b7a6c070bd95d328d04bc0fc\u0026app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d15172 \"Download attachment\") [**Files.7z**](http://reboot.pro/index.php?s\u003db2bb83e5b7a6c070bd95d328d04bc0fc\u0026app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d15172 \"Download attachment\") **7.59KB** 402 downloads  \n\n1. As you can see, in menu.lst I\u0027m not using the savedefault function anymore. I made some custom code:  \n\n```\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\n```\n\n\u003cbr /\u003e\n\nIn the same file (menucdfg) I save 0/1 in the third position to enable/disable the automatic loading of the USB 2.0 internal driver.  \n\nIf DefMenu is in 0..9, a \u00270\u0027 is added in front so it would always be saved as 2 chars.  \nQuestion: is there a simpler way to do this?  \n\n2. The USB 2.0 internal driver detection code:  \n\n```\nset USB2DRV\u003dFalse\nset /a USBDRN\u003d*0x8351 \u0026 0xff \u003e nul\nif not \"%USBDRN%\"\u003d\u003d\"0\" set USB2DRV\u003dTrue\n```\n\n\u003cbr /\u003e\n\nSeems to work fine.  \nBut there is a problem: if Grub4DOS is reloaded without restarting the computer, the USB 2.0 driver is still active but this code sets USB2DRV to False.  \nIs there a way to modify the code to work fine in this situation too?  \n\n3. The code for loading configuration from menucfg:  \n\n```\nset LDUSBDRV\u003dFalse\ncat --length\u003d3 --skip\u003d0 --number\u003d1 /menucfg | set NTS\u003d\nset /a DefMenu\u003d10*%NTS:~0,1%+%NTS:~1,1% \u003e nul\nif not \"%NTS:~2,1%\"\u003d\u003d\"1\" goto :end\nset LDUSBDRV\u003dTrue\nif \"%USB2DRV%\"\u003d\u003d\"False\" usb --init\nset /a USBDRN\u003d*0x8351 \u0026 0xff \u003e nul\nif not \"%USBDRN%\"\u003d\u003d\"0\" set USB2DRV\u003dTrue\n:end\n```\n\n\u003cbr /\u003e\n\nNotice the use of \"cat\" command to read from file into the variable. But this command is slow (about 1 sec on my computer). dd command is a lot faster but when I tried to read from the memory location into the variable it didn\u0027t do anything.  \nIs there a way to use only dd without cat?  \n\nThank you.  \n\nRegards,  \nDavid   \n"
    },
    {
      "id": "188960",
      "timestamp": "2014-12-01T11:09:46+00:00",
      "author": "steve6375",
      "content": "is this any good?\n\n```\nset /a NTS\u003d*0x8276\u00260xff \u003e nul ;; if %NTS%\u003c\u003d9 set NTS\u003d0%NTS%\n```\n\nAlso not sure if it is any faster but you could save NTS as a batch file\n\n```\necho -e !BAT\\nset NTS\u003d%NTS% \u003e (bd)/menu.cfg\n```\n\nand then retrieve the value using\n\n```\ncall (bd)/menu.cfg\n```\n\nYou could add on the USBdrive value or any other parameter too\n\n```\necho -e !BAT\\nset NTS\u003d%NTS%\\nset USBD\u003d%USBD% \u003e (bd)/menu.cfg\n```\n\n\u003cbr /\u003e\n\n"
    },
    {
      "id": "188966",
      "timestamp": "2014-12-01T12:21:26+00:00",
      "author": "DavidB",
      "content": "Thank you.\n\n\u003e is this any good?\n\u003e\n\u003e set /a NTS\u003d\\*0x8276\\\u00260xff \\\u003e nul ;; if %NTS%\\\u003c\u003d9 set NTS\u003d0%NTS%\n\nYes, it is :smile:\n\nBut I have to assign the value also to DefMenu (used when menu.lst is reloaded).\n\nBut I just got an idea and tested something: \"default 07\", \"default 007\" and so on work the same way as \"default 7\" (good job, chenall :smile: )\n\nSo I can use DefMenu variable directly.\n\nBtw, in Grub4DOS 0.46a is there any internal variable or command to get the number of the menu entry you\u0027re in (not the selected 0x8276)? Because when you use a key combination created with hotkey the menu entry is started but not selected.\n\nIn the current implementation you could save some undesirable menu entries like Shutdown or Reboot ![:rolleyes:](http://reboot.pro/public/style_emoticons/default/rolleyes.gif)\n\n\u003e Also not sure if it is any faster but you could save NTS as a batch file\n\u003e\n\u003e \u003cbr /\u003e\n\u003e\n\u003e echo -e !BAT\\\\nset NTS\u003d%NTS% \\\u003e (bd)/menu.cfg\n\u003e\n\u003e and then retrieve the value using\n\u003e\n\u003e \u003cbr /\u003e\n\u003e\n\u003e call (bd)/menu.cfg\n\u003e\n\u003e You could add on the USBdrive value or any other parameter too\n\u003e\n\u003e \u003cbr /\u003e\n\u003e\n\u003e echo -e !BAT\\\\nset NTS\u003d%NTS%\\\\nset USBD\u003d%USBD% \\\u003e (bd)/menu.cfg\n\nIn theory it should not be faster. But, in the few years I\u0027m using Grub4DOS, I learned I should test instead of trusting only the theory ![:rolleyes:](http://reboot.pro/public/style_emoticons/default/rolleyes.gif) ![:hammer:](http://reboot.pro/public/style_emoticons/default/hammer.gif)\n\n"
    },
    {
      "id": "188972",
      "timestamp": "2014-12-01T14:44:51+00:00",
      "author": "DavidB",
      "content": "I tested and it\u0027s about the same time.\n\nBut I noticed something else: if I test with a 40 bytes bat file or with a 1000 Bytes it\u0027s no difference. It means the problem is not in the reading speed of the file, even with 800 KB/s in USB 1.1 it should be a lot faster.  \nI think most of the time is spent waiting for informations about the file location or searching for the location of the file on disk.  \nI wonder where the problem could be: in the USB drive controller, the computer BIOS or in Grub4DOS...\n\n"
    },
    {
      "id": "188973",
      "timestamp": "2014-12-01T15:07:06+00:00",
      "author": "steve6375",
      "content": "yes, the test I included in E2B - Utilities menu, measures the time for 100 loops of just using the ls command on a file.\n\nThe time this takes to execute varies considerable with different systems.\n\nI also noticed that running it on an NTFS system took twice as long as when run on a FAT32 system.\n\nIt should be a LOT faster with the grub4dos USB driver.\n\nI think that maybe the BIOS code uses polling rather than interrupts - some seem to be incredibly slow.\n\n"
    },
    {
      "id": "188976",
      "timestamp": "2014-12-01T16:22:07+00:00",
      "author": "DavidB",
      "content": "Yes, the BIOS seems to be the most probable cause.  \n\nI\u0027m thinking of loading the menu.lst into RAM using the preset-menu and starting it from there.  \nI noticed that it doesn\u0027t cache the menu.lst, it reads it directly from the drive when you start a menu entry.  \nFrom RAM it should be processed faster. For example it could be loaded at (md)0x19000 and started with \"configfile (md)0x19000\".\n\n"
    },
    {
      "id": "188988",
      "timestamp": "2014-12-02T08:49:02+00:00",
      "author": "DavidB",
      "content": "I loaded and started menu.lst into/from RAM + more.  \nNow it\u0027s loading faster :smile:  \n\npreset-menu.lst from grldr:  \n\n```\n\ncat --length\u003d8192 /mainmenu \u003e (md)0x19000+16\nconfigfile (md)0x19000+16\n```\n\nNow I\u0027m not using any \\*default file + I\u0027m not using menucfg also. All settings are saved and loaded directly into menu.lst file (now renamed \"mainmenu\").  \n\nmainmenu:  \n\n```\n\n;02103050502\nif not \"%MAINRAN%\"\u003d\u003d\"1\" call /initialize.g4b\ndefault %MNDEFMNU%\n\ntitle ^U USB 2.0 internal driver (U)\nset MNDEFMNU\u003d00\nconfigfile /usb2load.lst\n\ntitle\nroot\n\ntitle Ultimate BootCD 5.33\nset MNDEFMNU\u003d02\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nconfigfile /ubcd/menus/grub4dos/main.lst\n\ntitle Memtest 5.01\nset MNDEFMNU\u003d03\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nmap /iso/memtest.img (fd0)||map --mem /iso/memtest.img (fd0)\nmap --hook\nchainloader (fd0)+1\nrootnoverify (fd0)\nmap --floppies\u003d1\n\ntitle Paragon Backup \u0026 Recovery CD\nset MNDEFMNU\u003d04\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nmap /iso/Paragon_BootCD.iso (0xFF)||map --mem /iso/Paragon_BootCD.iso (0xFF)\nmap --hook\nroot (0xFF)\nchainloader (0xFF)\n\ntitle ^P Paragon Backup \u0026 Recovery CD 2nd way (P)\nset MNDEFMNU\u003d05\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nmap /iso/Paragon_BootCD.iso (0xFF)||map --mem /iso/Paragon_BootCD.iso (0xFF)\nmap --hook\nroot (0xff)\nkernel /VMLINUZP vga\u003d0x314\ninitrd /INITRD.GZ\n\ntitle ^M MiniTool Partition Wizard (M)\nset MNDEFMNU\u003d06\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nmap /iso/MiniTool_Partition_Wizard.iso (0xFF)||map --mem /iso/MiniTool_Partition_Wizard.iso (0xFF)\nmap --hook\nroot (0xFF)\nchainloader (0xFF)\n\ntitle gparted 0.20.0 live\nset MNDEFMNU\u003d07\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nmap /iso/gparted-live-0.20.0-2-i486.iso (0xff) || map --mem /iso/gparted-live-0.20.0-2-i486.iso (0xff)\nmap --hook\nroot (0xff)\nkernel /live/vmlinuz boot\u003dlive config union\u003daufs noswap noprompt vga\u003d788 ip\u003dfrommedia findiso\u003d/iso/gparted-live-0.20.0-2-i486.iso toram\u003dfilesystem.squashfs\ninitrd /live/initrd.img\n\ntitle Parted Magic\nset MNDEFMNU\u003d08\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nmap /iso/pmagic_2014_09_29.iso (0xff) || map --mem /iso/pmagic_2014_09_29.iso (0xff)\nmap --hook\nroot (0xff)\nkernel /pmagic/bzImage edd\u003doff load_ramdisk\u003d1 prompt_ramdisk\u003d0 rw vga\u003dnormal sleep\u003d10 loglevel\u003d0 max_loop\u003d256 vmalloc\u003d384MiB keymap\u003dus iso_filename\u003d/iso/pmagic_2014_09_29.iso\ninitrd /pmagic/initrd.img\n\ntitle PartitionGuru 462 FreeDOS\nset MNDEFMNU\u003d09\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nmap --mem /iso/PartitionGuru462FreeDOS.img.gz (fd0)\nmap --hook\nroot (fd0)\nchainloader /kernel.sys\n\ntitle SystemRescueCd\nset MNDEFMNU\u003d10\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nkernel /sysrcd/rescue32 subdir\u003dsysrcd setkmap\u003dus\ninitrd /sysrcd/initram.igz\n\ntitle\nroot\n\ntitle Knoppix LiveCD\nset MNDEFMNU\u003d12\nconfigfile /KNOPPIX/knoppix.lst\n\ntitle ^F Start installed Fedora 18 on USB drive (F)\nset MNDEFMNU\u003d13\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nkernel (hd0,1)/boot/vmlinuz-3.9.9-201.fc18.i686 root\u003dUUID\u003d5831c69e-e9fd-4f61-812a-ebb9207c1155 rd.md\u003d0 rd.lvm\u003d0 rd.dm\u003d0 rd.luks\u003d0 rhgb quiet vga\u003d791\ninitrd (hd0,1)/boot/initramfs-3.9.9-201.fc18.i686.img\n\ntitle Switch to GRUB2 core.img for booting Linux (Ubuntu, Fedora etc)\nset MNDEFMNU\u003d14\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nclear\necho Please wait, searching for GRUB2 core img...\nset IMGF\u003d0\nfind --set-root --ignore-floppies --ignore-cd /boot/grub2/i386-pc/core.img \u003e nul \u0026\u0026 set IMGF\u003d1 \u0026\u0026 kernel /boot/grub2/i386-pc/core.img \u0026\u0026 boot\nif \"%IMGF%\"\u003d\u003d\"0\" find --set-root --ignore-floppies --ignore-cd /boot/grub/i386-pc/core.img \u003e nul \u0026\u0026 set IMGF\u003d1 \u0026\u0026 kernel /boot/grub/i386-pc/core.img \u0026\u0026 boot\nif \"%IMGF%\"\u003d\u003d\"0\" clear \u0026\u0026 echo GRUB2 core img not found! Returning to main menu... \u0026\u0026 pause --wait\u003d5\nconfigfile %MAINMENU%\n\ntitle\nroot\n\ntitle Start an antivirus rescue disk\nset MNDEFMNU\u003d16\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nconfigfile /antivirus.lst\n\ntitle\nroot\n\ntitle ^B Find bootable Windows NT/2000/XP/Vista/7/8 partitions (B)\nset MNDEFMNU\u003d18\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\ncall /findbwin.g4b\nconfigfile %MAINMENU%\n\ntitle\nroot\n\ntitle Windows XP SP3 x86 setup\nmap --unmap\u003d0:0xff\nmap --unhook \u0026\u0026 map --rehook\nset MNDEFMNU\u003d20\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nls /usbdrive.tag \u003e nul || find --set-root --devices\u003dhf /usbdrive.tag\nconfigfile /winxpsetup.lst\n\ntitle Windows 7 SP1 setup\nmap --unmap\u003d0:0xff\nmap --unhook \u0026\u0026 map --rehook\nset MNDEFMNU\u003d21\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nls /usbdrive.tag \u003e nul || find --set-root --devices\u003dhf /usbdrive.tag\nconfigfile /win7setup.lst\n\ntitle\nroot\n\ntitle ^S Shutdown (S)\nhalt\n\ntitle ^R Reboot (R)\nreboot\n```\n\nAs you can see in the beginning of the file there is \";02103050502\". 02 \u003d position in main menu, 1 \u003d load USB internal driver, 03/05/05/02 \u003d positions in other menu files.  \n\ninitialize.g4b:  \n\n```\n\n!BAT\ntimeout 30 \u0026\u0026 /hotkey \u003e nul\ncolor black/cyan yellow/cyan \u003e nul\nset MAINMENU\u003d(md)0x19000+16\nset PLOPDRV\u003dFalse \u0026\u0026 cat --hex --locate\u003d\"PoLPu@\" --number\u003d1 (md)0x3d0+0x130 \u003e nul \u0026\u0026 set PLOPDRV\u003dTrue\nset USB2DRV\u003dFalse\nset /a USBDRN\u003d*0x8351 \u0026 0xff \u003e nul\nif not \"%USBDRN%\"\u003d\u003d\"0\" set USB2DRV\u003dTrue\nset LDUSBDRV\u003d0\nset MAINRAN\u003d1 \u0026\u0026 graphicsmode -1 640:800 480:600 24:32 \u003e nul\n\ncat --length\u003d11 --skip\u003d1 --number\u003d1 %MAINMENU% | set NTS\u003d\nset MNDEFMNU\u003d%NTS:~0,2%\nset LDUSBDRV\u003d%NTS:~2,1%\nset KNDEFMNU\u003d%NTS:~3,2%\nset AVDEFMNU\u003d%NTS:~5,2%\nset XPDEFMNU\u003d%NTS:~7,2%\nset W7DEFMNU\u003d%NTS:~9,2%\nif not \"%LDUSBDRV%\"\u003d\u003d\"1\" goto :end\nif \"%USB2DRV%\"\u003d\u003d\"False\" usb --init\nset /a USBDRN\u003d*0x8351\u00260xff \u003e nul\nif not \"%USBDRN%\"\u003d\u003d\"0\" set USB2DRV\u003dTrue\n:end\n```\n\nThe rest of the files: [![Attached File](http://reboot.pro/public/style_extra/mime_types/zip.gif)](http://reboot.pro/index.php?s\u003db2bb83e5b7a6c070bd95d328d04bc0fc\u0026app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d15177 \"Download attachment\") [**files.7z**](http://reboot.pro/index.php?s\u003db2bb83e5b7a6c070bd95d328d04bc0fc\u0026app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d15177 \"Download attachment\") **151.8KB** 391 downloads  \n\nQuestions:  \n\n1. Is there a simpler and/or faster way to get those 6 variables from (md)190000+16 (instead of \"cat --length\u003d11 --skip\u003d1 --number\u003d1 %MAINMENU% \\| set NTS\u003d\")?  \n2. I used a batch file for initialization (initialize.g4b) because the code was simpler and better (in lst I had to use a lot of if\u0027s + goto\u0027s don\u0027t work).  \nIs there a way to get the code back into the menu.lst (mainmenu file) but without losing the simplicity or functionality...?\n\n"
    },
    {
      "id": "188992",
      "timestamp": "2014-12-02T13:14:35+00:00",
      "author": "DavidB",
      "content": "Just noticed something: the modifications made to memory seems to be local on each menu entry.  \nFor example, if I use this code in a menu entry:  \ncat --length\u003d2048 /usb2load.lst \\\u003e (md)0x19010+4  \nconfigfile (md)0x19010+4  \nThe menu is loaded but when I load again the main menu and try again \"configfile (md)0x19010+4\", it\u0027s not loading. I looked at the memory location, only 0\u0027s.  \nHowever, if I use \"cat --length\u003d2048 /usb2load.lst \\\u003e (md)0x19010+4\" into the code before menu entries, it works.  \n\nIs there a way, beside using \"cat --length\u003d2048 /usb2load.lst \\\u003e (md)0x19010+4\" into the code before menu entries, to make the changes to memory permanent?\n\n"
    },
    {
      "id": "188993",
      "timestamp": "2014-12-02T13:26:26+00:00",
      "author": "steve6375",
      "content": "Your mainmenu is loaded into (md)19000+16\n\nYou other menu is at 19010+4\n\nSo if you main menu is larger than 0x10\\*512bytes \u003d 8K then it will overwrite (md)0x19010.\n\nCould this be something to do with it?\n\n"
    },
    {
      "id": "188994",
      "timestamp": "2014-12-02T13:30:38+00:00",
      "author": "DavidB",
      "content": "No, because the main menu is actually smaller than 10 (x512).\n\nBut I tried with 19050 in the menu entry, even with 20000, same problem.\n\n"
    },
    {
      "id": "188995",
      "timestamp": "2014-12-02T13:38:49+00:00",
      "author": "steve6375",
      "content": "cat --length\u003d1 /mainmenu \\\u003e (md)0x1900+20 will zero all 20 sectors.\n\nbut using 19000 and 20000 should work???\n\n"
    },
    {
      "id": "188996",
      "timestamp": "2014-12-02T13:43:41+00:00",
      "author": "DavidB",
      "content": "\u003e cat --length\u003d1 /mainmenu \\\u003e (md)0x1900+20 will zero all 20 sectors.\n\nYes, but I\u0027m not using this command when I load again the main menu. I just use \"configfile (md)0x19000+16\". So the sectors will not be zeroed.\n\n\u003e but using 19000 and 20000 should work???\n\nYes, it should, but it doesn\u0027t...\n\n"
    },
    {
      "id": "188998",
      "timestamp": "2014-12-02T14:03:37+00:00",
      "author": "steve6375",
      "content": "Can you provide simplified example?\n\nAre you using latest grub4dos 0.4.5c?\n\n"
    },
    {
      "id": "188999",
      "timestamp": "2014-12-02T14:15:07+00:00",
      "author": "DavidB",
      "content": "I\u0027m using 0.46a.\n\nI\u0027ll try to make a simplified example...\n\nLE:\n\nmenu.lst:\n\n```\n\nif not \"%MAINRAN%\"\u003d\u003d\"1\" set TESTMNU\u003dFalse \u0026\u0026 set MAINRAN\u003d1\n\ntitle Test menu\nif \"%TESTMNU%\"\u003d\u003d\"False\" cat --length\u003d2048 /testmenu.lst \u003e (md)0x19030+4 \u0026\u0026 set TESTMNU\u003dTrue\nconfigfile (md)0x19030+4\n\n```\n\ntestmenu.lst:\n\n```\n\n\n\ntitle ...Back to Main Menu\nconfigfile /menu.lst\n\ntitle\nroot\n\n\n```\n\nBtw, it does the same with 0.45c.\n\n"
    },
    {
      "id": "189000",
      "timestamp": "2014-12-02T14:48:01+00:00",
      "author": "steve6375",
      "content": "try\n\nif \"%TESTMNU%\"\u003d\u003d\"False\" \\\u0026\\\u0026 cat --length\u003d2048 /testmenu.lst \\\u003e (md)0x19030+4 \\\u0026\\\u0026 set TESTMNU\u003dTrue\n\n"
    },
    {
      "id": "189001",
      "timestamp": "2014-12-02T15:03:38+00:00",
      "author": "DavidB",
      "content": "It works now, but I don\u0027t know WHY it works... ![:frusty:](http://reboot.pro/public/style_emoticons/default/frusty.gif)\n\nThat \\\u0026\\\u0026 shouldn\u0027t be there... ![:confused1:](http://reboot.pro/public/style_emoticons/default/confused1.gif)\n\n"
    },
    {
      "id": "189002",
      "timestamp": "2014-12-02T15:27:53+00:00",
      "author": "steve6375",
      "content": "I think is a similar situation in a Windows shell\n\ne.g.\n\nset F\u003d0\n\nif \"%F%\"\u003d\u003d\"1\" echo fred \\\u003e x.txt\n\nthis either clears x.txt or puts fred in it\n\nThe redirection symbol is evaluated first and a pipe/handle opened even though the logic will never execute the preceding statement.\n\n"
    },
    {
      "id": "189003",
      "timestamp": "2014-12-02T15:50:06+00:00",
      "author": "DavidB",
      "content": "A sort of if/then/else ![:dubbio:](http://reboot.pro/public/style_emoticons/default/dubbio.gif)\n\n"
    },
    {
      "id": "189006",
      "timestamp": "2014-12-02T15:55:40+00:00",
      "author": "steve6375",
      "content": "I think it is a parsing thing\n\ne.g.\n\nif (something) then myfile.exe \\\u003e nul\n\nTo parse this the shell needs to know where to redirect any output from any command, so it looks for \\\u003e and \\\u003e\\\u003e (and probably \\| and \\\u0026 and ( ) first.\n\nOnce it knows where to redirect output to, it can start to execute the command(s).\n\nso\n\nif (1\u003d2) echo fred \\\u003e 1.txt\n\nwill always open a handle to 1.txt, if the line fails to execute, the handle will be closed and the file will be empty.\n\n"
    },
    {
      "id": "189007",
      "timestamp": "2014-12-02T16:04:53+00:00",
      "author": "DavidB",
      "content": "I understand.\n\nThank you for help :smile:\n\nWith this code the additional menus will be loaded faster like the main menu.\n\n"
    },
    {
      "id": "189009",
      "timestamp": "2014-12-02T17:04:34+00:00",
      "author": "Wonko the Sane",
      "content": "Just for the record.  \nTry (on NT system):  \nset F\u003d0  \nif \"%F%\"\u003d\u003d\"1\" echo fred \\\u003e x.txt  \nand:  \nset F\u003d0  \n\\\u003ex.txt if \"%F%\"\u003d\u003d\"1\" echo fred  \nthe latter is THE SAME, but written differently, sometimes it is more clear to use this latter syntax.  \nSee note (3) here:  \n[http://www.robvander...redirection.php](http://www.robvanderwoude.com/redirection.php \"External link\")  \nRedirection is a \"strange beast\" ![:w00t:](http://reboot.pro/public/style_emoticons/default/w00t.gif)  \n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)  \nWonko   \n"
    },
    {
      "id": "189011",
      "timestamp": "2014-12-02T18:20:57+00:00",
      "author": "DavidB",
      "content": "Thank you, Wonko.\n\n"
    },
    {
      "id": "189267",
      "timestamp": "2014-12-18T16:40:10+00:00",
      "author": "DavidB",
      "content": "As you know, when remapping the (bd) partition or the drive with the (bd) partition, (bd) will not point to the \"boot device\" anymore.  \n[http://code.google.c...es/detail?id\u003d30](http://code.google.com/p/grub4dos-chenall/issues/detail?id\u003d30 \"External link\")  \nThere is a way to find it: copy usbdrive.tag file in the root of (bd) and use \"ls /usbdrive.tag \\|\\| find --set-root --devices\u003dhf /usbdrive.tag\".  \nBut it\u0027s slow and it\u0027s not exactly what I need: an absolute path to any file/folder from (bd). For example, if I\u0027m on another partition and want to read/write from/in a file on (bd), with an absolute path I can do it without setting root to (bd).  \n\nIs there a better way...?\n\n"
    },
    {
      "id": "189268",
      "timestamp": "2014-12-18T18:12:18+00:00",
      "author": "steve6375",
      "content": "If the initial boot device is say (hd0,0) and then you map hd0 to hd1 and map hd1 to hd0 and then map --hook, (bd) will still be remembered as hd0,0 - so if you know that hd0 is now hd1, why not just access (hd1,0)/file.xxx instead of (bd).?\n\n"
    },
    {
      "id": "189269",
      "timestamp": "2014-12-18T18:30:55+00:00",
      "author": "DavidB",
      "content": "In a simple situation like you described, yes, it\u0027s logical to use (hd1,0) instead of (bd).  \nBut after using much complex code on an unknown computer configuration, it\u0027s not always easy to know which is the boot device.\n\n"
    },
    {
      "id": "188955",
      "timestamp": "2014-12-01T08:31:39+00:00",
      "author": "DavidB",
      "content": "I created this topic to continue the offtopic discussion from [http://reboot.pro/to...n-datatraveler/](http://reboot.pro/topic/20176-need-tool-to-flip-the-removable-bit-on-a-kingston-datatraveler/ \"\")  \nThis way I will be ontopic ![:D](http://reboot.pro/public/style_emoticons/default/biggrin.png)  \n\nI modified my Grub4DOS boot scripts so I can save/load the automatic loading of the internal USB 2.0 driver from 0.46a.  \nAlso I implemented a way to detect if the driver is already enabled, using info found at this page: [http://www.rmprepusb...s-and-functions](http://www.rmprepusb.com/tutorials/grub4dos/grub4dos-internal-variables-and-functions \"External link\") (thank you Steve).   \n\nmenu.lst:  \n\n```\nif not \"%MAINRAN%\"\u003d\u003d\"1\" call /initialize.g4b.gz\ndefault %DefMenu%\n\ntitle ^U USB 2.0 internal driver (U)\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nconfigfile /usb2load.lst\n\ntitle\nroot\n\ntitle Ultimate BootCD 5.33\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nconfigfile /ubcd/menus/grub4dos/main.lst\n\ntitle Memtest 5.01\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nmap /iso/memtest.img (fd0)||map --mem /iso/memtest.img (fd0)\nmap --hook\nchainloader (fd0)+1\nrootnoverify (fd0)\nmap --floppies\u003d1\n\ntitle Paragon Backup \u0026 Recovery CD\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nmap /iso/Paragon_BootCD.iso (0xFF)||map --mem /iso/Paragon_BootCD.iso (0xFF)\nmap --hook\nroot (0xFF)\nchainloader (0xFF)\n\ntitle ^P Paragon Backup \u0026 Recovery CD 2nd way (P)\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nmap /iso/Paragon_BootCD.iso (0xFF)||map --mem /iso/Paragon_BootCD.iso (0xFF)\nmap --hook\nroot (0xff)\nkernel /VMLINUZP vga\u003d0x314\ninitrd /INITRD.GZ\n\ntitle ^M MiniTool Partition Wizard (M)\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nmap /iso/MiniTool_Partition_Wizard.iso (0xFF)||map --mem /iso/MiniTool_Partition_Wizard.iso (0xFF)\nmap --hook\nroot (0xFF)\nchainloader (0xFF)\n\ntitle gparted 0.20.0 live\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nmap /iso/gparted-live-0.20.0-2-i486.iso (0xff) || map --mem /iso/gparted-live-0.20.0-2-i486.iso (0xff)\nmap --hook\nroot (0xff)\nkernel /live/vmlinuz boot\u003dlive config union\u003daufs noswap noprompt vga\u003d788 ip\u003dfrommedia findiso\u003d/iso/gparted-live-0.20.0-2-i486.iso toram\u003dfilesystem.squashfs\ninitrd /live/initrd.img\n\ntitle Parted Magic\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nmap /iso/pmagic_2014_09_29.iso (0xff) || map --mem /iso/pmagic_2014_09_29.iso (0xff)\nmap --hook\nroot (0xff)\nkernel /pmagic/bzImage edd\u003doff load_ramdisk\u003d1 prompt_ramdisk\u003d0 rw vga\u003dnormal sleep\u003d10 loglevel\u003d0 max_loop\u003d256 vmalloc\u003d384MiB keymap\u003dus iso_filename\u003d/iso/pmagic_2014_09_29.iso\ninitrd /pmagic/initrd.img\n\ntitle PartitionGuru 462 FreeDOS\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nmap --mem /iso/PartitionGuru462FreeDOS.img.gz (fd0)\nmap --hook\nroot (fd0)\nchainloader /kernel.sys\n\ntitle SystemRescueCd\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nkernel /sysrcd/rescue32 subdir\u003dsysrcd setkmap\u003dus\ninitrd /sysrcd/initram.igz\n\ntitle\nroot\n\ntitle Knoppix LiveCD\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nconfigfile /KNOPPIX/knoppix.lst\n\ntitle ^F Start installed Fedora 18 on USB drive (F)\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nkernel (hd0,1)/boot/vmlinuz-3.9.9-201.fc18.i686 root\u003dUUID\u003d5831c69e-e9fd-4f61-812a-ebb9207c1155 rd.md\u003d0 rd.lvm\u003d0 rd.dm\u003d0 rd.luks\u003d0 rhgb quiet vga\u003d791\ninitrd (hd0,1)/boot/initramfs-3.9.9-201.fc18.i686.img\n\ntitle Switch to GRUB2 core.img for booting Linux (Ubuntu, Fedora etc)\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nclear\necho Please wait, searching for GRUB2 core img...\nset IMGF\u003d0\nfind --set-root --ignore-floppies --ignore-cd /boot/grub2/i386-pc/core.img \u003e nul \u0026\u0026 set IMGF\u003d1 \u0026\u0026 kernel /boot/grub2/i386-pc/core.img \u0026\u0026 boot\nif \"%IMGF%\"\u003d\u003d\"0\" find --set-root --ignore-floppies --ignore-cd /boot/grub/i386-pc/core.img \u003e nul \u0026\u0026 set IMGF\u003d1 \u0026\u0026 kernel /boot/grub/i386-pc/core.img \u0026\u0026 boot\nif \"%IMGF%\"\u003d\u003d\"0\" clear \u0026\u0026 echo GRUB2 core img not found! Returning to main menu... \u0026\u0026 pause --wait\u003d5\nconfigfile\n\ntitle\nroot\n\ntitle Start an antivirus rescue disk\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nconfigfile /antivirus.lst\n\ntitle\nroot\n\ntitle ^B Find bootable Windows NT/2000/XP/Vista/7/8 partitions (B)\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\ncall /findbwin.g4b.gz\nconfigfile\n\ntitle\nroot\n\ntitle Windows XP SP3 x86 setup\nmap --unmap\u003d0:0xff\nmap --unhook \u0026\u0026 map --rehook\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nls /usbdrive.tag \u003e nul || find --set-root --devices\u003dhf /usbdrive.tag\nconfigfile /winxpsetup.lst\n\ntitle Windows 7 SP1 setup\nmap --unmap\u003d0:0xff\nmap --unhook \u0026\u0026 map --rehook\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nls /usbdrive.tag \u003e nul || find --set-root --devices\u003dhf /usbdrive.tag\nconfigfile /win7setup.lst\n\ntitle\nroot\n\ntitle ^S Shutdown (S)\nhalt\n\ntitle ^R Reboot (R)\nreboot\n```\n\n\u003cbr /\u003e\n\ninitialize.g4b:  \n\n```\n!BAT\ntimeout 30 \u0026\u0026 /hotkey \u003e nul\ncolor black/cyan yellow/cyan \u003e nul\nset PLOPDRV\u003dFalse \u0026\u0026 cat --hex --locate\u003d\"PoLPu@\" --number\u003d1 (md)0x3d0+0x130 \u003e nul \u0026\u0026 set PLOPDRV\u003dTrue\nset USB2DRV\u003dFalse\nset /a USBDRN\u003d*0x8351 \u0026 0xff \u003e nul\nif not \"%USBDRN%\"\u003d\u003d\"0\" set USB2DRV\u003dTrue\nset LDUSBDRV\u003dFalse\nset MAINRAN\u003d1 \u0026\u0026 graphicsmode -1 640:800 480:600 24:32 \u003e nul\n\ncat --length\u003d3 --skip\u003d0 --number\u003d1 /menucfg | set NTS\u003d\nset /a DefMenu\u003d10*%NTS:~0,1%+%NTS:~1,1% \u003e nul\nif not \"%NTS:~2,1%\"\u003d\u003d\"1\" goto :end\nset LDUSBDRV\u003dTrue\nif \"%USB2DRV%\"\u003d\u003d\"False\" usb --init\nset /a USBDRN\u003d*0x8351 \u0026 0xff \u003e nul\nif not \"%USBDRN%\"\u003d\u003d\"0\" set USB2DRV\u003dTrue\n:end\n```\n\n\u003cbr /\u003e\n\nusb2load.lst:  \n\n```\ntimeout 30\ndefault 2\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu% \u003e nul\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu% \u003e nul\n\ntitle ...Back to Main Menu\nwrite --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\nconfigfile /menu.lst\n\ntitle\nroot\n\niftitle [if \"%LDUSBDRV%\"\u003d\u003d\"False\"] Enable USB 2.0 internal driver automatic loading all sessions\nclear\nwrite --offset\u003d0 (bd)/menucfg %NTS%1 \u003e nul\nif \"%USB2DRV%\"\u003d\u003d\"True\" set LDUSBDRV\u003dTrue \u0026\u0026 echo -e USB 2.0 internal driver automatic loading enabled\nif \"%USB2DRV%\"\u003d\u003d\"False\" usb --init \u0026\u0026 set /a USBDRN\u003d*0x8351 \u0026 0xff \u003e nul ;; if \"%USB2DRV%\"\u003d\u003d\"False\" if not \"%USBDRN%\"\u003d\u003d\"0\" set USB2DRV\u003dTrue \u0026\u0026 set LDUSBDRV\u003dTrue \u0026\u0026 echo -e \\r\\nUSB 2.0 internal driver automatic loading enabled\necho -e Returning to main menu...\npause --wait\u003d5\nconfigfile /menu.lst\n\niftitle [if \"%LDUSBDRV%\"\u003d\u003d\"True\"] Disable USB 2.0 internal driver automatic loading all sessions\nclear\nwrite --offset\u003d0 (bd)/menucfg %NTS%0 \u003e nul\nset LDUSBDRV\u003dFalse \u003e nul \u0026\u0026 echo -e USB 2.0 internal driver automatic loading disabled\\r\\nReturning to main menu...\npause --wait\u003d5\nconfigfile /menu.lst\n\niftitle [if \"%USB2DRV%\"\u003d\u003d\"False\"] Just enable USB 2.0 internal driver this session\nclear\nusb --init\nset /a USBDRN\u003d*0x8351 \u0026 0xff \u003e nul\nif not \"%USBDRN%\"\u003d\u003d\"0\" set USB2DRV\u003dTrue\necho -e \\r\\nReturning to main menu...\npause --wait\u003d5\nconfigfile /menu.lst\n```\n\n\u003cbr /\u003e\n\nBtw, here I used the slow iftitle\u0027s because I rarely use this menu (it\u0027s loading the USB driver automatically).  \n\nThe rest of the files: [![Attached File](http://reboot.pro/public/style_extra/mime_types/zip.gif)](http://reboot.pro/index.php?s\u003d422135f0d73c821f407cd9334c8f0113\u0026app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d15172 \"Download attachment\") [**Files.7z**](http://reboot.pro/index.php?s\u003d422135f0d73c821f407cd9334c8f0113\u0026app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d15172 \"Download attachment\") **7.59KB** 402 downloads  \n\n1. As you can see, in menu.lst I\u0027m not using the savedefault function anymore. I made some custom code:  \n\n```\nset /a DefMenu\u003d*0x8276\u00260xff \u003e nul\nset /a NTS\u003d%DefMenu%/10 \u003e nul\nif not \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d%DefMenu%\nif \"%NTS%\"\u003d\u003d\"0\" set NTS\u003d0%DefMenu%\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d0 (bd)/menucfg %NTS% \u003e nul\n```\n\n\u003cbr /\u003e\n\nIn the same file (menucdfg) I save 0/1 in the third position to enable/disable the automatic loading of the USB 2.0 internal driver.  \n\nIf DefMenu is in 0..9, a \u00270\u0027 is added in front so it would always be saved as 2 chars.  \nQuestion: is there a simpler way to do this?  \n\n2. The USB 2.0 internal driver detection code:  \n\n```\nset USB2DRV\u003dFalse\nset /a USBDRN\u003d*0x8351 \u0026 0xff \u003e nul\nif not \"%USBDRN%\"\u003d\u003d\"0\" set USB2DRV\u003dTrue\n```\n\n\u003cbr /\u003e\n\nSeems to work fine.  \nBut there is a problem: if Grub4DOS is reloaded without restarting the computer, the USB 2.0 driver is still active but this code sets USB2DRV to False.  \nIs there a way to modify the code to work fine in this situation too?  \n\n3. The code for loading configuration from menucfg:  \n\n```\nset LDUSBDRV\u003dFalse\ncat --length\u003d3 --skip\u003d0 --number\u003d1 /menucfg | set NTS\u003d\nset /a DefMenu\u003d10*%NTS:~0,1%+%NTS:~1,1% \u003e nul\nif not \"%NTS:~2,1%\"\u003d\u003d\"1\" goto :end\nset LDUSBDRV\u003dTrue\nif \"%USB2DRV%\"\u003d\u003d\"False\" usb --init\nset /a USBDRN\u003d*0x8351 \u0026 0xff \u003e nul\nif not \"%USBDRN%\"\u003d\u003d\"0\" set USB2DRV\u003dTrue\n:end\n```\n\n\u003cbr /\u003e\n\nNotice the use of \"cat\" command to read from file into the variable. But this command is slow (about 1 sec on my computer). dd command is a lot faster but when I tried to read from the memory location into the variable it didn\u0027t do anything.  \nIs there a way to use only dd without cat?  \n\nThank you.  \n\nRegards,  \nDavid   \n"
    },
    {
      "id": "188960",
      "timestamp": "2014-12-01T11:09:46+00:00",
      "author": "steve6375",
      "content": "is this any good?\n\n```\nset /a NTS\u003d*0x8276\u00260xff \u003e nul ;; if %NTS%\u003c\u003d9 set NTS\u003d0%NTS%\n```\n\nAlso not sure if it is any faster but you could save NTS as a batch file\n\n```\necho -e !BAT\\nset NTS\u003d%NTS% \u003e (bd)/menu.cfg\n```\n\nand then retrieve the value using\n\n```\ncall (bd)/menu.cfg\n```\n\nYou could add on the USBdrive value or any other parameter too\n\n```\necho -e !BAT\\nset NTS\u003d%NTS%\\nset USBD\u003d%USBD% \u003e (bd)/menu.cfg\n```\n\n\u003cbr /\u003e\n\n"
    },
    {
      "id": "188966",
      "timestamp": "2014-12-01T12:21:26+00:00",
      "author": "DavidB",
      "content": "Thank you.\n\n\u003e is this any good?\n\u003e\n\u003e set /a NTS\u003d\\*0x8276\\\u00260xff \\\u003e nul ;; if %NTS%\\\u003c\u003d9 set NTS\u003d0%NTS%\n\nYes, it is :smile:\n\nBut I have to assign the value also to DefMenu (used when menu.lst is reloaded).\n\nBut I just got an idea and tested something: \"default 07\", \"default 007\" and so on work the same way as \"default 7\" (good job, chenall :smile: )\n\nSo I can use DefMenu variable directly.\n\nBtw, in Grub4DOS 0.46a is there any internal variable or command to get the number of the menu entry you\u0027re in (not the selected 0x8276)? Because when you use a key combination created with hotkey the menu entry is started but not selected.\n\nIn the current implementation you could save some undesirable menu entries like Shutdown or Reboot ![:rolleyes:](http://reboot.pro/public/style_emoticons/default/rolleyes.gif)\n\n\u003e Also not sure if it is any faster but you could save NTS as a batch file\n\u003e\n\u003e \u003cbr /\u003e\n\u003e\n\u003e echo -e !BAT\\\\nset NTS\u003d%NTS% \\\u003e (bd)/menu.cfg\n\u003e\n\u003e and then retrieve the value using\n\u003e\n\u003e \u003cbr /\u003e\n\u003e\n\u003e call (bd)/menu.cfg\n\u003e\n\u003e You could add on the USBdrive value or any other parameter too\n\u003e\n\u003e \u003cbr /\u003e\n\u003e\n\u003e echo -e !BAT\\\\nset NTS\u003d%NTS%\\\\nset USBD\u003d%USBD% \\\u003e (bd)/menu.cfg\n\nIn theory it should not be faster. But, in the few years I\u0027m using Grub4DOS, I learned I should test instead of trusting only the theory ![:rolleyes:](http://reboot.pro/public/style_emoticons/default/rolleyes.gif) ![:hammer:](http://reboot.pro/public/style_emoticons/default/hammer.gif)\n\n"
    },
    {
      "id": "188972",
      "timestamp": "2014-12-01T14:44:51+00:00",
      "author": "DavidB",
      "content": "I tested and it\u0027s about the same time.\n\nBut I noticed something else: if I test with a 40 bytes bat file or with a 1000 Bytes it\u0027s no difference. It means the problem is not in the reading speed of the file, even with 800 KB/s in USB 1.1 it should be a lot faster.  \nI think most of the time is spent waiting for informations about the file location or searching for the location of the file on disk.  \nI wonder where the problem could be: in the USB drive controller, the computer BIOS or in Grub4DOS...\n\n"
    },
    {
      "id": "188973",
      "timestamp": "2014-12-01T15:07:06+00:00",
      "author": "steve6375",
      "content": "yes, the test I included in E2B - Utilities menu, measures the time for 100 loops of just using the ls command on a file.\n\nThe time this takes to execute varies considerable with different systems.\n\nI also noticed that running it on an NTFS system took twice as long as when run on a FAT32 system.\n\nIt should be a LOT faster with the grub4dos USB driver.\n\nI think that maybe the BIOS code uses polling rather than interrupts - some seem to be incredibly slow.\n\n"
    },
    {
      "id": "188976",
      "timestamp": "2014-12-01T16:22:07+00:00",
      "author": "DavidB",
      "content": "Yes, the BIOS seems to be the most probable cause.  \n\nI\u0027m thinking of loading the menu.lst into RAM using the preset-menu and starting it from there.  \nI noticed that it doesn\u0027t cache the menu.lst, it reads it directly from the drive when you start a menu entry.  \nFrom RAM it should be processed faster. For example it could be loaded at (md)0x19000 and started with \"configfile (md)0x19000\".\n\n"
    },
    {
      "id": "188988",
      "timestamp": "2014-12-02T08:49:02+00:00",
      "author": "DavidB",
      "content": "I loaded and started menu.lst into/from RAM + more.  \nNow it\u0027s loading faster :smile:  \n\npreset-menu.lst from grldr:  \n\n```\n\ncat --length\u003d8192 /mainmenu \u003e (md)0x19000+16\nconfigfile (md)0x19000+16\n```\n\nNow I\u0027m not using any \\*default file + I\u0027m not using menucfg also. All settings are saved and loaded directly into menu.lst file (now renamed \"mainmenu\").  \n\nmainmenu:  \n\n```\n\n;02103050502\nif not \"%MAINRAN%\"\u003d\u003d\"1\" call /initialize.g4b\ndefault %MNDEFMNU%\n\ntitle ^U USB 2.0 internal driver (U)\nset MNDEFMNU\u003d00\nconfigfile /usb2load.lst\n\ntitle\nroot\n\ntitle Ultimate BootCD 5.33\nset MNDEFMNU\u003d02\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nconfigfile /ubcd/menus/grub4dos/main.lst\n\ntitle Memtest 5.01\nset MNDEFMNU\u003d03\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nmap /iso/memtest.img (fd0)||map --mem /iso/memtest.img (fd0)\nmap --hook\nchainloader (fd0)+1\nrootnoverify (fd0)\nmap --floppies\u003d1\n\ntitle Paragon Backup \u0026 Recovery CD\nset MNDEFMNU\u003d04\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nmap /iso/Paragon_BootCD.iso (0xFF)||map --mem /iso/Paragon_BootCD.iso (0xFF)\nmap --hook\nroot (0xFF)\nchainloader (0xFF)\n\ntitle ^P Paragon Backup \u0026 Recovery CD 2nd way (P)\nset MNDEFMNU\u003d05\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nmap /iso/Paragon_BootCD.iso (0xFF)||map --mem /iso/Paragon_BootCD.iso (0xFF)\nmap --hook\nroot (0xff)\nkernel /VMLINUZP vga\u003d0x314\ninitrd /INITRD.GZ\n\ntitle ^M MiniTool Partition Wizard (M)\nset MNDEFMNU\u003d06\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nmap /iso/MiniTool_Partition_Wizard.iso (0xFF)||map --mem /iso/MiniTool_Partition_Wizard.iso (0xFF)\nmap --hook\nroot (0xFF)\nchainloader (0xFF)\n\ntitle gparted 0.20.0 live\nset MNDEFMNU\u003d07\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nmap /iso/gparted-live-0.20.0-2-i486.iso (0xff) || map --mem /iso/gparted-live-0.20.0-2-i486.iso (0xff)\nmap --hook\nroot (0xff)\nkernel /live/vmlinuz boot\u003dlive config union\u003daufs noswap noprompt vga\u003d788 ip\u003dfrommedia findiso\u003d/iso/gparted-live-0.20.0-2-i486.iso toram\u003dfilesystem.squashfs\ninitrd /live/initrd.img\n\ntitle Parted Magic\nset MNDEFMNU\u003d08\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nmap /iso/pmagic_2014_09_29.iso (0xff) || map --mem /iso/pmagic_2014_09_29.iso (0xff)\nmap --hook\nroot (0xff)\nkernel /pmagic/bzImage edd\u003doff load_ramdisk\u003d1 prompt_ramdisk\u003d0 rw vga\u003dnormal sleep\u003d10 loglevel\u003d0 max_loop\u003d256 vmalloc\u003d384MiB keymap\u003dus iso_filename\u003d/iso/pmagic_2014_09_29.iso\ninitrd /pmagic/initrd.img\n\ntitle PartitionGuru 462 FreeDOS\nset MNDEFMNU\u003d09\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nmap --mem /iso/PartitionGuru462FreeDOS.img.gz (fd0)\nmap --hook\nroot (fd0)\nchainloader /kernel.sys\n\ntitle SystemRescueCd\nset MNDEFMNU\u003d10\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nkernel /sysrcd/rescue32 subdir\u003dsysrcd setkmap\u003dus\ninitrd /sysrcd/initram.igz\n\ntitle\nroot\n\ntitle Knoppix LiveCD\nset MNDEFMNU\u003d12\nconfigfile /KNOPPIX/knoppix.lst\n\ntitle ^F Start installed Fedora 18 on USB drive (F)\nset MNDEFMNU\u003d13\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nkernel (hd0,1)/boot/vmlinuz-3.9.9-201.fc18.i686 root\u003dUUID\u003d5831c69e-e9fd-4f61-812a-ebb9207c1155 rd.md\u003d0 rd.lvm\u003d0 rd.dm\u003d0 rd.luks\u003d0 rhgb quiet vga\u003d791\ninitrd (hd0,1)/boot/initramfs-3.9.9-201.fc18.i686.img\n\ntitle Switch to GRUB2 core.img for booting Linux (Ubuntu, Fedora etc)\nset MNDEFMNU\u003d14\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nclear\necho Please wait, searching for GRUB2 core img...\nset IMGF\u003d0\nfind --set-root --ignore-floppies --ignore-cd /boot/grub2/i386-pc/core.img \u003e nul \u0026\u0026 set IMGF\u003d1 \u0026\u0026 kernel /boot/grub2/i386-pc/core.img \u0026\u0026 boot\nif \"%IMGF%\"\u003d\u003d\"0\" find --set-root --ignore-floppies --ignore-cd /boot/grub/i386-pc/core.img \u003e nul \u0026\u0026 set IMGF\u003d1 \u0026\u0026 kernel /boot/grub/i386-pc/core.img \u0026\u0026 boot\nif \"%IMGF%\"\u003d\u003d\"0\" clear \u0026\u0026 echo GRUB2 core img not found! Returning to main menu... \u0026\u0026 pause --wait\u003d5\nconfigfile %MAINMENU%\n\ntitle\nroot\n\ntitle Start an antivirus rescue disk\nset MNDEFMNU\u003d16\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nconfigfile /antivirus.lst\n\ntitle\nroot\n\ntitle ^B Find bootable Windows NT/2000/XP/Vista/7/8 partitions (B)\nset MNDEFMNU\u003d18\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\ncall /findbwin.g4b\nconfigfile %MAINMENU%\n\ntitle\nroot\n\ntitle Windows XP SP3 x86 setup\nmap --unmap\u003d0:0xff\nmap --unhook \u0026\u0026 map --rehook\nset MNDEFMNU\u003d20\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nls /usbdrive.tag \u003e nul || find --set-root --devices\u003dhf /usbdrive.tag\nconfigfile /winxpsetup.lst\n\ntitle Windows 7 SP1 setup\nmap --unmap\u003d0:0xff\nmap --unhook \u0026\u0026 map --rehook\nset MNDEFMNU\u003d21\nif \"%PLOPDRV%\"\u003d\u003d\"False\" write --offset\u003d1 (bd)/mainmenu %MNDEFMNU% \u003e nul\nls /usbdrive.tag \u003e nul || find --set-root --devices\u003dhf /usbdrive.tag\nconfigfile /win7setup.lst\n\ntitle\nroot\n\ntitle ^S Shutdown (S)\nhalt\n\ntitle ^R Reboot (R)\nreboot\n```\n\nAs you can see in the beginning of the file there is \";02103050502\". 02 \u003d position in main menu, 1 \u003d load USB internal driver, 03/05/05/02 \u003d positions in other menu files.  \n\ninitialize.g4b:  \n\n```\n\n!BAT\ntimeout 30 \u0026\u0026 /hotkey \u003e nul\ncolor black/cyan yellow/cyan \u003e nul\nset MAINMENU\u003d(md)0x19000+16\nset PLOPDRV\u003dFalse \u0026\u0026 cat --hex --locate\u003d\"PoLPu@\" --number\u003d1 (md)0x3d0+0x130 \u003e nul \u0026\u0026 set PLOPDRV\u003dTrue\nset USB2DRV\u003dFalse\nset /a USBDRN\u003d*0x8351 \u0026 0xff \u003e nul\nif not \"%USBDRN%\"\u003d\u003d\"0\" set USB2DRV\u003dTrue\nset LDUSBDRV\u003d0\nset MAINRAN\u003d1 \u0026\u0026 graphicsmode -1 640:800 480:600 24:32 \u003e nul\n\ncat --length\u003d11 --skip\u003d1 --number\u003d1 %MAINMENU% | set NTS\u003d\nset MNDEFMNU\u003d%NTS:~0,2%\nset LDUSBDRV\u003d%NTS:~2,1%\nset KNDEFMNU\u003d%NTS:~3,2%\nset AVDEFMNU\u003d%NTS:~5,2%\nset XPDEFMNU\u003d%NTS:~7,2%\nset W7DEFMNU\u003d%NTS:~9,2%\nif not \"%LDUSBDRV%\"\u003d\u003d\"1\" goto :end\nif \"%USB2DRV%\"\u003d\u003d\"False\" usb --init\nset /a USBDRN\u003d*0x8351\u00260xff \u003e nul\nif not \"%USBDRN%\"\u003d\u003d\"0\" set USB2DRV\u003dTrue\n:end\n```\n\nThe rest of the files: [![Attached File](http://reboot.pro/public/style_extra/mime_types/zip.gif)](http://reboot.pro/index.php?s\u003d422135f0d73c821f407cd9334c8f0113\u0026app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d15177 \"Download attachment\") [**files.7z**](http://reboot.pro/index.php?s\u003d422135f0d73c821f407cd9334c8f0113\u0026app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d15177 \"Download attachment\") **151.8KB** 391 downloads  \n\nQuestions:  \n\n1. Is there a simpler and/or faster way to get those 6 variables from (md)190000+16 (instead of \"cat --length\u003d11 --skip\u003d1 --number\u003d1 %MAINMENU% \\| set NTS\u003d\")?  \n2. I used a batch file for initialization (initialize.g4b) because the code was simpler and better (in lst I had to use a lot of if\u0027s + goto\u0027s don\u0027t work).  \nIs there a way to get the code back into the menu.lst (mainmenu file) but without losing the simplicity or functionality...?\n\n"
    },
    {
      "id": "188992",
      "timestamp": "2014-12-02T13:14:35+00:00",
      "author": "DavidB",
      "content": "Just noticed something: the modifications made to memory seems to be local on each menu entry.  \nFor example, if I use this code in a menu entry:  \ncat --length\u003d2048 /usb2load.lst \\\u003e (md)0x19010+4  \nconfigfile (md)0x19010+4  \nThe menu is loaded but when I load again the main menu and try again \"configfile (md)0x19010+4\", it\u0027s not loading. I looked at the memory location, only 0\u0027s.  \nHowever, if I use \"cat --length\u003d2048 /usb2load.lst \\\u003e (md)0x19010+4\" into the code before menu entries, it works.  \n\nIs there a way, beside using \"cat --length\u003d2048 /usb2load.lst \\\u003e (md)0x19010+4\" into the code before menu entries, to make the changes to memory permanent?\n\n"
    },
    {
      "id": "188993",
      "timestamp": "2014-12-02T13:26:26+00:00",
      "author": "steve6375",
      "content": "Your mainmenu is loaded into (md)19000+16\n\nYou other menu is at 19010+4\n\nSo if you main menu is larger than 0x10\\*512bytes \u003d 8K then it will overwrite (md)0x19010.\n\nCould this be something to do with it?\n\n"
    },
    {
      "id": "188994",
      "timestamp": "2014-12-02T13:30:38+00:00",
      "author": "DavidB",
      "content": "No, because the main menu is actually smaller than 10 (x512).\n\nBut I tried with 19050 in the menu entry, even with 20000, same problem.\n\n"
    },
    {
      "id": "188995",
      "timestamp": "2014-12-02T13:38:49+00:00",
      "author": "steve6375",
      "content": "cat --length\u003d1 /mainmenu \\\u003e (md)0x1900+20 will zero all 20 sectors.\n\nbut using 19000 and 20000 should work???\n\n"
    },
    {
      "id": "188996",
      "timestamp": "2014-12-02T13:43:41+00:00",
      "author": "DavidB",
      "content": "\u003e cat --length\u003d1 /mainmenu \\\u003e (md)0x1900+20 will zero all 20 sectors.\n\nYes, but I\u0027m not using this command when I load again the main menu. I just use \"configfile (md)0x19000+16\". So the sectors will not be zeroed.\n\n\u003e but using 19000 and 20000 should work???\n\nYes, it should, but it doesn\u0027t...\n\n"
    },
    {
      "id": "188998",
      "timestamp": "2014-12-02T14:03:37+00:00",
      "author": "steve6375",
      "content": "Can you provide simplified example?\n\nAre you using latest grub4dos 0.4.5c?\n\n"
    },
    {
      "id": "188999",
      "timestamp": "2014-12-02T14:15:07+00:00",
      "author": "DavidB",
      "content": "I\u0027m using 0.46a.\n\nI\u0027ll try to make a simplified example...\n\nLE:\n\nmenu.lst:\n\n```\n\nif not \"%MAINRAN%\"\u003d\u003d\"1\" set TESTMNU\u003dFalse \u0026\u0026 set MAINRAN\u003d1\n\ntitle Test menu\nif \"%TESTMNU%\"\u003d\u003d\"False\" cat --length\u003d2048 /testmenu.lst \u003e (md)0x19030+4 \u0026\u0026 set TESTMNU\u003dTrue\nconfigfile (md)0x19030+4\n\n```\n\ntestmenu.lst:\n\n```\n\n\n\ntitle ...Back to Main Menu\nconfigfile /menu.lst\n\ntitle\nroot\n\n\n```\n\nBtw, it does the same with 0.45c.\n\n"
    },
    {
      "id": "189000",
      "timestamp": "2014-12-02T14:48:01+00:00",
      "author": "steve6375",
      "content": "try\n\nif \"%TESTMNU%\"\u003d\u003d\"False\" \\\u0026\\\u0026 cat --length\u003d2048 /testmenu.lst \\\u003e (md)0x19030+4 \\\u0026\\\u0026 set TESTMNU\u003dTrue\n\n"
    },
    {
      "id": "189001",
      "timestamp": "2014-12-02T15:03:38+00:00",
      "author": "DavidB",
      "content": "It works now, but I don\u0027t know WHY it works... ![:frusty:](http://reboot.pro/public/style_emoticons/default/frusty.gif)\n\nThat \\\u0026\\\u0026 shouldn\u0027t be there... ![:confused1:](http://reboot.pro/public/style_emoticons/default/confused1.gif)\n\n"
    },
    {
      "id": "189002",
      "timestamp": "2014-12-02T15:27:53+00:00",
      "author": "steve6375",
      "content": "I think is a similar situation in a Windows shell\n\ne.g.\n\nset F\u003d0\n\nif \"%F%\"\u003d\u003d\"1\" echo fred \\\u003e x.txt\n\nthis either clears x.txt or puts fred in it\n\nThe redirection symbol is evaluated first and a pipe/handle opened even though the logic will never execute the preceding statement.\n\n"
    },
    {
      "id": "189003",
      "timestamp": "2014-12-02T15:50:06+00:00",
      "author": "DavidB",
      "content": "A sort of if/then/else ![:dubbio:](http://reboot.pro/public/style_emoticons/default/dubbio.gif)\n\n"
    },
    {
      "id": "189006",
      "timestamp": "2014-12-02T15:55:40+00:00",
      "author": "steve6375",
      "content": "I think it is a parsing thing\n\ne.g.\n\nif (something) then myfile.exe \\\u003e nul\n\nTo parse this the shell needs to know where to redirect any output from any command, so it looks for \\\u003e and \\\u003e\\\u003e (and probably \\| and \\\u0026 and ( ) first.\n\nOnce it knows where to redirect output to, it can start to execute the command(s).\n\nso\n\nif (1\u003d2) echo fred \\\u003e 1.txt\n\nwill always open a handle to 1.txt, if the line fails to execute, the handle will be closed and the file will be empty.\n\n"
    },
    {
      "id": "189007",
      "timestamp": "2014-12-02T16:04:53+00:00",
      "author": "DavidB",
      "content": "I understand.\n\nThank you for help :smile:\n\nWith this code the additional menus will be loaded faster like the main menu.\n\n"
    },
    {
      "id": "189009",
      "timestamp": "2014-12-02T17:04:34+00:00",
      "author": "Wonko the Sane",
      "content": "Just for the record.  \nTry (on NT system):  \nset F\u003d0  \nif \"%F%\"\u003d\u003d\"1\" echo fred \\\u003e x.txt  \nand:  \nset F\u003d0  \n\\\u003ex.txt if \"%F%\"\u003d\u003d\"1\" echo fred  \nthe latter is THE SAME, but written differently, sometimes it is more clear to use this latter syntax.  \nSee note (3) here:  \n[http://www.robvander...redirection.php](http://www.robvanderwoude.com/redirection.php \"External link\")  \nRedirection is a \"strange beast\" ![:w00t:](http://reboot.pro/public/style_emoticons/default/w00t.gif)  \n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)  \nWonko   \n"
    },
    {
      "id": "189011",
      "timestamp": "2014-12-02T18:20:57+00:00",
      "author": "DavidB",
      "content": "Thank you, Wonko.\n\n"
    },
    {
      "id": "189267",
      "timestamp": "2014-12-18T16:40:10+00:00",
      "author": "DavidB",
      "content": "As you know, when remapping the (bd) partition or the drive with the (bd) partition, (bd) will not point to the \"boot device\" anymore.  \n[http://code.google.c...es/detail?id\u003d30](http://code.google.com/p/grub4dos-chenall/issues/detail?id\u003d30 \"External link\")  \nThere is a way to find it: copy usbdrive.tag file in the root of (bd) and use \"ls /usbdrive.tag \\|\\| find --set-root --devices\u003dhf /usbdrive.tag\".  \nBut it\u0027s slow and it\u0027s not exactly what I need: an absolute path to any file/folder from (bd). For example, if I\u0027m on another partition and want to read/write from/in a file on (bd), with an absolute path I can do it without setting root to (bd).  \n\nIs there a better way...?\n\n"
    },
    {
      "id": "189268",
      "timestamp": "2014-12-18T18:12:18+00:00",
      "author": "steve6375",
      "content": "If the initial boot device is say (hd0,0) and then you map hd0 to hd1 and map hd1 to hd0 and then map --hook, (bd) will still be remembered as hd0,0 - so if you know that hd0 is now hd1, why not just access (hd1,0)/file.xxx instead of (bd).?\n\n"
    },
    {
      "id": "189269",
      "timestamp": "2014-12-18T18:30:55+00:00",
      "author": "DavidB",
      "content": "In a simple situation like you described, yes, it\u0027s logical to use (hd1,0) instead of (bd).  \nBut after using much complex code on an unknown computer configuration, it\u0027s not always easy to know which is the boot device.\n\n"
    },
    {
      "id": "189270",
      "timestamp": "2014-12-18T18:58:44+00:00",
      "author": "Wonko the Sane",
      "content": "OT (and I mean really OT ![:w00t:](http://reboot.pro/public/style_emoticons/default/w00t.gif) ![:ph34r:](http://reboot.pro/public/style_emoticons/default/scared9.gif) but as always not tha t much :wink:) it seems like some versions of grldr/grub4dos (possibly forked/modified) have an undocumented (AFAIK/AFAICU) switch:  \n[http://www.911cd.net...ndpost\\\u0026p\u003d175857](http://www.911cd.net/forums//index.php?s\u003d\u0026showtopic\u003d25787\u0026view\u003dfindpost\u0026p\u003d175857 \"External link\")\n\u003e hiddenmenu  \n\u003e\n\u003e title EaseUS Todo Backup Linux  \n\u003e find --ignore-cd --ignore-floppies --set-root **--boot-magic\u003d5B6AC646000000000000003F** /BOOT/EASEUSBT.IDX  \n\u003e kernel /BOOT/EASLINUX.KNL root\u003d/dev/ram0 rw vga\u003d788  \n\u003e initrd /BOOT/EASLINUX.IRD\n\u003e\nwhere the **5B6AC646** is the Disk Signature (reversed form what is actually written in the MBR, verified) and the **000000000000003F** is (seemingly) the offset of the volume.\n\nAnyone knows anything about it?\n\nDoes it exist within \"normal\" gruub4dos?\n\nAnyone game for testing it?\n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "189271",
      "timestamp": "2014-12-18T19:42:26+00:00",
      "author": "steve6375",
      "content": "**root** command executed as soon as you boot will tell you the boot device (assuming a normal embedded menu config file is used)\n\nThough from my notes from [here](https://sites.google.com/a/rmprepusb.com/www/tutorials/grub4dos \"External link\")\n\n```\nWhatever device the /menu.lst file was found on, will be set to be the \u0027root\u0027 device and partition. So ls /  or  ls (bd)/  will always list the files on the root of the partition that contained the menu.lst that was found and loaded by grub4dos.\n```\n\nThere are some variables [here](http://www.rmprepusb.com/tutorials/grub4dos/grub4dos-internal-variables-and-functions \"External link\") which you can get the boot drive (e.g 80h) from e.g.\n\n```\nset /A BD\u003d*0x8280\u00260xff\nset /A CP\u003d*0x829E\u00260xff\n```\n\nif the boot partition was hd0,2 then BD\u003d0x80 and CP\u003d2\n\nCP will be the current partition though and will change if you change the root.\n\nDoes that help?\n\n"
    },
    {
      "id": "189272",
      "timestamp": "2014-12-18T19:47:37+00:00",
      "author": "DavidB",
      "content": "\u003e OT (and I mean really OT ![:w00t:](http://reboot.pro/public/style_emoticons/default/w00t.gif) ![:ph34r:](http://reboot.pro/public/style_emoticons/default/scared9.gif) but as always not tha t much :wink:) it seems like some versions of grldr/grub4dos (possibly forked/modified) have an undocumented (AFAIK/AFAICU) switch:  \n\u003e [http://www.911cd.net...ndpost\\\u0026p\u003d175857](http://www.911cd.net/forums//index.php?s\u003d\u0026showtopic\u003d25787\u0026view\u003dfindpost\u0026p\u003d175857 \"External link\")\n\u003e\n\u003e where the **5B6AC646** is the Disk Signature (reversed form what is actually written in the MBR, verified) and the **000000000000003F** is (seemingly) the offset of the volume.\n\u003e\n\u003e Anyone knows anything about it?\n\u003e\n\u003e Does it exist within \"normal\" gruub4dos?\n\u003e\n\u003e Anyone game for testing it?\n\u003e\n\u003e ![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)\n\u003e\n\u003e Wonko\n\nThat\u0027s an interesting switch, I remember seeing it some time ago. At that time I didn\u0027t know what it does...\n\nUnfortunately it doesn\u0027t seem to exist in the latest 0.45c/0.46a builds. I searched directly into grub4dos sources: found, for example, \"--set-root\" but not \"--boot-magic\".\n\n"
    },
    {
      "id": "189276",
      "timestamp": "2014-12-18T20:24:10+00:00",
      "author": "DavidB",
      "content": "\u003e **root** command executed as soon as you boot will tell you the boot device (assuming a normal embedded menu config file is used)\n\u003e\n\u003e Though from my notes from [here](https://sites.google.com/a/rmprepusb.com/www/tutorials/grub4dos \"External link\")\n\u003e\n\u003e ```\n\u003e\n\u003e\n\u003e\n\u003e\n\u003e\n\u003e Whatever device the /menu.lst file was found on, will be set to be the \u0027root\u0027 device and partition. So ls /  or  ls (bd)/  will always list the files on the root of the partition that contained the menu.lst that was found and loaded by grub4dos.\n\u003e ```\n\u003e\n\u003e There are some variables [here](http://www.rmprepusb.com/tutorials/grub4dos/grub4dos-internal-variables-and-functions \"External link\") which you can get the boot drive (e.g 80h) from e.g.\n\u003e\n\u003e ```\n\u003e\n\u003e\n\u003e\n\u003e\n\u003e\n\u003e set /A BD\u003d*0x8280\u00260xff\n\u003e set /A CP\u003d*0x829E\u00260xff\n\u003e ```\n\u003e\n\u003e if the boot partition was hd0,2 then BD\u003d0x80 and CP\u003d2\n\u003e\n\u003e CP will be the current partition though and will change if you change the root.\n\u003e\n\u003e Does that help?\n\nYes, it helps a little, thank you.\n\nI started to use BD variable in my boot scripts. It\u0027s initialized with \"(bd)\" and it changes every time I use \"map\" command.\n\nSo when I try to read/write I use %BD%/file.\n\nBut that doesn\u0027t always work, for example when the user chooses \"...Back to main menu (Grub4Dos)\", previously started from the Windows 7 setup menu items (created by WinSetupFromUSB):\n\n[![USB Boot test.png](http://reboot.pro/uploads/monthly_12_2014/post-61891-0-02944300-1418933888_thumb.png)](http://reboot.pro/uploads/monthly_12_2014/post-61891-0-02944300-1418933888.png \"USB Boot test.png - Size: 9.15KB\"){#ipb-attach-url-15200-0-34380400-1676066494}\n\nAfter this (bd) can\u0027t be accessed and \"set BD\u003d(hdn,0)\" (n\u003d0..4) isn\u0027t remembered.\n\n"
    },
    {
      "id": "189277",
      "timestamp": "2014-12-18T20:26:34+00:00",
      "author": "steve6375",
      "content": "What if you do a\n\n```\nmap --status\n```\n\nare some drives mapped?\n\nWhy not unmap and unhook all drives first?\n\n"
    },
    {
      "id": "189279",
      "timestamp": "2014-12-18T20:47:35+00:00",
      "author": "DavidB",
      "content": "\u003e What if you do a\n\u003e\n\u003e ```\n\u003e\n\u003e map --status\n\u003e ```\n\u003e\n\u003e are some drives mapped?\n\u003e\n\u003e Why not unmap and unhook all drives first?\n\nYes, 0 in 1 and 1 in 0.\n\nYou mean to do this after the user starts that menu item but before reloading the main menu?\n\n"
    },
    {
      "id": "189281",
      "timestamp": "2014-12-18T20:49:55+00:00",
      "author": "steve6375",
      "content": "You can add it to the start of any menu\n\n```\nmap --unhook\nmap --unmap\u003d0x80:0xff\n```\n\nwould unmap all hard disks and CDs\n\n"
    },
    {
      "id": "189282",
      "timestamp": "2014-12-18T20:54:28+00:00",
      "author": "steve6375",
      "content": "P.S. You may need to do a root (bd) and unmapping can take some time (not sure why, can be 5-10 seconds in some cases)\n\n"
    },
    {
      "id": "189285",
      "timestamp": "2014-12-19T05:15:40+00:00",
      "author": "DavidB",
      "content": "Yes, seems wise to add these at the start of each menu entry.  \nBut there are 3 problems:\n\n1. In some computer configurations the bd could be not 0x80;  \n2. Low speed;  \n3. It will still require a line like \"find --set-root --devices\u003dhf /usbdrive.tag \\| set BD\u003d\" which will slow it even more.  \nOn the other hand I noticed \"map --status\" is very fast so it can be used to find if unmapping/unhooking is necessary. But it\u0027s not easy to make a simple, fast and stable code for interpreting the output result of \"map --status\".\n\nLater edit\n\nMy first attempt:\n\n```\n!BAT\n\nsetlocal\nmap --status \u003e (md)0x19100+16\ncat --number\u003d1 --locate\u003d\"currently empty.\" (md)0x19100+16 | set EMPTY\u003d\nif exist EMPTY goto :notfound\ncat --number\u003d1 --locate\u003d\"---\\n\" (md)0x19100+16 | set POSB\u003d\nif \"%POSB%\"\u003d\u003d\"\" goto :notfound\nset /a SKIPPED\u003d0x%POSB%+4 \u003e nul\ncat --length\u003d2 --skip\u003d%SKIPPED% (md)0x19100+16 | set FNDMAPS\u003d\nset FNDMAPS\u003d0x%FNDMAPS%\nset /a SKIPPED\u003d0x%POSB%+6 \u003e nul\n:loop\ncat --skip\u003d%SKIPPED% --number\u003d1 --locate\u003d\"\\n\" (md)0x19100+16 | set POSB\u003d\nif \"%POSB%\"\u003d\u003d\"\" goto :end\nset /a SKIPPED\u003d0x%POSB%+1 \u003e nul\ncat --length\u003d2 --skip\u003d%SKIPPED% (md)0x19100+16 | set NEXTMAP\u003d\nif \"%NEXTMAP%\"\u003d\u003d\"\" goto :end\nset FNDMAPS\u003d0x%NEXTMAP%:%FNDMAPS%\nset /a SKIPPED\u003d0x%POSB%+3 \u003e nul\ngoto :loop\n:end\nmap --unmap\u003d%FNDMAPS%\nmap --unhook \u0026\u0026 map --rehook\n:notfound\nendlocal\n\n```\n\n\u003cbr /\u003e\n\n"
    },
    {
      "id": "189290",
      "timestamp": "2014-12-19T09:20:57+00:00",
      "author": "steve6375",
      "content": "\u003e 1. In some computer configurations the bd could be not 0x80;\n\n?? the (bd) device can be obtained by reading the memory variable I already gave you\n\n\u003e set BD\u003d(hdn,0)\" (n\u003d0..4) isn\u0027t remembered.\"\n\u003e\nIf variables are not remembered when returning to another menu then something in the code is causing it to lose the variable.\n\n.\n\nsetlocal may be used or maybe set \\* ??\n\ne.g.\n\n```\nsetlocal\nset BD\u003d(hd0,3)\n(do stuff \u003dhere)\nendlocal\nconfigfile /menu.lst\n```\n\nwould lose the setting or if the menu.lst contains\n\n```\nset *\n```\n\nthen all variables would be lost.\n\nYou can preserve specific variables and lose all others using\n\n```\nset * \u0026\u0026 set BD\u003d%BD% \u0026\u0026 set CP\u003d%CP%\n```\n\nor (\\[Edit - typo fixed - should be endlocal not setlocal!)\n\n```\nendlocal \u0026\u0026 set BD\u003d%BD% \u0026\u0026 set CP\u003d%CP%\n```\n\nAlso beware that you only have about 60 variables to play with, so make sure you clean up any junk/temporary variables that you use when you have finished with them!\n\n**Edited by steve6375, 19 December 2014 - 11:47 AM.**\n"
    },
    {
      "id": "189292",
      "timestamp": "2014-12-19T11:33:35+00:00",
      "author": "Wonko the Sane",
      "content": "Still OT ![:w00t:](http://reboot.pro/public/style_emoticons/default/w00t.gif) ![:ph34r:](http://reboot.pro/public/style_emoticons/default/scared9.gif), and still on the *same* OT :wink::\n\n```\n\nset myds\u003d16 B4 ED 3D\ncat --hex --skip\u003d440 --length\u003d4 (hd0)+1 | set ds\u003d\nif \"%myds%\"\u003d\u003d\"%ds:~10,11%\" echo Disk (hd0) is the one\n```\n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "189295",
      "timestamp": "2014-12-19T12:27:35+00:00",
      "author": "DavidB",
      "content": "A little improvement:\n\n```\n\n!BAT\n\nsetlocal\nmap --status \u003e (md)0x19100+16\ncat --number\u003d1 --locate\u003d\"currently empty.\" (md)0x19100+16 | set EMPTY\u003d\nif exist EMPTY goto :notfound\ncat --number\u003d1 --locate\u003d\"---\\n\" (md)0x19100+16 | set POSB\u003d\nif \"%POSB%\"\u003d\u003d\"\" goto :notfound\nset /a SKIPPED\u003d0x%POSB%+4 \u003e nul\ncat --length\u003d2 --skip\u003d%SKIPPED% (md)0x19100+16 | set FNDMAPS\u003d\nset FNDMAPS\u003d0x%FNDMAPS%\nset /a SKIPPED\u003d0x%POSB%+6 \u003e nul\n:loop\ncat --skip\u003d%SKIPPED% --number\u003d1 --locate\u003d\"\\n\" (md)0x19100+16 | set POSB\u003d\nif \"%POSB%\"\u003d\u003d\"\" goto :end\nset /a SKIPPED\u003d0x%POSB%+1 \u003e nul\ncat --length\u003d2 --skip\u003d%SKIPPED% (md)0x19100+16 | set NEXTMAP\u003d\nif \"%NEXTMAP%\"\u003d\u003d\"\" goto :end\nset FNDMAPS\u003d0x%NEXTMAP%:%FNDMAPS%\nset /a SKIPPED\u003d0x%POSB%+3 \u003e nul\ngoto :loop\n:end\nmap --unmap\u003d%FNDMAPS%\nmap --unhook \u0026\u0026 map --rehook\nfind --devices\u003dhf /usbdrive.tag | set BD\u003d\n:notfound\nendlocal \u0026\u0026 set BD\u003d%BD%\n\n```\n\n[![Attached File](http://reboot.pro/public/style_extra/mime_types/zip.gif)](http://reboot.pro/index.php?s\u003d44e245e66c08ecc3fc2a1939ff9a47b0\u0026app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d15201 \"Download attachment\") [**AllBootFiles.7z**](http://reboot.pro/index.php?s\u003d44e245e66c08ecc3fc2a1939ff9a47b0\u0026app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d15201 \"Download attachment\") **175.16KB** 350 downloads\n\n\u003e ?? the (bd) device can be obtained by reading the memory variable I already gave you\n\nOk, but how can I use it to get the same result as \"find --devices\u003dhf /usbdrive.tag \\| set BD\u003d\"? In any situation...\n\nI ask because the memory variable is returning a number but I need a string for the path...\n\nAnd I \"see\" too many if\u0027s....\n\nLe: maybe something like (0x80,0)? Usualy I use (hd0,0), that\u0027s why I didn\u0027t think at the other one...\n\n\u003e If variables are not remembered when returning to another menu then something in the code is causing it to lose the variable.\n\nThey are not remembered because grldr is loaded again, not because of setlocal/endlocal.\n\nAnd I know about \"endlocal \\\u0026\\\u0026 set BD\u003d%BD%\", I used it a year ago in my \"Find \\\u0026 Boot script\"...\n\nBut thank you.\n\n"
    },
    {
      "id": "189297",
      "timestamp": "2014-12-19T12:56:35+00:00",
      "author": "DavidB",
      "content": "I just tried with this code:\n\n```\n!BAT\n\nsetlocal\nmap --status \u003e (md)0x19100+16\ncat --number\u003d1 --locate\u003d\"currently empty.\" (md)0x19100+16 | set EMPTY\u003d\nif exist EMPTY goto :notfound\ncat --number\u003d1 --locate\u003d\"---\\n\" (md)0x19100+16 | set POSB\u003d\nif \"%POSB%\"\u003d\u003d\"\" goto :notfound\nset /a SKIPPED\u003d0x%POSB%+4 \u003e nul\ncat --length\u003d2 --skip\u003d%SKIPPED% (md)0x19100+16 | set FNDMAPS\u003d\nset FNDMAPS\u003d0x%FNDMAPS%\nset /a SKIPPED\u003d0x%POSB%+6 \u003e nul\n:loop\ncat --skip\u003d%SKIPPED% --number\u003d1 --locate\u003d\"\\n\" (md)0x19100+16 | set POSB\u003d\nif \"%POSB%\"\u003d\u003d\"\" goto :end\nset /a SKIPPED\u003d0x%POSB%+1 \u003e nul\ncat --length\u003d2 --skip\u003d%SKIPPED% (md)0x19100+16 | set NEXTMAP\u003d\nif \"%NEXTMAP%\"\u003d\u003d\"\" goto :end\nset FNDMAPS\u003d0x%NEXTMAP%:%FNDMAPS%\nset /a SKIPPED\u003d0x%POSB%+3 \u003e nul\ngoto :loop\n:end\nmap --unmap\u003d%FNDMAPS%\nmap --unhook \u0026\u0026 map --rehook\nset /A BD\u003d*0x8280\u00260xff \u003e nul\nset BD\u003d(%BD%,0)\n:notfound\nendlocal \u0026\u0026 set BD\u003d%BD%\n\n```\n\nIt\u0027s setting BD to (0x81,0) but it should set (0x80,0).\n\nBut with \"find\" works ok (although it\u0027s slow)...\n\n"
    },
    {
      "id": "189298",
      "timestamp": "2014-12-19T13:11:19+00:00",
      "author": "DavidB",
      "content": "Sorry about \"triple posting\"...\n\n\u003e Still OT ![:w00t:](http://reboot.pro/public/style_emoticons/default/w00t.gif) ![:ph34r:](http://reboot.pro/public/style_emoticons/default/scared9.gif), and still on the *same* OT :wink::\n\u003e\n\u003e ```\n\u003e\n\u003e\n\u003e\n\u003e set myds\u003d16 B4 ED 3D\n\u003e cat --hex --skip\u003d440 --length\u003d4 (hd0)+1 | set ds\u003d\n\u003e if \"%myds%\"\u003d\u003d\"%ds:~10,11%\" echo Disk (hd0) is the one\n\u003e ```\n\u003e\n\u003e ![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)\n\u003e\n\u003e Wonko\n\nThank you, Wonko.\n\nYes, it could work but the problem is it\u0027s not faster or more reliable than \"find --devices\u003dhf /usbdrive.tag \\| set BD\u003d\"....\n\n"
    },
    {
      "id": "189299",
      "timestamp": "2014-12-19T13:51:49+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e Thank you, Wonko.\n\u003e\n\u003e Yes, it could work but the problem is it\u0027s not faster or more reliable than \"find --devices\u003dhf /usbdrive.tag \\| set BD\u003d\"....\n\nSure, but the scope is/was slightly different, this one allows to establish root to (or however \\*locate\\* or \\*identify\\*) a disk device, no matter what the contents of the filesystem(s) - if any - are, on \\*any\\* volume in the device, for all that matters as long as a disk has been \"initialized\" on a NT based system, it is identifiable.\n\nIf you prefer, it avoids the adding of a \"usbdrive.tag\" (which may - as an example - be accidentally deleted).\n\nAnd - just for the record - the \"tag file\" should/could however (for advanced users) be replaced by **uuid**:\n\n[http://reboot.pro/to...d-in-this-code/](http://reboot.pro/topic/14640-how-to-use-uuid-in-this-code/ \"\")\n\nbut it provides (just like the tag file would) the volume.\n\nHey :smile:, otherwise it would not have been an OT. :wink:\n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "189300",
      "timestamp": "2014-12-19T14:01:21+00:00",
      "author": "steve6375",
      "content": "```\nIt\u0027s setting BD to (0x81,0) but it should set (0x80,0).\n```\n\nOdd?? What is \\*0x8280 on first boot (top of menu.lst)?\n\nYou say it chainloads grldr to reload the main menu and so forgets all variables - how does it know the path to grldr? How does it find it?\n\nWhy does it need to reload grldr which then runs the embedded menu.lst which does \u0027find\u0027s which then loads \\\\menu.lst - why not do your find xx.tag anyway in that case?\n\nWhy not copy the main menu into memory (md) and then reload the main menu from memory (after unmapping)?\n\nIf you ensure that the main menu starts with the unmap commands, then it should work faster than trying to find a tag file?\n\nI guess I don\u0027t understand enough about what your menu setup is really...\n\n"
    },
    {
      "id": "189302",
      "timestamp": "2014-12-19T14:22:25+00:00",
      "author": "DavidB",
      "content": "It shows 0x80, as it should be, the problems appear after starting a few menus.\n\nAs I said, it\u0027s from the Windows 7 setup created with WinSetupFromUSB.  \nFrom the \"mainmenu\" file choose \"Windows 7 SP1 setup (7)\". It will load win7setup.lst.  \nThen choose \"Windows 7 SP1 start setup\". It will shift the USB drive with the internal HDD and it will load /bootmgr.  \nFinally, choose \"Back to main menu (Grub4dos)\". It will (re)load grldr.  \n\n[![screenshot.png](http://reboot.pro/uploads/monthly_12_2014/post-61891-0-83147500-1418998929_thumb.png)](http://reboot.pro/uploads/monthly_12_2014/post-61891-0-83147500-1418998929.png \"screenshot.png - Size: 9.15KB\"){#ipb-attach-url-15202-0-34404600-1676066494}   \n\nAt this point both if you try to shift the USB drive and the internal HDD to their original values with the script, the (bd) and the memory variable will both show wrong path.\n\n"
    }
  ]
}