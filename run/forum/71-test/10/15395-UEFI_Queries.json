{
  "id": "15395",
  "title": "UEFI Queries",
  "isPinned": false,
  "isFirstTopic": false,
  "isLocked": false,
  "tags": [],
  "forumNotes": [
    {
      "id": "137255",
      "timestamp": "2011-09-08T14:01:32+00:00",
      "author": "shareknw",
      "content": "Hi,  \n\nI have a PC (Linux OS)that has an EFI BIOS. I have read through the UEFI specifications document but not able to find answers for the queries below. I wanted some clarity on the following questions:  \n\n1. Does UEFI support Interrupt handling (ISR implementation)? If yes, what is the procedure?  \n2. Do we need to write the Interrupt handler routine and register it in the EFI code? If it possible, do we have any utilities which help us to carry this out?  \n3. If the handler cannot be registered in the UEFI code, at what level do we write the ISR (platform specific firmware, or UEFI)?  \n4. Can we modify the CMOS register value? If yes how do we achieve this?  \n5. What are the utilities that are available to modify the UEFI Services (Boot services/ Run time/DXE service/ Image loading unloading etc...)? Or do we need to do this in the code?  \n\nAny help will be appreciated.  \nThanks !   \n"
    },
    {
      "id": "137277",
      "timestamp": "2011-09-08T21:04:01+00:00",
      "author": "Sha0",
      "content": "\u003e I have a PC (Linux OS)that has an EFI BIOS. I have read through the UEFI specifications document but not able to find answers for the queries below. I wanted some clarity on the following questions:  \n\u003e\n\u003e 1. Does UEFI support Interrupt handling (ISR implementation)? If yes, what is the procedure?  \n**Overview** -\\\u003e **Calling Conventions** -\\\u003e **IA-32 Platforms** (**2.3.2** ).  \n\n\u003e 2. Do we need to write the Interrupt handler routine and register it in the EFI code? If it possible, do we have any utilities which help us to carry this out?  \n**Protocols - PCI Bus Support** -\\\u003e **EFI PCI I/O Protocol** (**13.4** )  \n\n\u003e 3. If the handler cannot be registered in the UEFI code, at what level do we write the ISR (platform specific firmware, or UEFI)?  \nPoll.  \n\n\u003e 4. Can we modify the CMOS register value? If yes how do we achieve this?  \nWhat is \"the CMOS register value\"? Do you want to set the date \\\u0026 time?  \n\n\u003e 5. What are the utilities that are available to modify the UEFI Services (Boot services/ Run time/DXE service/ Image loading unloading etc...)? Or do we need to do this in the code?  \nI think that\u0027s too general a question. You could try the **UDK** out and observe its configuration utilities, for what they\u0027re worth.   \n"
    },
    {
      "id": "137297",
      "timestamp": "2011-09-09T05:32:32+00:00",
      "author": "shareknw",
      "content": "\u003e **Overview** -\\\u003e **Calling Conventions** -\\\u003e **IA-32 Platforms** (**2.3.2** ).  \n\u003e\n\u003e \u003cbr /\u003e\n\u003e\n\u003e **Protocols - PCI Bus Support** -\\\u003e **EFI PCI I/O Protocol** (**13.4** )  \n\u003e\n\u003e \u003cbr /\u003e\n\u003e\n\u003e Poll.  \n\u003e\n\u003e \u003cbr /\u003e\n\u003e\n\u003e What is \"the CMOS register value\"? Do you want to set the date \\\u0026 time?  \n\u003e\n\u003e \u003cbr /\u003e\n\u003e\n\u003e I think that\u0027s too general a question. You could try the **UDK** out and observe its configuration utilities, for what they\u0027re worth.  \n\n4. What is \"the CMOS register value\"? Do you want to set the date \\\u0026 time?  \nThanks a lot for ur help.  \nDuring the Boot up sequence, I would like to modify the value of a bit in the CMOS when a GPIO Interrupt occurs in the EFI code. When a GPIO interrupt is encountered during boot up, I want to set/reset a bit in the CMOS. Can you suggest how to go about it.  \n\n5. What are the utilities that are available to modify the UEFI Services (Boot services/ Run time/DXE service/ Image loading unloading etc...)? Or do we need to do this in the code?  \nI would like to minimize the boot up time. Hence, I was thinking to keep bare minimum servies enabled. Can you assist me how to minimize the boot up time in EFI.   \n"
    }
  ]
}