{
  "id": "10254",
  "title": "How to install GRUB2 on USB drive from within Windows",
  "isPinned": false,
  "isFirstTopic": false,
  "isLocked": false,
  "tags": [],
  "forumNotes": [
    {
      "id": "89718",
      "timestamp": "2010-01-26T17:56:49+00:00",
      "author": "somanystars",
      "content": "Hi All. I\u0027ve spent a lot of time trying to do subj.  \nTo be more clear. I have an iso image which uses GRUB2 (specifically, grub-1.97.1) as boot loader. (Some beautiful menus etc.) My task is to create bootable USB drive which after booting will behave exactly as the original CD would, by booting from iso image or by just copying image\u0027s contents to the USB disk.  \nThe problem is that I cannot find a way to install GRUB2 (or GRUB2-based grub4dos, not legacy grub) into USB stick.  \nThough grubinst has option --grub2, it requires g2ldr which isn\u0027t included in grub4dos bundly (and I really don\u0027t understand why).   \nAfter hours of surfing I found some strange iso images like grub2-2009-01-13.iso.bz2 and copied g2ldr from them. But after booting from USB disk, theres is an outout:  \n\n\\[codebox\\]Welcome to GRUB!  \nerror: the symbol \\\u0026#39;grub_machine_fini\\\u0026#39; not found  \nEntering rescue mode  \n\\[/codebox\\]  \n\nAnd no beautiful menus etc.  \nPlease help as I have no ideas by now...   \n"
    },
    {
      "id": "89728",
      "timestamp": "2010-01-26T19:07:16+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e Please help as I have no ideas by now...\n\nWorkaround:  \nInstall grub4dos and chainload grub2, see how the answers that are completely UNLIKE useful in this thread:  \n[http://www.boot-land...showtopic\u003d10242](http://www.boot-land.net/forums/index.php?showtopic\u003d10242 \"External link\")  \n\nmay help you.  \n\nUnlike the problem in the given thread, grub2 can normally be chainloaded by grub4dos:  \n[http://www.boot-land...?...c\u003d9882\\\u0026st\u003d6](http://www.boot-land.net/forums/index.php?showtopic\u003d9882\u0026st\u003d6 \"External link\")  \n\nMake sure to get a latish version, this one being recommended:  \nstable:  \n[http://nufans.net/gr...-2009-10-16.zip](http://nufans.net/grub4dos/grub4dos-0.4.4-2009-10-16.zip \"External link\")  \nexperimental:  \n[http://nufans.net/gr...-2010-01-08.zip](http://nufans.net/grub4dos/tinybit/grub4dos-0.4.5a-2010-01-08.zip \"External link\")  \n\n![:lol:](http://reboot.pro/public/style_emoticons/default/laugh.png)  \n\nWonko   \n"
    },
    {
      "id": "89733",
      "timestamp": "2010-01-26T19:20:45+00:00",
      "author": "ireneuszp",
      "content": "experimental version of grub4dos is also here:  \n[http://grub4dos-chen...-2010-01-23.zip](http://grub4dos-chenall.googlecode.com/files/grub4dos-0.4.5a-2010-01-23.zip \"External link\")  \n\ngrub2 is here  \n[http://cz.archive.ub...buntu5_i386.deb](http://cz.archive.ubuntu.com/ubuntu/pool/universe/g/grub2/grub-rescue-pc_1.97~beta4-1ubuntu5_i386.deb \"External link\")  \n\nor here from debian  \n[http://ftp.debian.or...l/main/g/grub2/](http://ftp.debian.org/pool/main/g/grub2/ \"External link\")  \n\nuse 7-Zip File Manager  \nand unpack from grub-rescue-pc_\\*.\\* file grub-rescue-cdrom.iso  \nand test it  \n\ng2hdr.bin  \ng2ldr.mbr  \nis here  \n[http://ftp.de.debian....1-18-3_all.deb](http://ftp.de.debian.org/debian/pool/main/g/grubutil-win32/grubutil-win32_1.1-18-3_all.deb \"External link\")   \n"
    },
    {
      "id": "89855",
      "timestamp": "2010-01-28T09:30:40+00:00",
      "author": "somanystars",
      "content": "Thank you both very much for your extensive replies! I have succeeded chainloading boot loader from iso image using grub4dos (grub1-based) by using the following grub4dos commands:  \n\nmap (hd0,0)/myimage.iso (0xff) \\|\\| map --mem (hd0,0)/myimage.iso (0xff)  \nmap --hook  \nroot (0xff)  \nchainloader (0xff)  \nmap (0xff) (hd0)  \n\nAnd I get grub2 from iso and all the beautiful menus etc. When I go to grub2 command line I can see 4 disk devices using ls command:   \n\n(hd0) (hd1) (hd127) (fd0)  \n\nAnd ls / gives me a file list of the files inside myimage.iso, and so ls (hd127)/ does. It means grub 2 sees my virtual CD (though I did expect virtual CD to be (hd0) due to map (0xff) (hd0)).   \n\nOK, then I select some item from my beautiful menu to start, and Linuex starts loading. But loading fails because Linux cannot find image.squashfs file (which is really presents inside iso). Specifically the messages are:  \n\n\\[codebox\\]Determining looptype... !!Invalid loop location: /image.squashfs !!Please export LOOP with a valid location, or reboot and pass proper loop\u003d... !!kernel command line \\[/codebox\\] As I can see in the earlies messages, Linux doesn\u0027t see my virtual CD, because it found /dev/sda1, /dev/sda2 (which seems to be 2 partitions of my HDD), /dev/sr0 (seems to be real DVD drive) and /dev/sdb1 (seems to be USB flash stick which I\u0027m trying to boot from). OK, I read manual and edited grub.cfg inside iso image to direct grub2 to make virtual drive from iso image, too, using the following loopback command: insmod fat insmod iso9660 loopback loop (hd0,0)/rescue.iso linux /boot/rescue root\u003d/dev/ram0 init\u003d/linuxrc looptype\u003dsquashfs loop\u003d/image.squashfs cdroot initrd\u003drescue.igz noapic kav_lang\u003d${kav_lang} quiet initrd /boot/rescue.igz But the loopback command fails with message: error: no such partition  \n\nI tried insmod ntfs (because my HDD is NTFS-formatted) and after that I tried (hd0,1) ... (hd0,5) and (hd1,0) ... (hd1,5), but result was the same. I tried running \u0027partition\u0027 command but it said unknown filesystem (fs) or something like that.  \n\nSo now in case of trying to boot from iso directly I\u0027m stuck with problem: why grub2 doesn\u0027t see partitions of my HDD and USB stick (which is FAT32 formatted).  \n\n\u003cbr /\u003e\n\nNow, if try to go another way and install grub2 on the USB disk itself, I can\u0027t understand how to install g2hdr.bin and g2ldr.mbr to USB disk\u0027s MBR. As far as I understand grubinst utility which latest version available to me is of January 2008 contains grub(1,2) boot sectors inside it and uses these old ones. So the second questing is: How can I direct grubinst or another utility to use external g2hdr.bin/g2ldr.mbr and install the to USB disk\u0027s MBR?..  \n\nWill be thankful for any ideas and comments...   \n"
    },
    {
      "id": "89861",
      "timestamp": "2010-01-28T10:11:57+00:00",
      "author": "Wonko the Sane",
      "content": "You seem like \"obsessed\" by mapping or re-mapping things.  \n\nYou don\u0027t need to.  \n\nIn grub4dos don\u0027t re-map anything (KISS approach ![:lol:](http://reboot.pro/public/style_emoticons/default/laugh.png)):  \n\n```\ntitle grub2\n\nfind --set-root /boot/grub/core.img\n```\n\n(make sure that grub2 core.img is in /boot/grub/ - remember that on CDFS grub4dos is CaSe SeNsItiVe - use Command line to make tests)  \n\nAnd post what happens.  \n\nOnce we solve the loading of grub2, one way or the other, there will be still the problems about \"converting\" your grub.cfg entries \"from CD\" \"to USB HD like device\".  \n\nAbout installing grub2, have you actually tried what\u0027s in the grub2 package pointed to?  \n\u003e Package: grubutil-win32  \n\u003e Version: 1.1-18-3  \n\u003e Architecture: all  \n\u003e Maintainer: Robert Millan \\\u003crmh@aybabtu.com\\\u003e  \n\u003e Installed-Size: 52  \n\u003e Section: devel  \n\u003e Priority: extra  \n\u003e Description: GRUB win32 boot images  \n\u003e This package provides GRUB boot record images that can be used by the  \n\u003e native bootloaders of various win32 platforms in order to load a full  \n\u003e instance of GNU GRUB.  \n\u003e .  \n\u003e It is used by the win32-loader package to provide suitable GRUB images for  \n\u003e loading Debian-Installer on win32.\n[http://packages.debi.../grubutil-win32](http://packages.debian.org/lenny/grubutil-win32 \"External link\")  \nand follow the \"chain of thought\" of the good debian guys?  \n[http://packages.debi...ds\u003dwin32-loader](http://packages.debian.org/search?keywords\u003dwin32-loader \"External link\")  \n(i.e. fake a debian install on the stick, and you should have grub2 installed allright)  \n\nyou may want to try some other tools (but CANNOT say if they would work):  \n[http://www.boot-land...?showtopic\u003d7328](http://www.boot-land.net/forums/index.php?showtopic\u003d7328 \"External link\")  \n[http://www.boot-land...?showtopic\u003d8986](http://www.boot-land.net/forums/index.php?showtopic\u003d8986 \"External link\")  \n\nWonko   \n"
    },
    {
      "id": "90548",
      "timestamp": "2010-02-05T16:28:35+00:00",
      "author": "somanystars",
      "content": "Thank you Wonko the Sane! I don\u0027t know whether it\u0027s black magic around grub2 or something else, but I could not ever find core.img anywhere :wink: But finally, I found a solution with grub4dos chainloading patched iso image.  \nThanks to all very much!   \n"
    },
    {
      "id": "90551",
      "timestamp": "2010-02-05T16:36:43+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e Thank you Wonko the Sane!\n\nYou are welcome :wink:, ***BUT*** :wink:  \n\u003e But finally, I found a solution with grub4dos chainloading patched iso image.\n\n... which you are carefully avoiding to describe and detail....:wink:.  \n\nI mean, what do you think that would be more useful to another guy having a similar problem (please choose one):  \n\n* a thread where a number of possibilities are given and the OP reports success with one of them (without saying WHICH one :tongue: )  \n  or\n* a thread where a number of possibilities are given and the OP reports success with one of them (describing in detail WHICH one worked for him ![:cheers:](http://reboot.pro/public/style_emoticons/default/cheers.gif) )\n\n\u003cbr /\u003e\n\n:tongue:  \n\nWonko   \n"
    },
    {
      "id": "93628",
      "timestamp": "2010-03-07T19:25:34+00:00",
      "author": "breaker",
      "content": "@somanystars It would have helped to know exactly what iso you were trying to boot. I am surprised your iso uses grub2 to boot, usually that is not the case. Depending on what the iso is, it can be very easy to boot it on a usb flash drive. Unetbootin is a Windows program you can use to boot almost any Linux distro, if that\u0027s what it is. It extracts the iso then boots it with syslinux. IF it is a Linux distro, depending on the distro another option is to burn a Linux Distro that has the grub-pc package installed (Like Linux Mint 8 or Ubuntu Karmic Koala), then from within the command line of the CD, simply install grub2 to the mbr and a /boot directory of the flash drive, copy the entire iso over to the drive, then make a simple grub.cfg (menu for grub2) that has the commands to boot the iso directly.  \n\nYMMV, but I feel these methods are easier than using grub4dos _IF_ this is a Linux Live CD iso.  \n\nSO, exactly which iso did you boot?  \n\nThanks,  \n\nbreaker   \n"
    },
    {
      "id": "95310",
      "timestamp": "2010-03-20T18:01:05+00:00",
      "author": "somanystars",
      "content": "Hi everybody! I\u0027m sorry for not instant replying, but it\u0027s better late then never, isn\u0027t it? ![\u003c_\u003c](http://reboot.pro/public/style_emoticons/default/dry.png)   \nUnfortunately I can\u0027t name the iso I work with because it\u0027s not publicly available by now.  \nBelow are some details about my solution, which looks rathe strange but working (though grub4dos is not always can start itself and this is going to be my next topic here).  \nThe iso is Gentoo-based. As I said, I was able to chainload it using grub4dos\u0027 map command, but there is an inconvenience because you must have the iso file defragmented or you have to wait for a rather long time while map --mem is loading it into RAM.   \nBut this is not worst. After iso image bootstrapped, grub2 loads it\u0027s menus etc., user makes a selection and Gentoo kernel starts loading, iso mapping is no longer works and loading script fails. It means all efforts spent to chainload large iso file are almost useless.  \nSo I decided to solve this into 2 steps:  \n1) split original iso into 2 files. The first one contains only grub2 and Gentoo kernel files, and the second one is the original iso file with all applications and data (and grub2 and Gentoo too). Let\u0027s say their names are myusb.iso and my.iso.  \n2) change Gentoo\u0027s loading scripts so that it mounts original iso (if it finds myiso.iso) and points REAL_ROOT starting script variable to it. I ended up with an init script that you can find at the and of this topic.  \n\nWhen such prepared USB stick boots, first MBR code finds grldr of grub4dos, then grub4does performs:  \n\n\\[codebox\\]map (hd0,0)/my/myusb.iso (0xff) \\|\\| map --mem (hd0,0)/my/myusb.iso (0xff) map --hook chainloader (0xff) \\[/codebox\\] then grub2 starts, then Gentoo kernel starts and finds my.iso and mounts it and the things are going almost fine ![:wodoo:](http://reboot.pro/public/style_emoticons/default/wodoo.gif) My Gentoo init script (part that I changed): \\[codebox\\]if \\[ \"${CDROOT}\" \u003d \\\u0026#39;1\\\u0026#39; \\] then good_msg \"Making tmpfs for ${NEW_ROOT}\" mount -n -t tmpfs tmpfs \"${NEW_ROOT}\" for i in dev mnt mnt/cdrom mnt/livecd mnt/key mnt/usb tmp tmp/.initrd mnt/gentoo sys do mkdir -p \"${NEW_ROOT}/${i}\" chmod 755 \"${NEW_ROOT}/${i}\" done \\[ ! -e \"${NEW_ROOT}/dev/null\" \\] \\\u0026\\\u0026 mknod \"${NEW_ROOT}\"/dev/null c 1 3 \\[ ! -e \"${NEW_ROOT}/dev/console\" \\] \\\u0026\\\u0026 mknod \"${NEW_ROOT}\"/dev/console c 5 1 # For SGI LiveCDs ... if \\[ \"${LOOPTYPE}\" \u003d \"sgimips\" \\] then \\[ ! -e \"${NEW_ROOT}/dev/sr0\" \\] \\\u0026\\\u0026 mknod \"${NEW_ROOT}/dev/sr0\" b 11 0 \\[ ! -e \"${NEW_ROOT}/dev/loop0\" \\] \\\u0026\\\u0026 mknod \"${NEW_ROOT}/dev/loop0\" b 7 0 fi # Mount iso image, if any if \\[ \"${DO_slowusb}\" \\] \\|\\| \\[ \"${FORCE_slowusb}\" \\] then sleep 10 fi good_msg \"Trying to mount live usb...\" # USB Keychain/Storage local USB_DEVICES\u003d\"/dev/sd\\*\" # IDE devices USB_DEVICES\u003d\"$USB_DEVICES /dev/hd\\*\" # USB using the USB Block Driver USB_DEVICES\u003d\"$USB_DEVICES /dev/ubd\\* /dev/ubd/\\*\" # Prevent error message local OLD_CRYPT_SILENT\u003d\"$CRYPT_SILENT\" CRYPT_SILENT\u003d1 findmediamount \"usb\" \"${SUBDIR}/myliveusb\" \"USB_ROOT\" \"${NEW_ROOT}\" \"${USB_DEVICES}\" CRYPT_SILENT\u003d\"$OLD_CRYPT_SILENT\" if \\[ \"${USB_ROOT}\" !\u003d \\\u0026#39;\\\u0026#39; \\] then REAL_ROOT\u003d\"${NEW_ROOT}/mnt/usb/my/my.iso\" good_msg \"Live usb mounted, real root is ${REAL_ROOT}\" fi # Required for splash to work. Not an issue with the initrd as this # device isn\\\u0026#39;t created there and is not needed. if \\[ -e /dev/tty1 \\] then \\[ ! -e \"${NEW_ROOT}/dev/tty1\" \\] \\\u0026\\\u0026 mknod \"${NEW_ROOT}/dev/tty1\" c 4 1 fi if \\[ \"${REAL_ROOT}\" !\u003d \"/dev/nfs\" \\] \\\u0026\\\u0026 \\[ \"${LOOPTYPE}\" !\u003d \"sgimips\" \\] then bootstrapCD fi if \\[ \"${REAL_ROOT}\" \u003d \\\u0026#39;\\\u0026#39; \\] then echo -n -e \"${WARN}\\\u003e\\\u003e${NORMAL}${BOLD} No bootable medium found. Waiting for new devices\" COUNTER\u003d0 while \\[ ${COUNTER} -lt 3 \\]; do sleep 3 echo -n \\\u0026#39;.\\\u0026#39; let COUNTER\u003d${COUNTER}+1 done sleep 1 echo -e \"${NORMAL}\" bootstrapCD fi if \\[ \"${REAL_ROOT}\" \u003d \\\u0026#39;\\\u0026#39; \\] then # Undo stuff umount \"${NEW_ROOT}/dev\" 2\\\u003e/dev/null umount \"${NEW_ROOT}/sys\" 2\\\u003e/dev/null umount /sys 2\\\u003e/dev/null umount \"${NEW_ROOT}\" rm -rf \"${NEW_ROOT}/\\*\" bad_msg \\\u0026#39;Could not find CD to boot, something else needed!\\\u0026#39; CDROOT\u003d0 fifi# Determine root devicegood_msg \\\u0026#39;Determining root device...\\\u0026#39;while truedo while \\[ \"${got_good_root}\" !\u003d \\\u0026#39;1\\\u0026#39; \\] do case \"${REAL_ROOT}\" in LABEL\\\\\u003d\\*\\|UUID\\\\\u003d\\*) ROOT_DEV\u003d\"\" retval\u003d1 if \\[ \"${retval}\" -ne \\\u0026#39;0\\\u0026#39; \\]; then ROOT_DEV\u003d\\\u0026#96;findfs \"${REAL_ROOT}\" 2\\\u003e/dev/null\\\u0026#96; retval\u003d$? fi if \\[ \"$retval\" -ne \\\u0026#39;0\\\u0026#39; \\]; then ROOT_DEV\u003d\\\u0026#96;busybox findfs \"${REAL_ROOT}\" 2\\\u003e/dev/null\\\u0026#96; retval\u003d$? fi if \\[ \"${retval}\" -ne \\\u0026#39;0\\\u0026#39; \\]; then ROOT_DEV\u003d\\\u0026#96;blkid -t \"${REAL_ROOT}\" \\| cut -d \":\" -f 1 2\\\u003e/dev/null\\\u0026#96; retval\u003d$? fi if \\[ \"${retval}\" -eq \\\u0026#39;0\\\u0026#39; \\] \\\u0026\\\u0026 \\[ -n \"${ROOT_DEV}\" \\]; then good_msg \"Detected real_root\u003d${ROOT_DEV}\" REAL_ROOT\u003d\"${ROOT_DEV}\" else whereis \"REAL_ROOT\" \"root block device\" got_good_root\u003d0 continue fi ;; esac if \\[ \"${REAL_ROOT}\" \u003d \\\u0026#39;\\\u0026#39; \\] then # No REAL_ROOT determined/specified. Prompt user for root block device. whereis \"REAL_ROOT\" \"root block device\" got_good_root\u003d0 # Check for an iso image elif \\[ \"${USB_ROOT}\" !\u003d \\\u0026#39;\\\u0026#39; \\] then REAL_ROOTFLAGS\u003d\"loop -t iso9660\" mount -o ro,${REAL_ROOTFLAGS} ${REAL_ROOT} ${NEW_ROOT}/mnt/cdrom if \\[ \"$?\" \u003d \\\u0026#39;0\\\u0026#39; \\] then got_good_root\u003d1 fi # Check for a block device or /dev/nfs elif \\[ -b \"${REAL_ROOT}\" \\] \\|\\| \\[ \"${REAL_ROOT}\" \u003d \"/dev/nfs\" \\] then got_good_root\u003d1 else bad_msg \"Block device ${REAL_ROOT} is not a valid root device...\" REAL_ROOT\u003d\"\" got_good_root\u003d0 fi done if \\[ \"${CDROOT}\" \u003d 1 -a \"${got_good_root}\" \u003d \\\u0026#39;1\\\u0026#39; -a \"${REAL_ROOT}\" !\u003d \"/dev/nfs\" \\] then # CD already mounted; no further checks necessary  \nbreak  \nelif \\[ \"${LOOPTYPE}\" \u003d \"sgimips\" \\]  \nthen  \n# sgimips mounts the livecd root partition directly  \n# there is no isofs filesystem to worry about  \nbreak  \nelse  \ngood_msg \"Mounting root...\"  \n\n# Try to mount the device as ${NEW_ROOT}  \nif \\[ \"${REAL_ROOT}\" \u003d \\\u0026#39;/dev/nfs\\\u0026#39; \\]; then  \nfindnfsmount  \nelse  \n# mount ro so fsck doesn\\\u0026#39;t barf later  \nif \\[ \"${REAL_ROOTFLAGS}\" \u003d \\\u0026#39;\\\u0026#39; \\]; then  \nmount -o ro ${REAL_ROOT} ${NEW_ROOT}  \nelse  \ngood_msg \"Using mount -o ro,${REAL_ROOTFLAGS}\"  \nmount -o ro,${REAL_ROOTFLAGS} ${REAL_ROOT} ${NEW_ROOT}  \nfi  \nfi  \n\n# If mount is successful break out of the loop   \n# else not a good root and start over.  \nif \\[ \"$?\" \u003d \\\u0026#39;0\\\u0026#39; \\]  \nthen  \nif \\[ -d ${NEW_ROOT}/dev -a -x ${NEW_ROOT}/sbin/init \\] \\|\\| \\[ \"${REAL_ROOT}\" \u003d \"/dev/nfs\" \\]  \nthen  \nbreak  \nelse  \nbad_msg \"The filesystem mounted at ${REAL_ROOT} does not appear to be a valid /, try again\"  \ngot_good_root\u003d0  \nREAL_ROOT\u003d\\\u0026#39;\\\u0026#39;  \nfi  \nelse  \nbad_msg \"Could not mount specified ROOT, try again\"  \ngot_good_root\u003d0  \nREAL_ROOT\u003d\\\u0026#39;\\\u0026#39;  \nfi  \nfi  \ndone  \n# End determine root device  \n\\[/codebox\\]   \n"
    }
  ]
}