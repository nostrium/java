{
  "id": "20805",
  "title": "which MBR suitable to bootstrap Linux on 4K-sectors ?",
  "isPinned": false,
  "isFirstTopic": false,
  "isLocked": false,
  "tags": [],
  "forumNotes": [
    {
      "id": "195976",
      "timestamp": "2015-10-19T13:29:57+00:00",
      "author": "Ninho",
      "content": "Still after booting the \"unbootable\" external (USB) disk with 4K (native) sectors,  \nusing MBR-style partitionment. I\u0027m loading and transferring initial control to the   \nMBR using Chenall and Yaya2007\u0027s Grub4DOS with its integrated USB2-driver and   \nreal-mode int13.   \n\nI installed a modern Linux distro - AntiX 15 - to the device, also setting up the companion grub (2) to the MBR.  \n\nUnfortunately Grub(2) does not seem up to the task :-( It loses foot and crashes very early while still in the MBR (custom BIOS-level debugger trapped the faulting instruction and I examined the memory, so there is no doubt that grub\u0027s MBR - 1st full 4K - was loaded and run and /it/ faulted, @ some 0x20D bytes into the sector).  \n\nIs the \"grand\" bootloader advertised to understand 4K-native+MBR ?  \nElse what MBR code should I try ? Syslinux ?  \n\nanother leas : while Grub4DOS will not interpret file systems on the 4K-device, it occurred to me I could, perhaps, have it load the \"vmlinuz\" kernel as a \"blocklist\".  \nWould one of the bootland Wizzards suggest an easy way to get the blocklist (list of sectors) in question ?   \n\n**Edited by Ninho, 19 October 2015 - 01:35 PM.**\n"
    },
    {
      "id": "195977",
      "timestamp": "2015-10-19T14:47:07+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e another leas : while Grub4DOS will not interpret file systems on the 4K-device, it occurred to me I could, perhaps, have it load the \"vmlinuz\" kernel as a \"blocklist\".  \n\u003e Would one of the bootland Wizzards suggest an easy way to get the blocklist (list of sectors) in question ?\n\nI am not sure to understand. ![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png)\n\nThe blocklist command in grub4dos will list extent(s) for a file (provided that it \"sees\" the file through the filesystem).\n\nUnder NT there are a couple tools, getFileExtents.exe or myfragmenter.exe, some reference here:\n\n[http://www.msfn.org/...essful-unbrick/](http://www.msfn.org/board/topic/157688-still-no-partition-on-seagate-after-successful-unbrick/ \"External link\")\n\nI am pretty sure that there similar ones in Linux, though I know none of them.\n\nProvided that they actually work with 4K sectors, the findpart tools may also contain something useful (but it\u0027s a lot of time I don\u0027t use them and the feature may be in them or maybe it not ![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png):\n\n[http://www.partition...m/utilities.htm](http://www.partitionsupport.com/utilities.htm \"External link\")\n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "195978",
      "timestamp": "2015-10-19T15:34:09+00:00",
      "author": "Ninho",
      "content": "\u003e another ~~leas~~IDEA : while Grub4DOS will not interpret file systems on the 4K-devic...\n\u003e I am not sure to understand. ![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png)\nNo wonder ;\u003d) I made a mess while editing. Eyesight is worse and worse (sigh).  \n\n\u003e The blocklist command in grub4dos will list extent(s) for a file (provided that it \"sees\" the file through the filesystem).\nAgreed, and it is the issue since Grub4dos 0.4.6.a even the newest build is still broken on 4K-sectors; does not \"see\" any file systems, so that only absolute (MBR based) offsets can be used, not files. Blocklists /should/ be OK.  \n\n{Note to myself : collect sample hex dumps of critical disk areas from partitions (various file systems) and send attention / Mr. Yaya2007.}  \n\n\u003e Under NT there are a couple tools, getFileExtents.exe or myfragmenter.exe, some reference here:  \n\u003e [http://www.msfn.org/...essful-unbrick/](http://www.msfn.org/board/topic/157688-still-no-partition-on-seagate-after-successful-unbrick/ \"External link\")\nnoting for further reference. However, since the file I would have to gather the \"blocklist\" for is on an ext3 Linux partition, operating from NT is probably not the shortest route (I do use \"ext2fsd\" occasionally to access Linux file systems)  \n\n\u003e I am pretty sure that there similar ones in Linux, though I know none of them.\nSome one else will hopefully chime in proudly with Linux command line magix !  \n\n\u003e Provided that they actually work with 4K sectors, the findpart tools may also contain something useful   \n\u003e [http://www.partition...m/utilities.htm](http://www.partitionsupport.com/utilities.htm \"External link\")\nNoted...but alas,  \n\u003e Svend Olaf Mikkelsen, 1999-2014.   \n\u003e Note: All utilities are for disks with a 512 bytes logical sector size.\n\n**Edited by Ninho, 19 October 2015 - 04:28 PM.**\n"
    },
    {
      "id": "195980",
      "timestamp": "2015-10-19T15:51:59+00:00",
      "author": "Wonko the Sane",
      "content": "It seems like you have to compile your own little proggy using the FS_IOC_FIEMAP:\n\n[https://freethreads....u-ext3-extents/](https://freethreads.wordpress.com/2011/10/16/ubuntu-ext3-extents/ \"External link\")\n\n[http://smackerelofop...le-extents.html](http://smackerelofopinion.blogspot.it/2010/01/using-fiemap-ioctl-to-get-file-extents.html \"External link\")\n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "195981",
      "timestamp": "2015-10-19T16:36:07+00:00",
      "author": "Ninho",
      "content": "\u003e It seems like you have to compile your own little proggy using the FS_IOC_FIEMAP:  \n\u003e Wonko\n\nMaybe not. I found this - while you were typing your answer - which looks promising :  \n[http://serverfault.c...blocks-on-linux](http://serverfault.com/questions/29886/how-do-i-list-a-files-data-blocks-on-linux \"External link\")   \n"
    },
    {
      "id": "195983",
      "timestamp": "2015-10-19T17:45:40+00:00",
      "author": "Ninho",
      "content": "...From the antix (live) now running from an \"iso\" in VMware player in a corner of this Windoze XP destop   \n(aren\u0027t these toys wonderful?) I mounted the 4K-sector-thing and ran \\\u0026gt; debugfs /dev/sda2, then  \n\" stat /boot/vmlinuz-4.0.5-antix. bla blah...\", in response getting (abridged) :  \n______________________________________________________________  \n\nInode: 376849 ... Size: 3633152  \n\nFragment: Address:0 Number:0 Size:0  \n\nBLOCKS:  \n\n(0-11): 788119-188130, (IND):788131, (12-886): 788132-789006  \n\nTOTAL: 888  \n\n_____________________________________________________________  \n\n\u003cbr /\u003e\n\nScary, no :\u003d) ? At least the number of blocks is 888, NOT 666.  \nWithout knowing much (or zilch) about ext3 internals, it appears  \nafter an elementary calculation that the \"blocks\" in the above report  \nare 4,096 bytes long, so numbers will have to be multiplied by 8  \nin order to satisfy Grub4DOS (which counts by 512 byte units always).   \n\nNext it appears the vmlinuz \u0027kernel\u0027 is contiguous, though I wonder  \nwhether the embedded \"IND\" (index?) block should be included or not  \nwhen passing the extent to Grub4DOS as a blocklist.  \n\nFinally I\u0027ll have to peek inside the partition and determine if  \nthe block numbers are indeed absolute offsets from the disk\u0027s start,  \nor else from the partition\u0027s starting point.   \n\nOr, anybody familiar with linux extended systems, help with the sleuthing ?   \n\n**Edited by Ninho, 19 October 2015 - 05:47 PM.**\n"
    },
    {
      "id": "195984",
      "timestamp": "2015-10-19T18:03:00+00:00",
      "author": "Wonko the Sane",
      "content": "Just dd (from Linux of course) the kernel file to a new file, then dd the sector range you think correct to another file and compare if files are the same? ![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png)\n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "195986",
      "timestamp": "2015-10-19T20:08:00+00:00",
      "author": "Ninho",
      "content": "\u003e Just dd (from Linux of course) the kernel file to a new file, then dd the sector range you think correct to another file and compare if files are the same? ![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png)  \n\nYep, a good plan. Alternatively, since I\u0027m more at ease and have more tools handy in Windows than Linux, I mounted the ext partition using Ext2fs (unpaid promotion again) and copied the kernel file to the desktop ! \"Real men\" use dd, they say... smart ones are content to drag-n-drop :\u003d)  \n\nAnd examination of the file has confirmed calculations along the line of thought introduced above, which is comforting ! I\u0027ll translate the findings into the language that Grub4DOS understands and try to boot it tomorrow;  \n\nSurprisingly that compressed binary kernel starts like an MS executable mock-up, \"MZ\" etc and even a \"PE\" header. The beast is everywhere, even where you\u0027d expect to find her the less !   \n"
    },
    {
      "id": "196004",
      "timestamp": "2015-10-21T16:21:56+00:00",
      "author": "Ninho",
      "content": "Update : as it turns out, Grub4DOS does /not/ accept a \u0027kernel\u0027 file specified in \u0027blocklist\u0027 notation. This last coup du sort nails the coffin, at the moment I have more important real-life issues to sort out than this. It\u0027s not been time completely lost : I learnt about debugfs and added its \u0027stat\u0027 command to my bag of tricks, at least...   \n"
    },
    {
      "id": "196007",
      "timestamp": "2015-10-22T07:43:11+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e Update : as it turns out, Grub4DOS does /not/ accept a \u0027kernel\u0027 file specified in \u0027blocklist\u0027 notation. This last coup du sort nails the coffin, at the moment I have more important real-life issues to sort out than this. It\u0027s not been time completely lost : I learnt about debugfs and added its \u0027stat\u0027 command to my bag of tricks, at least...\n\nI am wondering (just an idea for your next experiment, when you will have time) if it would be possible to make something similar to what the good ol\u0027 hmload was used for:\n\n[https://web.archive....ent/GrubForDOS/](https://web.archive.org/web/20140401030514/http://sysdocs.stu.qmul.ac.uk/sysdocs/Comment/GrubForDOS/ \"External link\")\n\nthrough dd and/or some other internal grub4dos commands.\n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    }
  ]
}