{
  "id": "18681",
  "title": "Enhanced Write Filter (EWF) on x64",
  "isPinned": false,
  "isFirstTopic": false,
  "isLocked": false,
  "tags": [],
  "forumNotes": [
    {
      "id": "174377",
      "timestamp": "2013-07-04T15:46:18+00:00",
      "author": "Zoso",
      "content": "I would like to start a discussion about this tool because very little info is available anywhere for utilizing it in a 64bit OS.  \n\nthe only info I have found is here: [http://www.mp3car.co...ite-filter.html](http://www.mp3car.com/winnt-based/140081-ewf-on-windows-7-32-bit-or-64-bit-enhanced-write-filter.html \"External link\")  \n\nI am trying to adapt that tutorial for using ewf in XPx64 but I need to figure out the partition offset and I do not have diskpar.exe so first question is what other tool is available to determine this partition offset?   \n"
    },
    {
      "id": "174384",
      "timestamp": "2013-07-04T18:07:46+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e I am trying to adapt that tutorial for using ewf in XPx64 but I need to figure out the partition offset and I do not have diskpar.exe so first question is what other tool is available to determine this partition offset?\n\nThere is NOT any need of diskpar to get those info (Disk SIgnature and offset of partition).\n\n\\*any\\* hex editor/MBR viewer worth it\u0027s name will do.\n\nJust as example you can use grub4dos or Tiny Hexer (with my MBRviewer script):\n\n[http://reboot.pro/to...l-for-grub4dos/](http://reboot.pro/topic/17728-release-mbrviewg4b-a-bat-tool-for-grub4dos/ \"\")\n\n[http://reboot.pro/to...-hexer-scripts/](http://reboot.pro/topic/8734-tiny-hexer-scripts/ \"\")\n\n![:cheers:](http://reboot.pro/public/style_emoticons/default/cheers.gif)\n\nWonko\n\n"
    },
    {
      "id": "174386",
      "timestamp": "2013-07-04T20:06:26+00:00",
      "author": "Zoso",
      "content": "\u003e /\\\u003e /\\\u003eThere is NOT any need of diskpar to get those info (Disk SIgnature and offset of partition).  \n\u003e\n\u003e \\*any\\* hex editor/MBR viewer worth it\u0027s name will do.  \n\u003e Just as example you can use grub4dos or Tiny Hexer (with my MBRviewer script):  \n\u003e [http://reboot.pro/to...l-for-grub4dos/](http://reboot.pro/topic/17728-release-mbrviewg4b-a-bat-tool-for-grub4dos/ \"\")  \n\u003e [http://reboot.pro/to...-hexer-scripts/](http://reboot.pro/topic/8734-tiny-hexer-scripts/ \"\")  \n\u003e\n\u003e ![:cheers:](http://reboot.pro/public/style_emoticons/default/cheers.gif)  \n\u003e Wonko\n\nhi Wonko, can the self executing tiny hexer do this (read partition offset) directly? I have also run into a hitch here because I dont know how to convert the offset in a way registry editor will accept.  \n\n\u003cbr /\u003e\n\nI have another plan to try also using Windows Embedded Standard 7 Service Pack 1 Evaluation Edition I will try to make a thin client version of w7 that I can enable and disable EWF the same way you can with XPx32 and if I have success I may can reverse engineer the EWF components to work in XPx64 but it will also be a good way to learn more about W7  \n\nin the end I just want to be able to run XP64 and W7 from USB with EWF protection same way I run XPx32 but Ive always used USBoot for USB booting prep and it does not support EWF on x64 and has no support at all for W7  \n\nI also want to find how to slipstream driverpacks with keep the drivers option into W7 but so far I cant find if it is possible.   \n"
    },
    {
      "id": "174397",
      "timestamp": "2013-07-05T08:47:13+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e hi Wonko, can the self executing tiny hexer do this (read partition offset) directly? I have also run into a hitch here because I dont know how to convert the offset in a way registry editor will accept.  \n\nWhat is the \"self executing\" ![:w00t:](http://reboot.pro/public/style_emoticons/default/w00t.gif) tiny hexer?\n\nANY hex/disk editor can read a bunch of bytes, once you know at what address they are, and as said \\*any\\* partition manager/viewer.\n\nThe \"raw\" data are not \"encrypted\" they are hex values, you can use \\*anything\\*, even calc.exe would do, to convert them from hex to decimal.\n\n![:cheers:](http://reboot.pro/public/style_emoticons/default/cheers.gif)\n\nWonko\n\n"
    },
    {
      "id": "174407",
      "timestamp": "2013-07-05T14:17:04+00:00",
      "author": "Zoso",
      "content": "oh, maybe not \"self executing\".. I meant the stand alone exe not the installable package.  \n\nI need to learn about these hex addresses, it is becoming a stumbling point for me now. (also the HEX entries in the registry).  \n\n\u003cbr /\u003e\n\nI have W7E working in VM and EWF working with it but there is no .bat file for operations so I will try to make those first. it seems also the W7 version of EWF has more functions than the XPE but I have only used the XPE one indirectly so I plan to test XPE directly also to see how EWF is working in original form.   \n"
    },
    {
      "id": "174409",
      "timestamp": "2013-07-05T14:48:49+00:00",
      "author": "Wonko the Sane",
      "content": "See here:\n\n[http://www.911cd.net...showtopic\u003d19663](http://www.911cd.net/forums//index.php?showtopic\u003d19663 \"External link\")\n\n[http://www.911cd.net...ndpost\\\u0026p\u003d130963](http://www.911cd.net/forums//index.php?s\u003d\u0026showtopic\u003d19663\u0026view\u003dfindpost\u0026p\u003d130963 \"External link\")\n\nYou can well reuse parts of the batch code in MBRbatch:\n\n\u003chttp://reboot.pro/?showtopic\u003d3191\u003e\n\n[http://reboot.pro/to...ease-001-alpha/](http://reboot.pro/topic/5000-managing-mbrs-by-jaclaz-mbrbatch-release-001-alpha/ \"\")\n\npossibly in the \"updated\" version by Lancelot:\n\n[http://reboot.pro/to...-alpha/?p\u003d45422](http://reboot.pro/topic/5000-managing-mbrs-by-jaclaz-mbrbatch-release-001-alpha/?p\u003d45422 \"\")\n\nwhich is compatible with x64.\n\n(you don\u0027t obviously need vdk or to mount anything, you can make simply a copy of the MBR and peek into it).\n\n![:cheers:](http://reboot.pro/public/style_emoticons/default/cheers.gif)\n\nWonko\n\n"
    },
    {
      "id": "194330",
      "timestamp": "2015-08-05T17:59:13+00:00",
      "author": "misty",
      "content": "\u003e I need to learn about these hex addresses, it is becoming a stumbling point for me now. (also the HEX entries in the registry).\nThis may be of interest - [http://mistyrebootfi...e_partition.htm](http://mistyrebootfiles.altervista.org/documents/BCDEdit/files/device_partition.htm \"External link\")  \n\nRead in particular the [Bios Firmware - MBR Disk](http://mistyrebootfiles.altervista.org/documents/BCDEdit/files/device_partition.htm#bios \"External link\") section.  \n\nRegards,  \n\nMisty   \n"
    },
    {
      "id": "194504",
      "timestamp": "2015-08-09T19:06:06+00:00",
      "author": "S466531257BOSS",
      "content": "Maybe you are looking for stuff like this ? : [Windows Server 2003 Ressource Kit](http://www.microsoft.com/en-us/download/details.aspx?id\u003d17657 \"External link\") ; [Wolfgang Unger on implementing EWF](https://wunger.wordpress.com/2009/09/15/enhanced-write-filter-%E2%80%93-installation-batch-file/ \"External link\") ;\n\n"
    },
    {
      "id": "194505",
      "timestamp": "2015-08-09T19:09:06+00:00",
      "author": "S466531257BOSS",
      "content": "Seems you already did take a look at : [Is that you ?](https://www.usboot.org/tiki-view_forum_thread.php?comments_parentId\u003d2401 \"External link\")\n\n"
    },
    {
      "id": "194506",
      "timestamp": "2015-08-09T19:34:29+00:00",
      "author": "S466531257BOSS",
      "content": "Quote: \"I also want to find how to slipstream driverpacks with keep the drivers option into W7 but so far I cant find if it is possible.\"\n\nIf that is a problem, maybe you forgot to clear the QuickStream Cache before applying ? Windows Checks where the cache is pointing to, so just slipstreaming driverpacks let em be contained but not usable from boot-up as the QSC is pointing to the original one; therefore cleaning is necessary to let W know we have an updated ( driverpacks included ) driver-storage and the QSC should be rebuild on installation. Most simple usage you can find in driverpacks-base-integrator.\n\nThe needed files for EWF you find in the Server 2003 Embedded Trial , embed the enhanced write filter according to the options given for Win 7, by copying the ewf-management files manually, registering and using the ewf-manager to inform and apply before closing the image.\n\nIf you need it lean use SAD2, or write your own batch and apply the files and reg-entries via dism into the image, jut make sure that after boot-up can sync itself by providing either a fresh build of the qsc ( running with sysprep monitored ) or by clearing the cache.\n\nHmm. I think i have given you more confusion then necessary right now. MAybe you point out what you exactly did already and in which way you stumble and where you possibly fall.\n\n"
    },
    {
      "id": "194512",
      "timestamp": "2015-08-09T21:08:48+00:00",
      "author": "Zoso",
      "content": "\u003e This may be of interest - [http://mistyrebootfi...e_partition.htm](http://mistyrebootfiles.altervista.org/documents/BCDEdit/files/device_partition.htm \"External link\")  \n\u003e\n\u003e Read in particular the [Bios Firmware - MBR Disk](http://mistyrebootfiles.altervista.org/documents/BCDEdit/files/device_partition.htm#bios \"External link\") section.  \n\u003e\n\u003e Regards,  \n\u003e\n\u003e Misty\nhi Misty,  \nyes it is interesting, all of your guides are ;-) thanks for pointing me to the relevant part.   \n\n\u003e Seems you already did take a look at : [Is that you ?](https://www.usboot.org/tiki-view_forum_thread.php?comments_parentId\u003d2401 \"External link\")\n\nhi S466531257BOSS,  \n\nyes again, that was me. you can tell Ive been wanting to get this working for a while now.  \n\nthis is only a hobby for me and I dont get lots of time to dedicate to it. when I left off this particular goal (EWF on XPx64) I actually had it partially working but did not document my steps and needed the HDD space for something else. now Im collecting info on it again so when I have time to put it together I will have everything I need.  \n\nI recall when I had it working it was with the components from ES7 but ewfmgr was not working and so it had to be controlled with registry entries. this is why Im trying to get the earliest version of the EWF components for x64.  \n\nyour suggestion for embedded server 2003 is a good one. I think that might be the earliest but info is hard to find about it. I havnt been able to determine if it is actually a x64 available.   \n\n[http://www.avnet-emb...ws-server-2003/](http://www.avnet-embedded.eu/products/software/server/product/windows-server-2003/ \"External link\")  \n\n[http://www.msembedde...erver-embedded/](http://www.msembedded.biz/en/embedded-software/windows-server-embedded/ \"External link\")  \n\nthere is also a vista embedded but its probably the same as E7.  \n\nIm looking forward to experimenting more with it when I get a chance but as you can tell, I havnt been in a big rush.  \n\nthanks  \n\nedit: forgot to mention that the main differences between 32 and 64 EWFs is 32 usses arc paths and 64 uses partition ID combined with offsets   \n"
    },
    {
      "id": "194557",
      "timestamp": "2015-08-10T19:05:33+00:00",
      "author": "S466531257BOSS",
      "content": "Nah, the Vista one has nothing to do with Win 7 - its a branch that was not taken further - in terms of practicing Windows-Embedded-dependent configuration you have to stick with either the XP-Line ( NT 5.1/5.2 - Kernel-Branch ) OR the 7+-Line ( NT 6.1+ ) ; It\u0027s difficult to explain in less words ; If you possibly were already fuddling with Windows in the 9x vs. NT / vs. / ME -days it is easier to understand : Windows 98 was so-to-say Windows 95-b with hard-wired dependencies; Windows 95 c was the last released evolutionary branch based on Windows 95.b - so at this time the dependencies and support for specific paroles ( slang for services/calls via MFC to the kernel ) have split up ; Windows 98 SecondEdition than was kind of trial-and-error to merge the NT ( 3.5.1 at that time ) -line to the 9x-branch, that is why you can exchange the kernel of Win98 SE with the Windows 2000 one for example and let apps run that were specifically designed for NT; Besides the hiccups that generally follow when you\u0027re kind of stuff like that, you can create ( with much manpower and many overtime ) a so-to-say embedded system running readonly cached into ramdisk booted from eeprom ( that were our first attempts of doing things like that back in the millenium days - however -- be lucky these days are over ) ; Overall, you can say ( pointing to the embedded lines ) you should do some research on Kernel-Calls made necessary ( the lower end ) and possible ( the upper end ) in the Release Versions of Windows Server 2003 Embedded or likewise Windows XP 64 Professional ( which are essentially built from the same base ); sry it\u0027s too long gone so the names we spud out that dayz repeatedly have been gone too, besides i am suffering from Poly-Arthritis and Parkinson-Symptomatics, so please be so kind to ignore any could-be-bullshittin in here -- i just try to dig out the memories ( like thinking-loud ) to point you to the right set - because i \u0027 feel \u0027 it is there - somewhere ... :smile: ) ; In terms of ARC-Path or how NTLDR / Boot.ini loads -- ( Pete ? ) Boyans has have had some nice lines ready, if i remember right . --- Only thing i can say for sure was the limitation ( in that 64-bit 2003 Embedded mentioned before we have had got the-days-before as preconfigured Kiosk/POS-System that we were in must / means it was needed to actually run it on Compact-Flash Type II Cartridges accessible at boot-time as given in the thin-clients we have used then; but it\u0027s all a cuddle-muddle from back then; Well maybe you can suck out some dots and revive the wisdom; If so it would be nice to see explanatory example setups if you would be so kind; If something PRACTICALLY USEFUL will spill up my cortex i\u0027ll add it here, but for now i better leave this alone before it discourses you or possible fellas on that topic;\n\nEDIT \\| NOTE : I don\u0027t really get it, but it was like : load the whole into ram - then establish access by spending the needed snapshot as boot-option to load that snapshot directly via ewf ntldr on soft-reset, due to caching via bios for quick-start ; some like that; however we definately have had to handle it via kernel-mode-drivers, which also worked in the customized EEPROM-WIN98SE so they have had to be Universal-/Windows-DriverModel--Drivers as used first in Win98SE in full compliance to Win XP before it was published --- really i just try to narrow it down --- i am very sure that you have to look around 2000 to 2005 with keywords like KMDF ( Kernel-Mode-Driver-FrameWork / Universal-Windows-Driver / Windows-Driver-Model / NTLDR / EWF / EWF-NTLDR / SysWow-aware applications / ... bla bla bla and so on ... ) Sorry, brain is jammed with marmelade .\n\nBURN AFTER READING .\n\nS466531257 BOSS\n\nPAETH CLAUDIUSRAPHAEL\n\n**Edited by S466531257BOSS, 10 August 2015 - 07:26 PM.**\n"
    },
    {
      "id": "194614",
      "timestamp": "2015-08-11T21:21:03+00:00",
      "author": "Zoso",
      "content": "\u003e Nah, the Vista one has nothing to do with Win 7 - its a branch that was not taken further - in terms of practicing Windows-Embedded-dependent configuration you have to stick with either the XP-Line ( NT 5.1/5.2 - Kernel-Branch ) OR the 7+-Line ( NT 6.1+ )\n\nhi S466531257BOSS,  \n\nIm looking for the earliest version of ewfmgr and related components but finding them for 2003 and vista is proving difficult.  \n\nthanks   \n"
    },
    {
      "id": "194653",
      "timestamp": "2015-08-13T17:16:18+00:00",
      "author": "Guest_AnonVendetta_*",
      "content": "What is the purpose of this write filter? To entirely prevent writes to the volume/partition/drive? Or (just a wild guess), is it something that makes writing to disk more efficient in some way?\n\nIf the former, there are (paid) solutions like Shadow Defender, SandBoxie, RollBack RX, Returnil, etc, that do work in a similar way (or aren\u0027t necessarily write filters, but still use write redirection in some way). SD in particular prevents drive writes by redirecting all writes to a RAM cache, and then discarding that cache at boot. The end result is that the drive is untouched.\n\nDoes this EWF driver need Test-Signing mode to be turned on?\n\n"
    }
  ]
}