{
  "id": "5133",
  "title": "emulating USB-ZIP or USB-FDD",
  "isPinned": false,
  "isFirstTopic": false,
  "isLocked": false,
  "tags": [],
  "forumNotes": [
    {
      "id": "39286",
      "timestamp": "2008-07-07T14:12:07+00:00",
      "author": "mr_",
      "content": "I think there is a bit confusion about the term \"emulating USB-ZIP\" or USB-FDD.  \n\n1)  \n\nFor me \"emulating USB-ZIP\" means ![Posted Image](http://www.usbportal.co.uk/media/thumbdrive_svu88.jpg) (any device, such as this USB-pendrive) claims to be ![Posted Image](http://www.wildfalconsolutions.net/USB%20ZIP.jpg) (real USB-ZIP).  \n\nOr \"emulating USB-FDD\" means ![Posted Image](http://www.usbportal.co.uk/media/thumbdrive_svu88.jpg) (any device, such as this USB-pendrive) claims to be ![Posted Image](http://www.queen-tech.com/pictures/usb_fdd_toshiba_silver.jpg) (real USB-FDD).  \n\nI suspect this real emulating can only be done on hardware / firmware level and is not possible for normal end users. So either you buy a device with this feature or not...  \nIn this case the operating system shouldn\u0027t be able to see any difference from the emulated device compared with a real one.  \n\n2)  \n\nTalking about a USB-pendrives or USB-harddisks now. If I am right I recognized that older BIOS have only option to boot USB-ZIP. Newer BIOS can boot USB-HDD and USB-ZIP and USB-FDD.  \n\nOn older BIOS USB-ZIP doesn\u0027t mean you can not boot up USB-pendrive / USB-harddisk. But you need to fdisking/formatting the device as \"USB-ZIP\" (this means basically in little words only with no partition table).  \n\nTherefore there is an interesting project called makebootfat for multi usb standard booting. It works well but somehow it doesn\u0027t work in all cases. Imho this is no \"emulating of devices\".  \n\nOn my own comp with a newer BIOS I can only boot a real USB-pendrive / USB-harddisk if fdisking/formatting as USB-HDD (standard way), otherwise it\u0027s not booting. It seams for my BIOS:  \nUSB-HDD \u003d ![Posted Image](http://www.usbportal.co.uk/media/thumbdrive_svu88.jpg) or ![Posted Image](http://www.everythingusb.com/images/list/buffalo-turbo-usb-320gb-compare.jpg).  \nUSB-ZIP \u003d ![Posted Image](http://www.wildfalconsolutions.net/USB%20ZIP.jpg).  \nUSB-FDD \u003d ![Posted Image](http://www.queen-tech.com/pictures/usb_fdd_toshiba_silver.jpg).  \nThe \u0027new\u0027 label\u0027s are much more logical to me, aren\u0027t them.  \n\n3)  \n\nWhat\u0027s you opinion on my definitions?  \n\nMaybe it\u0027s really possible to \"emulate\" USB-FDD or USB-ZIP on software level with a normal device?   \n"
    },
    {
      "id": "39289",
      "timestamp": "2008-07-07T14:31:47+00:00",
      "author": "was_jaclaz",
      "content": "Yes, it is possible to emulate ZIP disks.  \n\nThere are TWO kinds of ZIP disk formatting, see here:  \n[http://www.win.tue.n.../zip/zip-1.html](http://www.win.tue.nl/~aeb/linux/zip/zip-1.html \"External link\")  \n\nThe USB-ZIP \"liked\" by most motherboards with this option DO HAVE a partition table, with 4th entry active and geometry of ***n*** x64x32.  \n\nThere is no way AFAIK to emulate floppy disks, but most probably noone ever attempted it seriously, as an emulated floppy disk is 1.44 Mb in size.  \n\nThere are motherboards (very, very few actually) that allow for \"superfloppy\" formats.  \n\nApart from makebootfat, there is syslinux:  \n[http://syslinux.zytor.com/usbkey.php](http://syslinux.zytor.com/usbkey.php \"External link\")  \n\nAnd grub4dos MBR has been reported to work in a very peculiar case:  \n[http://www.boot-land...?showtopic\u003d4863](http://www.boot-land.net/forums/?showtopic\u003d4863 \"External link\")  \n[http://www.boot-land...?showtopic\u003d4830](http://www.boot-land.net/forums/?showtopic\u003d4830 \"External link\")  \n\nAll the info about pecularities of needed fdisking/formatting can be found in the above two threads and here:  \n[http://www.knoppix.n...ootable_USB_Key](http://www.knoppix.net/wiki/Bootable_USB_Key \"External link\")  \n[http://wiki.grml.org/doku.php?id\u003dusb](http://wiki.grml.org/doku.php?id\u003dusb \"External link\")  \n\njaclaz   \n"
    },
    {
      "id": "39291",
      "timestamp": "2008-07-07T14:52:11+00:00",
      "author": "mr_",
      "content": "Interesting but it all sounds basically only like \"making it to work with the old USB-ZIP and the new USB-HDD booting standard at the same time\". A nice thing anyway, but this is no emulation or did I miss a point?   \n"
    },
    {
      "id": "39292",
      "timestamp": "2008-07-07T15:05:23+00:00",
      "author": "was_jaclaz",
      "content": "\u003e Interesting but it all sounds basically only like \"making it to work with the old USB-ZIP and the new USB-HDD booting standard at the same time\". A nice thing anyway, but this is no emulation or did I miss a point?\n\nNO, it\u0027s me that am missing your point. :smile:  \n\nThis ***is*** emulation:  \n[http://www.thefreedi...ary.com/emulate](http://www.thefreedictionary.com/emulate \"External link\")  \n\nBut I am not sure about what you are looking for...:smile:  \n\n...I mean is this aimed to be a \"practical\" thread or a speculative \"philosophical\" one?  \n\nIf the problem is USB booting, the info posted solves the problem in some cases, when not even the above info is useful, one can try using a \"kicker\" disk or install a \"dedicated\" bootloader, PLOP has made LOTS of progresses lately:  \n[http://www.plop.at/](http://www.plop.at/ \"External link\")  \n[http://www.plop.at/en/bootmanager.html](http://www.plop.at/en/bootmanager.html \"External link\")  \n[http://www.plop.at/e...mngrusblog.html](http://www.plop.at/en/bootmngrusblog.html \"External link\")  \n\n:smile:  \n\njaclaz   \n"
    },
    {
      "id": "39296",
      "timestamp": "2008-07-07T16:37:10+00:00",
      "author": "mr_",
      "content": "\u003e ...I mean is this aimed to be a \"practical\" thread or a speculative \"philosophical\" one?\nTo be honest this isn\u0027t a theoretical question or word game.  \n\nThe definition of emulation and virtualization is pretty hard. For example bochs is a computer emulator, while VMware is a virtualizer. Bochs emulates a whole computer, it can emulate hardware which does not exist in reality. VMware is faster and more a manager to abstract different operating systems from each other. If you have not the right CPU in VMware you may not use a few operating systems, because the CPU is virtualized and not emulated (if you want so the guest operating system has some kind of direct access to the CPU and VMware is just abstracting forbidden access).  \n\nThe software VirtualFloppy emulates as soon as started a real legacy FDD, but it\u0027s not a hardware emulation. Only a software emulation with the logical limitation that this device is not bootable. (Yes, there are workarrounds.)  \n\nBack to the USB-ZIP / USB-FDD emulation question. A USB-ZIP emulation would be to hardware emulate the real old iomega. With a full emulation you would see in Windows a ZIP drive named iomega.  \n\nOtherwise if you use a standard USB pendrive and the \"USB-ZIP booting standard\" then Windows will detect it as a normal USB pendrive and not as a ZIP. This is more a \u0027bugfix\u0027 because of weak standards (no real standard, USB-HDD booting is now more the defacto standard without real standardization) but the device behaves still like a normal USB pendrive.  \n\nThat was my point. :smile:   \n"
    },
    {
      "id": "39335",
      "timestamp": "2008-07-08T09:50:12+00:00",
      "author": "was_jaclaz",
      "content": "\u003e Back to the USB-ZIP / USB-FDD emulation question. A USB-ZIP emulation would be to hardware emulate the real old iomega. With a full emulation you would see in Windows a ZIP drive named iomega.  \n\u003e\n\u003e Otherwise if you use a standard USB pendrive and the \"USB-ZIP booting standard\" then Windows will detect it as a normal USB pendrive and not as a ZIP. This is more a \u0027bugfix\u0027 because of weak standards (no real standard, USB-HDD booting is now more the defacto standard without real standardization) but the device behaves still like a normal USB pendrive.  \n\u003e\n\u003e That was my point. :smile:\n\nAn USB stick, if formatted as USB ZIP disk, will make possible on some motherboards to boot from it, let\u0027s call it \"rudimental low-level\" emulation.  \n\nIf you want an USB stick, formatted as USB ZIP disk, to look like a USB ZIP DISK in windows there are \"cosmetic\" changes you can make:  \n[http://www.virtualpl...ml/icn_drv.html](http://www.virtualplastic.net/html/icn_drv.html \"External link\")  \nlet\u0027s call this \"rudimental high-level\" emulation  \n\nOf course the Vid \\\u0026 Pid of the Device will remain the ones \"carved in stone\" in the USB stick hardware.  \n\nIf you want a \"more accurate\" emulation of a ZIP disk, you can write your own Filter Driver or directly a \"USB-stick-driver-that-behaves-like-a-ZIP-disk\", this would be \"complete high-level\" emulation.  \n\nIn other words, a real mode OS like DOS will treat a USB stick just like the USB ZIP disk, as it has no means to \"tell the difference\", i.e. like a normal volume, a \"protected mode\" OS, like Win9x/Me can use a device driver (in this case written \"ad hoc\") to access the device, on NT based systems, thanks to the HAL, EVERYTHING is \"virtual\", so you can use a Filter Driver or a Kernel Driver to make the OS think the USB stick is a ZIP disk.  \n\nSo, I do get your point, but I am still wondering what would be the practical consequences of wasting a few weeks work to build a such a Filter or Kernel driver? :smile:  \n\njaclaz   \n"
    },
    {
      "id": "39345",
      "timestamp": "2008-07-08T11:56:17+00:00",
      "author": "mr_",
      "content": "\u003e An USB stick, if formatted as USB ZIP disk, will make possible on some motherboards to boot from it, let\u0027s call it \"rudimental low-level\" emulation.\nWell, agreed.  \n\n\u003e If you want an USB stick, formatted as USB ZIP disk, to look like a USB ZIP DISK in windows there are \"cosmetic\" changes you can make:  \n\u003e [http://www.virtualpl...ml/icn_drv.html](http://www.virtualplastic.net/html/icn_drv.html \"External link\")  \n\u003e let\u0027s call this \"rudimental high-level\" emulation\nAgreed.  \n\n\u003e Of course the Vid \\\u0026 Pid of the Device will remain the ones \"carved in stone\" in the USB stick hardware.\nYes.  \n\n\u003e If you want a \"more accurate\" emulation of a ZIP disk, you can write your own Filter Driver or directly a \"USB-stick-driver-that-behaves-like-a-ZIP-disk\", this would be \"complete high-level\" emulation.\nRather \"pretty high-level software emulation\", works only in Windows.  \n\n\u003e In other words, a real mode OS like DOS will treat a USB stick just like the USB ZIP disk, as it has no means to \"tell the difference\", i.e. like a normal volume, a \"protected mode\" OS, like Win9x/Me can use a device driver (in this case written \"ad hoc\") to access the device, on NT based systems, thanks to the HAL, EVERYTHING is \"virtual\", so you can use a Filter Driver or a Kernel Driver to make the OS think the USB stick is a ZIP disk.\nYes, a filter driver is possible but needs very much work, to much for me.  \n\n\u003e So, I do get your point, but I am still wondering what would be the practical consequences of wasting a few weeks work to build a such a Filter or Kernel driver? :smile:\nNot talking about such a driver but the point of these features in general. You asked me before, now I have more time and just for your curiosity and interest I am glad to tell you about it. :smile: I hope I remember the most important points I thought about.  \n\nUSB-pendrive or 2.5\" USB-HDD in general:  \nNo external power needed, very small, handy, stable, fast and powerful even in pocket.  \n\nUSB-HDD booting:  \nThis is a bit messed up for DOS or NT booting. The booted device becomes the grub device hd0,0 and device letter C, while the internal IDE/SATA 0,0 and such devices will be a bit messed up with numbers and letters. In DOS it\u0027s a bad idea to load further USB drivers after booting from USB-HDD. On NT like operating systems some applications (harddisk undelete and check) get confused (ok, I doubt it will be different in USB-ZIP mode but unsure).  \n\nUSB-FDD emulation:  \nThis is best if you have legacy software which wants a floppy drive A:, it\u0027s fully bootable (if USB-FDD boot supported) and a 90 % floppy replacement (not just workarround). I like more mature replacement solutions rather then fiddling. Also great for creating bootable disk (dos, backup, virusscan, special purpose, server, recovery...). Very good compatibility.  \n\nUSB-ZIP emulation:  \nAlso good compatibility and good for a full collection of tools for recovery, special purpose and such. Gives you drive letter A:, therefore no mess with displaced drive letters. With USB-FDD and USB-ZIP you can also load USB drivers in DOS without creating a disaster after booting already from USB because these devices are ignored by the drivers. This seams to be also the best place for a (emergency) bootmanager for multibooting.  \n\nUSB-CDROM emulation:  \nGreat for \u0027netbooks\u0027 (very small and limited notebooks) without real CD-ROM, you can use it to install operating systems without CD and without CD-ROM in a very easy way. Also nice for portable use (CD autostart is working and readonly). Any special CD\u0027s can be also \u0027burned\u0027 onto such a device, also protected mode stuff possible.  \n\nThe spreading of this features is not very widespread. Very little USB-pendrives support it and currently no known USB-HDD enclosure. Therefore I think I need to live with the known workarrounds, it was worth to ask in the forums for knowledge anyway.   \n"
    },
    {
      "id": "39356",
      "timestamp": "2008-07-08T12:35:35+00:00",
      "author": "was_jaclaz",
      "content": "\u003e USB-HDD booting:  \n\u003e This is a bit messed up for DOS or NT booting. The booted device becomes the grub device hd0,0 and device letter C, while the internal IDE/SATA 0,0 and such devices will be a bit messed up with numbers and letters. In DOS it\u0027s a bad idea to load further USB drivers after booting from USB-HDD. On NT like operating systems some applications (harddisk undelete and check) get confused (ok, I doubt it will be different in USB-ZIP mode but unsure).\n\nMaybe one can do some tricks with grub4dos re-mapping of drives...:smile:  \n\nAlso, though I never tried it, for DOS, what happens if you boot from USB device to grub4dos, map a floppy image to mem, and before booting it you remove the Active flag of the partition or set partitions as hidden?Drive lettering should not be affected :smile:  \n\n\u003e USB-FDD emulation:  \n\u003e This is best if you have legacy software which wants a floppy drive A:, it\u0027s fully bootable (if USB-FDD boot supported) and a 90 % floppy replacement (not just workarround). I like more mature replacement solutions rather then fiddling. Also great for creating bootable disk (dos, backup, virusscan, special purpose, server, recovery...). Very good compatibility.\n\nFor DOS, you can easily use grub4dos to have a floppy image as fd0, which will get A:\\\\.  \n\nFor NT based (PE\u0027s of any kind) you can use migrate.inf or setupreg.hiv to have a partition as A:\\\\ or B:\\\\, again not perfect, but a working workaround.  \n\n\u003e USB-CDROM emulation:  \n\u003e Great for \u0027netbooks\u0027 (very small and limited notebooks) without real CD-ROM, you can use it to install operating systems without CD and without CD-ROM in a very easy way. Also nice for portable use (CD autostart is working and readonly). Any special CD\u0027s can be also \u0027burned\u0027 onto such a device, also protected mode stuff possible.\nAbout CD-ROM enulation, the matter is different, there EXIST devices working like \"double head\" CD-ROM and USB stick, besides the U3 concept:  \n[http://www.boot-land...?showtopic\u003d4577](http://www.boot-land.net/forums/?showtopic\u003d4577 \"External link\")  \n\nAnd this Manufacturer:  \n[http://www.udrw.com/en/index.php](http://www.udrw.com/en/index.php \"External link\")  \n[http://www.udrw.com/en/tech/index.php](http://www.udrw.com/en/tech/index.php \"External link\")  \n\noffers them.  \n\n:smile:  \n\njaclaz   \n"
    },
    {
      "id": "39360",
      "timestamp": "2008-07-08T13:07:52+00:00",
      "author": "mr_",
      "content": "addition about my last posting:  \n\nUSB-FDD emulation: Might be good for BIOS update without legacy FDD. USB-FDD is legitimate and intended by BIOS update providers (I guess so), bootdisk to bootusb not so much (and beware of software emulated FDD\u0027s like memdisk for this purpose).  \n\n\u003e Maybe one can do some tricks with grub4dos re-mapping of drives...:smile:  \n\u003e\n\u003e Also, though I never tried it, for DOS, what happens if you boot from USB device to grub4dos, map a floppy image to mem, and before booting it you remove the Active flag of the partition or set partitions as hidden?Drive lettering should not be affected :smile:\n\u003e For DOS, you can easily use grub4dos to have a floppy image as fd0, which will get A:\\\\.\nI done that. Grub4dos floppy emulation works well as long you do not use some protected mode stuff. Biggest disadvantage of these images is that changes are virtual and not write back to the image and therefore hard to update.  \n\n\u003e About CD-ROM enulation, the matter is different, there EXIST devices working like \"double head\" CD-ROM and USB stick, besides the U3 concept:  \n\u003e [http://www.boot-land...?showtopic\u003d4577](http://www.boot-land.net/forums/?showtopic\u003d4577 \"External link\")\nThe CD-ROM of grub4dos emulation works very well for small real mode iso\u0027s. For bigger iso\u0027s (out of mem) or protected mode stuff (driver has no longer access) it\u0027s not working well.  \n\n\u003e And this Manufacturer:  \n\u003e [http://www.udrw.com/en/index.php](http://www.udrw.com/en/index.php \"External link\")  \n\u003e [http://www.udrw.com/en/tech/index.php](http://www.udrw.com/en/tech/index.php \"External link\")\nInteresting product.   \n"
    },
    {
      "id": "192659",
      "timestamp": "2015-05-15T19:49:42+00:00",
      "author": "ibach",
      "content": "Jaclaz... Looking at this old topic I\u0027ve remembered some of your good answers...\n\nPlease look at this one for me if you find time...\n\nI did something to my samsung HDD few years ago, when making bootable USB HDD with multiple partitions.  \nI have erased the drive completely (i did that few times with different software even used boootit to write 000 to it)  \nWhen I plug the drive to the computer standard SATA port it is recognised by windows as HDD.  \nWhen pluged in USB port, it is not seen as HDD, windows cannot acess the drive at all.  \nWhen in SATA port, if I try Runtime Software like get data back on it, it is listed as FD1!!!  \n\nI think I have written something to the disk at low level to be able to boot it as big FDD, but that part appears to be hidden too good.  \nDoes anyone renmember what is it i might have used to do that?!  \nHow to get the disk to be normal HDD again?!\n\nI have allready posted this sa thread on :\n\n[http://www.911cd.net...t\u003d0#entry176242](http://www.911cd.net/forums//index.php?showtopic\u003d25941\u0026st\u003d0#entry176242 \"External link\")\n\n**Edited by ibach, 15 May 2015 - 07:50 PM.**\n"
    },
    {
      "id": "192667",
      "timestamp": "2015-05-16T09:53:33+00:00",
      "author": "Wonko the Sane",
      "content": "Jaclaz just replied to your post on 911CD. :smile:\n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    }
  ]
}