{
  "id": "17688",
  "title": "3rd party boot manager from CD (?)",
  "isPinned": false,
  "isFirstTopic": false,
  "isLocked": false,
  "tags": [],
  "forumNotes": [
    {
      "id": "162306",
      "timestamp": "2012-10-25T22:07:31+00:00",
      "author": "mireazma",
      "content": "Hello.  \nFor almost a week I\u0027ve been looking for a boot manager to provide a few general simple, straight forward tasks, like:  \n1. To be run from CD  \nThe idea is to leave MBR or anything on HDD unmodified, thus making the manager optional and it wouldn\u0027t require any uninstallation process. It would be like a \"key\" for special configuration boots.  \n2. To auto detect (and maybe label-identify) partitions, both bootable and non-bootable  \nThis way the CD works even after modifying partitions.  \n3. To be able to true hide selected partitions  \nI need other bootable or non-bootable partitions hidden except for the intended ones. I\u0027ve read that just adding 10h to the partition isn\u0027t enough for access denial in Win XP and up. So true hiding.  \n4. GUI  \nI want to select a booting profile from a list, I don\u0027t want to write prompt commands to boot. I know profiles can\u0027t be saved on CD\u0027s but maybe there are boot managers that work from USB sticks. Or at least they\u0027d have a fast way to decide what partitions to be available/hidden and the booting partition, even if I\u0027d have to go through it every time I boot from CD/USB  \n\nI\u0027ve tried Plop and wasted a CD (not a fortune but still :smile:), cause it doesn\u0027t autodetect partitions and I have to manually find and assign them plus it can\u0027t save. GAG doesn\u0027t work on CD, BootIt Bare Metal messes with MBR converting it to EMBR and it has to be installed on HDD, grub4dos is the closest so far but there\u0027s no way I could grasp the prompt commands.  \n\nLong story put short, I\u0027d be the happiest man if there would be a simple ISO to burn to CD that when booted from, it shows a boot menu with detected partition list, with checkmarks for \"hidden\" and when Enter is hit, to boot from the currently selected one!   \n"
    },
    {
      "id": "162308",
      "timestamp": "2012-10-25T22:45:08+00:00",
      "author": "steve6375",
      "content": "1 and 3 are contradictory - you **have** to modify the hard disk (partition tables) in order to hide a partition when the OS boots.  \n\nFor testing, you could use a grub4dos flash disk (rather than a CD) and when it is all working then burn a CD.  \n\nSo is the intention to list all partitions on the disk (do you include logical partitions in this?), be able to mark some of the partitions as hidden so they are not seen by the booting OS, and then boot to a chosen partition?  \nDo you only want bootable partitions to be shown? If so, how should the boot utility discern what partitions are bootable and what ones are not?  \n\ngrub4dos can look for files like /bootmgr and /ntldr on partitions and give a menu for each of these. It can also mark some partitions as hidden (not sure if this works - I think changing 07 NTFS to 27 hidden NTFS works though??). But how would you detect **bootable** partitions which have weird and wonderful versions of say, linux on them?   \n"
    },
    {
      "id": "162312",
      "timestamp": "2012-10-26T02:34:38+00:00",
      "author": "MedEvil",
      "content": "There is Bootus. Don\u0027t know if it can run from CD, but it did run fine from a floppy and fullfills all your other requirements.  \n\nExcept, like steve6375 already said above, you can have true hiding or untouched MBR, but not both.  \n\n![:cheers:](http://reboot.pro/public/style_emoticons/default/cheers.gif)   \n"
    },
    {
      "id": "162320",
      "timestamp": "2012-10-26T08:52:50+00:00",
      "author": "Wonko the Sane",
      "content": "You use grub4dos, you write your own mind-boggingly complex menu.lst for it.  \nI don\u0027t really see the problem.  \nOf course hiding partitions works, of course a byte in the MBR partition table of the disk needs to be changed, and of course the result of the \"hide\" command is to add 0x10 to the partition ID (for the \"common\" MS ones):  \n[http://www.win.tue.n...on_types-1.html](http://www.win.tue.nl/~aeb/partitions/partition_types-1.html \"External link\")  \nWith \\*some\\* Operating Systems only, you can actually \"virtualize\" the MBR, only it simply won\u0027t work for the most common ones, but you can effectively \"hide\" in the sense of \"avoid mounting\" or \"not assign a drive letter\" from within the OS, then.  \nFor a more complex approach, see this:  \n\u003chttp://reboot.pro/7138/\u003e  \n\n![:cheers:](http://reboot.pro/public/style_emoticons/default/cheers.gif)  \nWonko   \n"
    },
    {
      "id": "162326",
      "timestamp": "2012-10-26T12:16:25+00:00",
      "author": "mireazma",
      "content": "Thank you guys.  \nNow that you mentioned the contradiction I wonder how could I miss it -- OS gets info from the partition table..  \nBut maybe yet another stupid question: does the loader have to be installed on HDD as well or just modifying partition table with hidden/booted partition in MBR will do and the manager itself stays on CD? Just asking with other boot managers/partition managers writing MBR afterwards, in mind.  \nSteve, I want ALL partitions be them primary, logical, NTFS, linux etc. but doesn\u0027t grub4dos know about linux?  \nWonko, I want true hiding.  \nAt least I slimmed the choice palette to either studying for a license in grub4dos (repeating myself \"USB is cool\") :smile: or considering getting a floppy disc unit, like MedEvil suggested (man, how come they haven\u0027t found a replacement already? It\u0027s 2012, dammit. I suspect a marketing conspiracy :smile:)   \n"
    },
    {
      "id": "162328",
      "timestamp": "2012-10-26T13:00:45+00:00",
      "author": "steve6375",
      "content": "grub4dos can execute batch files - so I suggest the way to go would be to use a grub4dos menu.lst file to execute a batch file.  \nThe batch file then enumerates all the partitions and decides what choices it wants to offer.  \nYou can then either make a \u0027dos text-based\u0027 menu whilst still in the grub4dos command line shell, or get the batch file to make a new grub4dos menu.lst file in a ramdrive (md) and then load the new ramdrive menu so that the user has a nice grub4dos boot menu (with perhaps a nice splashscreen?).  \n\nFor an example of how to run a grub4dos batch file that makes and runs a new ramdrive menu.lst file - see the [Easy2Boot tutorial #72](http://sites.google.com/a/rmprepusb.com/www/tutorials/72---easyboot---a-grubdos-multiboot-drive-that-is-easy-to-maintain \"External link\") on my site and look at the automenu.bat file in the download.Using a similar technique, you could look for boot files on all partitions and construct a new menu.  \n\nThe only tricky but is how to have a GUI that lets the user hide or unhide any partition he likes before booting one of them - if that is what you want?  \nOr do you just want to hide all other partitions except the booting partition?  \n\nI don\u0027t think you have explained yet exactly how you envisage using this boot cd/usb flash drive - is it on a variety of systems or just one? Is it OK to make partitions hidden by tweaking the partition tables on the target drive (knowing that they will be hidden permanently if you don\u0027t unhide them again afterwards?).   \n"
    },
    {
      "id": "162336",
      "timestamp": "2012-10-26T17:03:30+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e But maybe yet another stupid question: does the loader have to be installed on HDD as well or just modifying partition table with hidden/booted partition in MBR will do and the manager itself stays on CD? Just asking with other boot managers/partition managers writing MBR afterwards, in mind.  \nNot at all \"stupid\", only showing how you miss the very basics.  \n\nA MBR has FOUR \"fields\":\n\n* from 0 to 439 \\\u003c- this is CODE  \n* from 440 to 443 \\\u003c- this is Disk Signature, VITAL to boot any NT based system from that hard disk, ignored by any other OS  \n* from 446 to 509 \\\u003c- this is DATA, i.e. the partitin table, mqade of 4x16 entries  \n* from 510 to 511 \\\u003c- this is the two bytes \"magic bytes\" they should be 55AA and should NEVER be changed to anything else.\n\nand yes, there are two bytes between end of disk signature and beginning f partition table that are never used and are always 0000.  \n\n\u003cbr /\u003e\n\ngrub4dos can stay on CD, USB stick (\\*wherever\\*) and completely ignores the CODE, but needs the DATA.  \nWith the \"right\" DATA, it can boot the hard disk from CD, USB, \\*wherever\\* bypassing completely the MBR CODE.  \nAs a matter of fact you can have a (very bland) from of security by having a MBR with NO CODE at all that will be not bootable unless you use an \"external\" bootmanager such as grub4dos (but not only it).  \nOf course, if you chainload the MBR, also the CODE will be needed.  \nIn any case, as soon as an OS loads, it ***might*** need to access the MBR partition table, and this is the reason why changes needs to be made to it.  \n\n\u003e Wonko, I want true hiding.  \nAnd you completely avoided reading the given link ![:whistling:](http://reboot.pro/public/style_emoticons/default/happy22.gif):  \n\u003chttp://reboot.pro/7138/\u003e  \nwhich is EXACTLY about \"true\" hiding, actually completely removing the DATA (partition table entries) that you want NOT to be seen by the booted OS.  \n\nIMHO the use of a \"grub4dos batch\" is completely UNneeded, if I get it right you have a number of possible scenarios and there is not any need to make things more complex than needed, you just make a number of suitable entries, and you choose the one that you want.  \n\n\u003cbr /\u003e\n\n![:cheers:](http://reboot.pro/public/style_emoticons/default/cheers.gif)  \nWonko   \n"
    },
    {
      "id": "162359",
      "timestamp": "2012-10-26T22:33:19+00:00",
      "author": "Icecube",
      "content": "Gujin bootloader might be worth a look too:  \n[http://sourceforge.net/projects/gujin/](http://sourceforge.net/projects/gujin/ \"External link\")  \n\n* autodetect \\[removable\\] disks and adapt to BIOS order\n* boots Linux kernels by searching their usual names in /boot\n* display a graphic environment with mouse to select the kernel\n* boots device images like CDROM \\*.iso or memtest.bin in /boot\n* boots real CDROM and chain-loads Windows\n* can be installed on floppy, USB drives, partitions, MBR or CD/DVD\n* can be used over a serial line\n\nIt will certainly not care if you change your partition layout.  \nIt probably will show hidden partitions too.   \n"
    },
    {
      "id": "162381",
      "timestamp": "2012-10-27T11:35:00+00:00",
      "author": "mireazma",
      "content": "I\u0027m grateful for all the help I\u0027m getting here.  \n\nI wasn\u0027t too specific about what I\u0027d like so to give room to possibilities but I may have uselessly complicated things. If I were to be exact I would never ask for more than:  \n\nI have 2 SATA HDD\u0027s. One has 3 partitions: Win 7, Linux, data. The other has 2: Win 7, data. It doesn\u0027t matter for me which one is HDD0 Linux is not installed yet, I have to check the partition requirements first and see the order on disc Win 7, linux or the other way around.  \nHere\u0027s the idea: the boot menu on the CD (preferably USB) displays 3 (boot) entries: Win 7 A, Linux A, Win 7 B.  \nThe trick is when booting any A OS, HDD A can\u0027t access HDD B. Booting B OS I can access HDD A.  \nThat\u0027s about what I\u0027d like to have. And the fact that I want it on CD/USB is for security reasons, as A OS\u0027s will be of very low security and I\u0027m afraid they might corrupt (or silently modify) MBR.  \n\nI\u0027ll take time to give all the options a deeper look to get this done ![:mellow:](http://reboot.pro/public/style_emoticons/default/mellow.png)  \n\nEDIT:  \nI don\u0027t want to go in BIOS to make active/inactive HDD B every time I boot. I know I could consider doing this but come on...   \n\n**Edited by mireazma, 27 October 2012 - 11:39 AM.**\n"
    },
    {
      "id": "162382",
      "timestamp": "2012-10-27T12:42:32+00:00",
      "author": "Wonko the Sane",
      "content": "And - again - this is a very simple setup.  \n\nYou can use the hide/unhide features of grub4dos allright, but there is actually no real \"need\" for this, in the sense that you can set the OS\u0027s on \"A\" to NOT mount the volumes on \"B\" (this way all MBR\u0027s will never be changed), and limit the access to disk management/mount manager/diskpart.  \n\nThat is if the idea is to not mess things up \"accidentally\".  \n\nThe \"security\" could be given to the systems by removing the \"boot files\" from B, as an example using ~~Vista~~ ![:ph34r:](http://reboot.pro/public/style_emoticons/default/scared9.gif) Windows 7 boot floppy image:  \n[http://www.multiboot....uk/floppy.html](http://www.multibooters.co.uk/floppy.html \"External link\")  \nand having actually \"neutered\" bootsectors.  \nThe CD or USB may have anyway a copy of the original MBR for restore purposes.  \nOr (but again this would mean modify the MBR) you could restore a valid MBR on disk B only when you boot it through the USB or CD and before \"switching\" to normal use, you could replace it with a \"bogus\" MBR, let\u0027s say that of a disk partitioned with ID\u0027s that Windows 7 on A cannot understand (and that Linux also fails to access) let\u0027s say 3C or 78 and with \"wrong\" partition data, or simply a blank partition table. (this would avoid casual users to access the contents, but still if they have access to disk management they could delete/re-partition, etc.).  \n\n![:cheers:](http://reboot.pro/public/style_emoticons/default/cheers.gif)  \nWonk   \n"
    }
  ]
}