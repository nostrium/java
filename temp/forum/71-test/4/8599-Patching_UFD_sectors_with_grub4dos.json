{
  "id": "8599",
  "title": "Patching UFD sectors with grub4dos",
  "isPinned": false,
  "isFirstTopic": false,
  "isLocked": false,
  "tags": [],
  "forumNotes": [
    {
      "id": "73270",
      "timestamp": "2009-07-31T20:19:40+00:00",
      "author": "online",
      "content": "I usually format my UFD with more than 1 partition with XP Disk Management Console.  \nThe firts reason is due to the fact that I almost always run Full XP from the 2nd partition of my UFD, then encrypting (with TrueCrypt) my system drive.  \nAnd to the fact... that is on top of my *signature* .  \nThe second reason is due to either so many reports and my (little) experience pointing to its (MMC) greater booting compatibility (please read: bootability).  \nFurthermore I can freely and handly choose the most appropriate size of my partitions depending on different needs.  \nAfterwards also I reserve the 1st partition to a lot of img, ima, dsk and iso loading them through grub4dos.  \n\nSo, since my personal preferences are as far manual/freedom-oriented as possible, I actually still prefer to format my UFD under XP (contemporarely using a Filter Driver) with MMC (Microsoft Management Console) and with at least 2 partitions.  \n\nAlso, I like to use - as far as possible - the Windows default parameters for file-systems, partition maximum size, clusters size, and so on.  \n\nWell, after reading an interesting reply of wimb [here](http://www.boot-land.net/forums/index.php?s\u003d\u0026showtopic\u003d8528\u0026view\u003dfindpost\u0026p\u003d73238 \"External link\"), I thought about this topic that could possibly collect/share application\u0027s requests and/or pointings for (further) tool\u0027s deployment and a kind of *summa* of patches, ideas and findings, interesting news and related issues.  \n\nAbout the patches that I can remember there are (at least) the following  \n\n* [**wimb** statement/findings about MBR \\\u0026 BS](http://www.boot-land.net/forums/index.php?s\u003d\u0026showtopic\u003d5306\u0026view\u003dfindpost\u0026p\u003d66264 \"External link\")\n* [**cdob** statement/findings about MBR \\\u0026 BS](http://www.boot-land.net/forums/index.php?s\u003d\u0026showtopic\u003d5306\u0026view\u003dfindpost\u0026p\u003d66515 \"External link\")\n* [**ktp** statement/findings about MBR \\\u0026 BS](http://www.boot-land.net/forums/index.php?s\u003d\u0026showtopic\u003d8528\u0026view\u003dfindpost\u0026p\u003d72651 \"External link\")\n\n*Edit: please note that \"cdob and ktp statement/findings\" really result as the same, and they derive - as already mentioned in other posts/boards - from [here](http://blog.clemens.endorphin.org/2007/12/removing-chs-based-access-from-windows_3170.html \"External link\")* .  \n\nAbout the developers/tools that I can remember (excluding at least for the moment [Bean123](http://www.boot-land.net/forums/index.php?s\u003d\u0026showtopic\u003d7932\u0026view\u003dfindpost\u0026p\u003d67032 \"External link\") and fuwi) as in my opinion possibly oriented to this specific stuff there obviously are (strictly in alphabetical order)  \n\n* [*grandpa* -:tongue:-**jaclaz** / AnyHow](http://any_where.net \"External link\")\n* [**steve6375** / RMPrepUSB](http://www.boot-land.net/forums/index.php?s\u003d\u0026showtopic\u003d7739\u0026view\u003dfindpost\u0026p\u003d64884 \"External link\")\n* [**wimb** / U_XP_SET](http://www.boot-land.net/forums/index.php?s\u003d\u0026showtopic\u003d5306\u0026view\u003dfindpost\u0026p\u003d40666 \"External link\")\n\nCurrently, the UFD Patching Tool of my dreams is which that allows me - after formatting my UFD with MMC - to patch its MBR and its BootSector with the best known \"compatible\" patches and the most effective ones achieved with the great help of all of us.  \nAnd possibly in one single, simple and strictly-dedicated tool.  \nDoes this interest somehow any directly *interested* guys/developers too?  \nHoping in the affirmative...  \n\nThank you all. ![:idea:](http://reboot.pro/public/style_emoticons/default/idea.gif)   \n"
    },
    {
      "id": "73310",
      "timestamp": "2009-08-01T07:49:02+00:00",
      "author": "was_jaclaz",
      "content": "Not what you asked :tongue: , but an idea that you might like (or completely fail to like) :smile:.  \n\nWhy instead of asking other people to do the work for you, you don\u0027t start doing something yourself?  \n\nI mean, you know most if not all the \"tricks\" found here and there.  \n\nWhy don\u0027t you try putting all of them together? I mean not assembling only the links to them, but also giving some background and explanation for each, in order to have a single document covering the topic (and that could later possibly be added to the newly founded library?  \n[http://www.boot-land...?...ic\u003d8583\\\u0026hl\u003d](http://www.boot-land.net/forums/index.php?showtopic\u003d8583\u0026hl\u003d \"External link\")  \n\nThen, since what you are looking for is more a \"post-processor\" than an actual formatting utility, the single patches/changes could be, once \"found\" and \"assembled\" together, implemented in a script for an existing engine, a very suitable app could be Tiny Hexer, that has a very nice scripting language.  \n\n![:idea:](http://reboot.pro/public/style_emoticons/default/idea.gif)  \n\njaclaz   \n"
    },
    {
      "id": "73320",
      "timestamp": "2009-08-01T11:06:48+00:00",
      "author": "ktp",
      "content": "@online  \nWhy do not use grubinst_gui.exe (which requires grubinst.exe)? I always use it. Unless you prefer bootlace.com :-).   \n"
    },
    {
      "id": "73332",
      "timestamp": "2009-08-01T12:40:29+00:00",
      "author": "steve6375",
      "content": "Hi  \nRMPRepUSB has some patched VBR code already. If you try RMPRepUSB and find that it does not work, but that you can make it work with a patch, please let me know and I will put the patch in as standard.  \n\nI appreciate RMPrepUSB does not create multiple partitions, but it could with a bit of work (if enough demand). However, you can create a smaller bootable partition and then create the other partitions with WIndows DIsk Manager and filter driver?  \n\nS   \n"
    },
    {
      "id": "73469",
      "timestamp": "2009-08-02T21:54:25+00:00",
      "author": "online",
      "content": "@jaclaz  \n\nGreat reply, very appreciated: I will try to figure out a way, many thanks! ![:idea:](http://reboot.pro/public/style_emoticons/default/idea.gif)   \n\n\u003cbr /\u003e\n\n@ktp  \n\nMany thanks for your suggestion, I take it into account.  \nAnd... if you find other interesting/improving patches, please post here again. :tongue:   \n\n\u003cbr /\u003e\n\n@steve6375  \n\nI like your RMPrepUSB and I\u0027m just trying your latest release [1.9.75](http://www.datafilehost.com/download-15a9babe.html \"External link\"). :tongue:   \n\nWell, if I format with RMPrepUSB my UFD (creating the 2nd partition) then under MMC it is not visible even if I assign a drive letter under Paragon Partition Manager and/or Acronis Disk Director Suite (they see it, indeed).  \n\nI appreciate your utility (and your reply) also when I can set a size for my (1st) partition... then with MMC and a Filter Driver however I can do almost what I want... so I will do more trials with it for a better experience (meanwhile trying to collect - and to compare - the further best patches possibly existing out of there).  \nMany thanks. :smile:  \n\n\u003cbr /\u003e\n\n@All  \n\nPlease, post here your findings about USB Flash Drive MBR \\\u0026 BS patching to improve your UFD bootability.  \nThank you! :tongue:   \n"
    },
    {
      "id": "73625",
      "timestamp": "2009-08-04T09:28:43+00:00",
      "author": "online",
      "content": "@jaclaz  \n\nAbout the topic, I was thinking: it would be even possible to use the command \"write\" of grub4dos (in a similar way compared to the \"cmdcons\" one) in order to set some (hex) bytes in the MBR and/or in the BootSector of my UFD through the \"menu.lst\"? ![:idea:](http://reboot.pro/public/style_emoticons/default/idea.gif)  \n\nJust for fun (?!) I tried to do that with something like the following (placed at the beginning of the \"menu.lst\", after the setkey\u0027s command)  \n\n```\nwrite \u0026#40;hd0,0\u0026#41; 0x7C07 0x00736E6F\n```\n\nand then it just writes \"0x7C07 0x00736E6F\" :tongue: at the beginning of the bootsector (offset 0x00) of my UFD, but I do not know if it is even possible to set an address (since it does not seem to recognize it) and even if it could ever work (possibly without side-effects too)...  \n\nHow in your (appreciated) opinion? :smile:   \n"
    },
    {
      "id": "73632",
      "timestamp": "2009-08-04T09:54:43+00:00",
      "author": "was_jaclaz",
      "content": "Rather than \"write\" you can use \"dd\". ![:idea:](http://reboot.pro/public/style_emoticons/default/idea.gif)  \n\nRead here:  \n[http://www.boot-land...?...\u003d6119\\\u0026st\u003d35](http://www.boot-land.net/forums/index.php?showtopic\u003d6119\u0026st\u003d35 \"External link\")  \nand the README_GRUB4DOS.txt  \n\nTake your time on this thread:  \n[http://www.boot-land...?...ic\u003d7138\\\u0026hl\u003d](http://www.boot-land.net/forums/index.php?showtopic\u003d7138\u0026hl\u003d \"External link\")  \n\n:tongue:  \n\njaclaz   \n"
    },
    {
      "id": "73638",
      "timestamp": "2009-08-04T10:06:22+00:00",
      "author": "online",
      "content": "\u003e Rather than \"write\" you can use \"dd\". :tongue:\nThank you so very much! ![:idea:](http://reboot.pro/public/style_emoticons/default/idea.gif)   \n\nI will try it soon, and then I will report here my findings/results... :smile:   \n"
    },
    {
      "id": "73826",
      "timestamp": "2009-08-06T10:15:39+00:00",
      "author": "online",
      "content": "The gub4dos\u0027s \"dd\" way does work. :tongue:  \n\nProbably, the only way to patch your UFD without using any (additional/manual) tool... ![:idea:](http://reboot.pro/public/style_emoticons/default/idea.gif)   \n\nHere is how I did:  \nconsidering that \"dd\" command needs a file from which to start to **read** and another one - or a **device** - on which to end to **write** the first thing that I did was to create a \"template\" file (from which to read) as reference.  \nSo, open your Physical Drive (UFD) with your Hex Editor and copy just the first 32.772 bytes of it (that\u0027s until the 0x8004 offset - 63 sectors) or create a new file with the above size (that will include either the whole MBR \\\u0026 BootSector in size).  \nPlease, note that I\u0027ve just noticed that the FAT32 BootSector created with XP MMC results as ending to 0x8003 offset (not to 0x7FFF offset - as expected? :smile: ), so it is 516 bytes in size? (I thought it had to be just 512 bytes as the MBR :tongue:)...  \nHowever, then paste it in a new file and save it naming it \"patch.dat\".  \nOpen that file with your hex editor and \"patch\" all the occurrences above mentioned then save it.  \nNow in your gub4dos\u0027s menu.lst copy the following entries just at the beginning (without **title** ), note that the following example is referring to a FAT32 previous formatting and to all the patches described in the firts post just applied, and copy the \"patch.dat\" file in its appropriate directory (the same \"patch.dat\" file and the same entries in menu.lst - that\u0027s the same patches - should work for any UFD).  \n\n```\ndd if\u003d\u0026#40;hd0,0\u0026#41;/boot/fat32x.dat of\u003d\u0026#40;hd0\u0026#41; bs\u003d1 count\u003d1 skip\u003d450 seek\u003d450\n\n#dd if\u003d\u0026#40;hd0,0\u0026#41;/boot/fat32x.dat of\u003d\u0026#40;hd0\u0026#41; bs\u003d1 count\u003d1 skip\u003d466 seek\u003d466\n\n#dd if\u003d\u0026#40;hd0,0\u0026#41;/boot/fat32x.dat of\u003d\u0026#40;hd0\u0026#41; bs\u003d1 count\u003d1 skip\u003d482 seek\u003d482\n\n#dd if\u003d\u0026#40;hd0,0\u0026#41;/boot/fat32x.dat of\u003d\u0026#40;hd0\u0026#41; bs\u003d1 count\u003d1 skip\u003d498 seek\u003d498\n\ndd if\u003d\u0026#40;hd0,0\u0026#41;/boot/fat32x.dat of\u003d\u0026#40;hd0\u0026#41; bs\u003d1 count\u003d1 skip\u003d32320 seek\u003d32320\n\ndd if\u003d\u0026#40;hd0,0\u0026#41;/boot/fat32x.dat of\u003d\u0026#40;hd0\u0026#41; bs\u003d1 count\u003d4 skip\u003d32486 seek\u003d32486\n```\n\n\u003cbr /\u003e\n\nNow, every time you boot your UFD then the \"patching\" will be effective and \"dd\" will write **directly** on your UFD device.  \nObviously you can remove or comment those entries if/when you do not more need.  \nNote that \"bs\u003d1\" parameter is needed in order to read the \"template\" file *byte-by-byte* .  \n\nThis way appears as very simple and effective (and potentially ***dangerous*** : note that if you patch with \"0C\" an inexistent partition in the Partition Table then your device will be not more accessible (and a BSOD could occur) under Windows with Filter Driver installed due to the consequent errors in its Partition Table; so be care to patch your device just for the existing partitions), it does not need any other tool and it may be useful also in those cases when \"something\" possibly re-writes in some specific addresses your UFD\u0027s MBR (with the Partition Table inside) and/or BootSector.  \n\nEnjoy! :tongue:   \n"
    },
    {
      "id": "73837",
      "timestamp": "2009-08-06T15:38:47+00:00",
      "author": "was_jaclaz",
      "content": "The FAT32 \"bootsector\" is actually several sectors long.   \nA sector is 512 bytes.   \nThe 4 additional bytes you have \"noticed\" are the 4 bytes beginning of the second sector.  \n\nWouldn\u0027t it be better to use (hd0,0) as target of the dd and avoid the need of the 32256 offset?   \n\nI mean not \"everything\" has 63 hidden sectors.  \n\njaclaz   \n"
    },
    {
      "id": "73842",
      "timestamp": "2009-08-06T16:52:52+00:00",
      "author": "online",
      "content": "\u003e The FAT32 \"bootsector\" is actually several sectors long.   \n\u003e A sector is 512 bytes.   \n\u003e The 4 additional bytes you have \"noticed\" are the 4 bytes beginning of the second sector.\nI will notice that, too: many thanks for your reply.   \n"
    },
    {
      "id": "73845",
      "timestamp": "2009-08-06T17:22:40+00:00",
      "author": "was_jaclaz",
      "content": "While you are at experimenting, what happens if first line of menu.lst (beginning with a #) contains the values to be used as replacement?  \n\na typical command would become then something like::  \n\n```\ndd if\u003d\u0026#40;\u0026#41;/menu.lst of\u003d\u0026#40;hd0\u0026#41; bs\u003d1 count\u003d1 skip\u003d1 seek\u003d450\n```\n\n\u003cbr /\u003e\n\nand the data would be self contained.  \n\nOne could also insert :tongue:, say, 16 lines of 17 characters each, something like  \n\n```\n0001 0203 0405 0607 0809 0A0B 0C0D 0E0F 10 - 0123456789ABCDEF0\n\n----------------------------------------------------------------------\n\n  0x00\u0026#58; 2300 0102 0304 0506 0708 090A 0B0C 0D0E 0F - #................\n\n  0x11\u0026#58; 2310 1112 1314 1516 1718 191A 1B1C 1D1E 1F - #................\n\n  0x22\u0026#58; 2320 2122 2324 2526 2728 292A 2B2C 2D2E 2F - # !\u0026#34;#$%\u0026\u0026#39;\u0026#40;\u0026#41;*+,-./\n\n  0x33\u0026#58; 2330 3132 3334 3536 3738 393A 3B3C 3D3E 3F - #0123456789\u0026#58;;\u003c\u003d\u003e?\n\n...\n```\n\nAnd have available for patching all 256 Hex values.  \n\n![:idea:](http://reboot.pro/public/style_emoticons/default/idea.gif)  \n\njaclaz   \n"
    },
    {
      "id": "73852",
      "timestamp": "2009-08-06T18:38:06+00:00",
      "author": "online",
      "content": "\u003e what happens if first line of menu.lst (beginning with a #) contains the values to be used as replacement?\nSorry if I didn\u0027t understand: do you mean one of the following \"#\"? ![:idea:](http://reboot.pro/public/style_emoticons/default/idea.gif)   \n\n\u003e \u003cbr /\u003e\n\u003e\n\u003e ```\n\u003e dd if\u003d\u0026#40;hd0,0\u0026#41;/boot/fat32x.dat of\u003d\u0026#40;hd0\u0026#41; bs\u003d1 count\u003d1 skip\u003d450 seek\u003d450\n\u003e\n\u003e #dd if\u003d\u0026#40;hd0,0\u0026#41;/boot/fat32x.dat of\u003d\u0026#40;hd0\u0026#41; bs\u003d1 count\u003d1 skip\u003d466 seek\u003d466\n\u003e\n\u003e #dd if\u003d\u0026#40;hd0,0\u0026#41;/boot/fat32x.dat of\u003d\u0026#40;hd0\u0026#41; bs\u003d1 count\u003d1 skip\u003d482 seek\u003d482\n\u003e\n\u003e #dd if\u003d\u0026#40;hd0,0\u0026#41;/boot/fat32x.dat of\u003d\u0026#40;hd0\u0026#41; bs\u003d1 count\u003d1 skip\u003d498 seek\u003d498\n\u003e\n\u003e dd if\u003d\u0026#40;hd0,0\u0026#41;/boot/fat32x.dat of\u003d\u0026#40;hd0\u0026#41; bs\u003d1 count\u003d1 skip\u003d32320 seek\u003d32320\n\u003e\n\u003e dd if\u003d\u0026#40;hd0,0\u0026#41;/boot/fat32x.dat of\u003d\u0026#40;hd0\u0026#41; bs\u003d1 count\u003d4 skip\u003d32486 seek\u003d32486\n\u003e ```\n\u003e\n\u003e \u003cbr /\u003e\n\u003e\n\u003cbr /\u003e\n\n"
    },
    {
      "id": "73893",
      "timestamp": "2009-08-07T08:41:57+00:00",
      "author": "was_jaclaz",
      "content": "I mean, if you have to write 0B to offset 450 of the MBR, you can have the menu.lst starting with a line containing the \"#\" sign, which should be the thing telling grub4dos to NOT parse anything after it, and the actual binary value of 0B, like:  \n\n```\n0001 0203 0405 0607 0809 0A0B 0C0D 0E0F - 0123456789ABCDEF\n\n----------------------------------------------------------------\n\n0x00\u0026#58; 230B\t\t\t\t\t\t\t\t\t- #.\n```\n\n\u003cbr /\u003e\n\nthen your code changes from:  \n\n```\ndd if\u003d\u0026#40;hd0,0\u0026#41;/boot/fat32x.dat of\u003d\u0026#40;hd0\u0026#41; bs\u003d1 count\u003d1 skip\u003d450 seek\u003d450\n```\n\n\u003cbr /\u003e\n\nto  \n\n```\ndd if\u003d\u0026#40;\u0026#41;/menu.lst of\u003d\u0026#40;hd0\u0026#41; bs\u003d1 count\u003d1 skip\u003d1 seek\u003d450\n```\n\n\u003cbr /\u003e\n\nYou can have in a number of lines all binary values from 00 to FF.  \n\ni.e. you do not need a file containing the 64 sectors, as everything is inside menu.lst, and, in other words you have created \"at home\" a simple command line driven hex editor capable of writing any hex value to any file or device.  \n\nWhat I don\u0027t know is if the \"#\" character actually do work as supposed above or if anyway binary values in menu.lst somehow \"confuse\" grub4dos.  \n\njaclaz   \n"
    },
    {
      "id": "73895",
      "timestamp": "2009-08-07T08:57:39+00:00",
      "author": "maanu",
      "content": "sorry for my ignorance , but is it all stuff to increase the bootability of usb drives on multiple systems ?   \n\ni thought the standard (in grub4dos) is to appear command line . no menu.lst at all ? i mean for making sure usb boot is working...   \n"
    },
    {
      "id": "74528",
      "timestamp": "2009-08-14T09:12:21+00:00",
      "author": "online",
      "content": "Sorry for my late reply, but I was very busy. :wink:   \n\n\u003e What I don\u0027t know is if the \"#\" character actually do work as supposed above or if anyway binary values in menu.lst somehow \"confuse\" grub4dos.\nIt seems to me the second one.  \nIf placed at the beginning of any line, then grub4dos will ignore the line itself just as expected.  \nIf placed in every other position (even at the end) inside any line related to \"dd\" command then that line will be ignored anyway (that\u0027s the related command will not be executed).  \nI did just that in order to specify the related function of some commands and then the same commands did not execute (just as the following example: *dd if\u003d(hd0,1)/boot/00fat32x of\u003d(hd0) bs\u003d1 count\u003d1 skip\u003d450 seek\u003d450 **#**1st partition*).  \nSo, really I wrote the \"#\" sign at the beginning of three lines in my first post just for \"safety\" reasons and just not to parse/execute grub4dos the related commands.  \nThe three \"#\" are referred to writing (when/if removed) \"0C (LBA)\" also to the 2nd, 3rd and 4th partitions possibly existing on UFD, for every possible use/case.  \n\n![:frusty:](http://reboot.pro/public/style_emoticons/default/frusty.gif)   \n\n\u003cbr /\u003e\n\n@maanu  \n\nPlease, note that - just as described in the first post - here we are talking about the UFD patching of some bytes in some its sectors in order to avoid a possible booting failure due to certain/possible Windows behaviours after UFDs formatting (just as **wimb** - most of all - had reported in some his posts just linked in this topic).  \nHowever you suggested me (without your willing ![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png)) to change the topic title in something more pertinent compared to what now it is. ![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png)   \n"
    },
    {
      "id": "74547",
      "timestamp": "2009-08-14T10:49:48+00:00",
      "author": "was_jaclaz",
      "content": "@online  \nthere is a mis-understanding going on. ![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png)  \n\nThe # character **does** tell grub4dos parser to ignore anything after it.  \n\nThe question was if having BINARY (i.e. hex values coresponding to non-printable characters) does actually work exactly as it should and as it **DOES** work for \"normal\" HEX corresponding to printable characters.  \n\nAs said, if the above works as expected you have in your hands a \"poorman\u0027s command line driven hex-editor\".  \n\nYou affirmed that the second (not working as it should) hypothesis seems true, then reported a number of reports that it actually worked as it should (first hypothesis) WITHOUT trying it with HEX values (non-printable characters). :wink:  \n\nTo make a DOS/Command Line comparison, if you have in a batch:  \n\n```\nREM Something that does NOT need to be parsed\n```\n\nthe line is ignored BUT parsed nonetheless, while this one:  \n\n```\n\u0026#58;\u0026#58; Something that does NOT need to be parsed\n```\n\nthe line is BOTH ignored and NOT parsed.  \n\n![:frusty:](http://reboot.pro/public/style_emoticons/default/frusty.gif)  \n\njaclaz   \n"
    },
    {
      "id": "74556",
      "timestamp": "2009-08-14T11:41:48+00:00",
      "author": "online",
      "content": "\u003e The # character **does** tell grub4dos parser to ignore anything after it.\nI said just the same thing, or not? ![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png)   \nThen I\u0027ve simply added that if you place that char (#) even at the end in a \"dd\" command line then the line itself does not work/execute.  \n\n\u003e The question was if having BINARY (i.e. hex values coresponding to non-printable characters) does actually work exactly as it should and as it **DOES** work for \"normal\" HEX corresponding to printable characters.\njaclaz, if you will be able to working that, then you will have a cold beer on me... ![:frusty:](http://reboot.pro/public/style_emoticons/default/frusty.gif) ![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png)   \nSo my answer is: \"No, it seems to me that what you suggested is NOT working\".  \n\u003e As said, if the above works as expected you have in your hands a \"poorman\u0027s command line driven hex-editor\".\nYep, (**if** I understood what you mean in *english* ) it seems to me just that ![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png)... even using a separate and dedicated file (as I did) and not the \"menu.lst\" (as you interestingly supposed) file itself .  \nMy related findings are very exciting in this regard. :wink:   \n\n\u003e You affirmed that the second (not working as it should) hypothesis seems true, then reported a number of reports that it actually worked as it should (first hypothesis) WITHOUT trying it with HEX values (non-printable characters).\nYep, as said I\u0027d already tried that and I had already seen that it did not work... just forgot to report the related result. :wink:  \n\nUsing the dedicated \"template-file\" (32.768 bytes) instead - just as described in my first post - works really great and furthermore you can place it anywhere (in \"boot\" folder, just as an example). :wink:   \n"
    },
    {
      "id": "74567",
      "timestamp": "2009-08-14T12:35:41+00:00",
      "author": "was_jaclaz",
      "content": "\u003e Using the dedicated \"template-file\" (32.768 bytes) instead - just as described in my first post - works really great and furthermore you can place it anywhere (in \"boot\" folder, just as an example). ![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png)\n\nSure it does. ![:frusty:](http://reboot.pro/public/style_emoticons/default/frusty.gif)  \n\nThe whole point of the exercise was to avoiding having:  \n\n* an additonal file\n* an additional file sized 32,768 bytes of which only at most 1024 are not 00\u0027s and of which you use just 6 (six) single bytes (or at the most 9\u003d are used\n\n\u003cbr /\u003e\n\nIn my languages, both Italian and English the above means:  \n\n* an unneeded entry for the unneded additional file in the filesystem\n* 32,768-6\u003d32,762 unneded bytes\n\n\u003cbr /\u003e\n\nIt seems like the message doesn\u0027t come through, it doesn\u0027t matter, ![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png) it\u0027s just me that I am used to carve my bytes by hand, bit by bit:  \n[http://www.boot-land...?...ic\u003d1908\\\u0026hl\u003d](http://www.boot-land.net/forums/index.php?showtopic\u003d1908\u0026hl\u003d \"External link\")  \n\n:wink:  \n\njaclaz   \n"
    },
    {
      "id": "74639",
      "timestamp": "2009-08-14T19:24:37+00:00",
      "author": "online",
      "content": "\u003e The whole point of the exercise\nGenerally, the whole point of my approach is that I do not like \"exercises\" :wink:, really I like the practical and direct application of any *theoretical* (!) idea. :wink:  \nHowever I understand and share your point of view about the \"general impact\" of any way/method - as matter of fact I liked your idea and I tried if it worked (if it does not seem to work then probably it is not my fault) - and I agree with your minimalistic inclination, but in my opinion there is a limit for almost everything and I do not like too the \"extremisms\". ![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png)   \nJust for the record: your idea (that I like!) about \"menu.lst\" containing \"non-printable characters\" (hex values) seems to produce unpredictable behaviours: with some single values it seems to work, with other ones it doesn\u0027t (and then grub4dos directly shows the command prompt skipping the menu screen).  \nFurthermore, in my opinion it needs a certain *manual-ability* copying/writing and verifying the (unreadable with a text editor) values and - in addition - it introduces a further error-rate. ![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png)  \nBesides it has as side-effect the already mentioned non-readability of the related chars when you open your \"menu.lst\" with a text editor because the chars themselves are often shown as follows: .  \n\n\u003e was to avoiding having:  \n\u003e\n\u003e * an additonal file\n\u003e * an additional file sized 32,768 bytes of which only at most 1024 are not 00\u0027s and of which you use just 6 (six) single bytes (or at the most 9\u003d are used\n\u003e\n\u003e \u003cbr /\u003e\n\u003e\nAs said here I would agree, and I would be very happy if you found a way in order to obtain your (our) goal adding working non-printable chars in your \"menu.lst\". :smile:  \n\n\u003e In my languages, both Italian and English the above means:  \n\u003e\n\u003e * an unneeded entry for the unneded additional file in the filesystem\n\u003e * 32,768-6\u003d32,762 unneded bytes\n\u003e\n\u003e \u003cbr /\u003e\n\u003e\nHere I disagree: that entry is needed instead, at least until a better way is found. :wink:  \nAbout the relatively \"unneeded\" bytes I could agree, because really that is a my liking.  \nI like to have the first 63 sectors in a dedicated (32 Kb...) file :wink: , but it appears quite obvious that file could contain just the needed few bytes just patched. ![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png)  \nSo, frankly I\u0027m not too interested in the \"war of bytes\", but I respect your personal approach and likings (and pointings! :wink:).  \nHowever even considering a file of just 6 bytes then it will fill at least a probable cluster-size, that\u0027s at least 4 Kb. :wink:  \n\n\u003e It seems like the message doesn\u0027t come through, it doesn\u0027t matter\nIt seems to me that the message does, indeed. :wink:  \n\n\u003e it\u0027s just me that I am used to carve my bytes by hand, bit by bit\nThe main thing is that you are happy with that. :smile:  \n\n\u003e [http://www.boot-land...?...ic\u003d1908\\\u0026hl\u003d](http://www.boot-land.net/forums/index.php?showtopic\u003d1908\u0026hl\u003d \"External link\")\nI do not understand your link, but it does not matter... maybe I do not read it with attention: it appears as too long for my english-*readability* . ![:frusty:](http://reboot.pro/public/style_emoticons/default/frusty.gif)   \n"
    },
    {
      "id": "74644",
      "timestamp": "2009-08-14T19:37:04+00:00",
      "author": "was_jaclaz",
      "content": "\u003e However even considering a file of just 6 bytes then it will fill at least a probable cluster-size, that\u0027s at least 4 Kb. ![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png)\nIf you have 4 Kb clusters, it can be as low as 512 bytes, it depends on partition size, AFAICR.  \n\nYou see why I was thinking about putting it into menu.lst. :wink:  \n\nIf it\u0027s not possible we can still have a separate file, 512 bytes (on a \"good\" partition) or 4 kbytes on a \"bad\" 4kb cluster partition are still much better than 32 Kb.   \n\nAnother idea, you can possibly find each binary value inside grldr or grub.exe themselves. :wink:  \n\n...but of course the script will be severely \"grub4dos version binded\"...![:frusty:](http://reboot.pro/public/style_emoticons/default/frusty.gif)  \n\nI must check different versions of grub4dos....  \n\n\u003e I do not understand your link, but it does not matter... maybe I do not read it with attention: it appears as too long for my english-*readability* . :wink:\nToo bad :wink:, it\u0027s one of the funniest pieces of geekish humour I\u0027ve ever seen ![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png) , expecially if you like Monty Pythons and remember/have seen the \"Four Yorkshire Men\".  \n\n:wink:  \n\njaclaz   \n"
    },
    {
      "id": "74649",
      "timestamp": "2009-08-14T19:51:47+00:00",
      "author": "online",
      "content": "\u003e If you have 4 Kb clusters, it can be as low as 512 bytes, it depends on partition size\nYep, that\u0027s why I talked about a probable cluster-size. :wink:  \n\n\u003e You see why I was thinking about putting it into menu.lst.\nSure, and - as already said - I appreciated and I thought it was an interesting idea. ![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png)  \n\n\u003e Too bad ![:frusty:](http://reboot.pro/public/style_emoticons/default/frusty.gif), it\u0027s one of the funniest pieces of geekish humour I\u0027ve ever seen :wink: , expecially if you like Monty Pythons and remember/have seen the \"Four Yorkshire Men\".\n![:unsure:](http://reboot.pro/public/style_emoticons/default/unsure.png) Ok, I will try to read the whole linked page: I promise. :wink: :wink:   \n"
    }
  ]
}