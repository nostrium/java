{
  "id": "19956",
  "title": "Change path from (BOOTMGR -\u003e \\Boot\\BCD) to (WIM9MGR -\u003e \\Boot\\WIM) / (WIM9MGR -\u003e \\WIM)",
  "isPinned": false,
  "isFirstTopic": false,
  "isLocked": false,
  "tags": [],
  "forumNotes": [
    {
      "id": "186132",
      "timestamp": "2014-07-27T03:48:15+00:00",
      "author": "devdevadev",
      "content": "***Hello Everyone....***\n\nSome time ago I had found a **\u0027USB.zip\u0027** from [http://windowsforum.kr/review/5665807](http://windowsforum.kr/review/5665807 \"External link\") . But this link is currently not working. Within \u0027USB.zip\u0027 I have found following files which are looking modified version of **BOOTMGR** and **BCD**.\n\n**BDF7MBR -\\\u003e \\\\Boot\\\\BDF**\n\n**BIS7MGR -\\\u003e \\\\Boot\\\\BIS**\n\n**BTP7MGR -\\\u003e \\\\Boot\\\\BTP**\n\n**INSTMGR -\\\u003e \\\\Boot\\\\BCD**\n\n![index.php?app\u003dcore\u0026module\u003dattach\u0026section](http://reboot.pro/index.php?app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d14983)\n\nI want to modify**\u0027BOOTMGR\u0027** and **\u0027BCD\u0027** as follows. But I don\u0027t know how to do this ?\n\n-------------------------------------------------------------------------------------------------------------------\n\n**(BOOTMGR -\\\u003e \\\\Boot\\\\BCD)** to **(WIM9MGR -\\\u003e \\\\Boot\\\\WIM)** / **(WIM9MGR -\\\u003e \\\\WIM)**  \n**(BOOTMGR -\\\u003e \\\\Boot\\\\BCD)** to **(VHDXMGR -\\\u003e \\\\Boot\\\\VHD)** / **(VHDXMGR -\\\u003e \\\\VHD)**\n\n-------------------------------------------------------------------------------------------------------------------  \nIf anybody know about how to modify **\u0027BOOTMGR\u0027** and **\u0027BCD\u0027** in above fashion then please help me........  \n**Note-** I know I can create (bootmgr1 ,bootmgr2 , bootmgr3....) and (bc1, bc2 ,bc3....) by using **\u0027zbootmgr.exe\u0027** . but I want a method/tool other than **\u0027zbootmgr.exe\u0027**.  \n***Thanks in Advance***  \n***Regards.....***\n\n[![USB.zip Contents.png](http://reboot.pro/uploads/monthly_07_2014/post-65263-0-39603800-1406431914_thumb.png)](http://reboot.pro/uploads/monthly_07_2014/post-65263-0-39603800-1406431914.png \"USB.zip Contents.png - Size: 405.96KB\"){#ipb-attach-url-14983-0-35348500-1676066499}\n\n"
    },
    {
      "id": "186143",
      "timestamp": "2014-07-27T13:21:21+00:00",
      "author": "Wonko the Sane",
      "content": "And the idea of searching a bit didn\u0027t cross your mind, right?\n\nHere:\n\n[http://reboot.pro/to...r-of-windows-8/](http://reboot.pro/topic/16824-how-to-modify-bootmgr-of-windows-8/ \"\")\n\n[http://reboot.pro/fi...ls-bootmgrntfs/](http://reboot.pro/files/file/121-lznt1-tools-bootmgrntfs/ \"\")\n\nWhich BTW were already provided to you here some time ago:\n\n[http://reboot.pro/to...otmgr-boot-bcd/](http://reboot.pro/topic/19424-how-to-edit-the-file-path-bootmgr-boot-bcd/ \"\")\n\nSo we are back to the \"I don\u0027t understand\" (or \"I don\u0027t want to understand\") previous art, for some reasons I want to do it differently, I don\u0027t care about any limitation that is impossible to overcome, and since I cannot do it, someone else should do it for me? ![:dubbio:](https://reboot.pro/public/style_emoticons/default/dubbio.gif)\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "186144",
      "timestamp": "2014-07-27T14:37:53+00:00",
      "author": "devdevadev",
      "content": "**@wonko**\n\nYou mean I have to use **\u0027LZNT1_Tools\u0027**in order to change file path of bootmgr (boot \\\\ BCD) ?\n\nIf \u0027Yes\u0027 , then I am unable to understand the procedure for changing file path of bootmgr with the help of **\u0027LZNT1_Tools\u0027** **?**\n\nIf you don\u0027t mind then Can you please provide me some simple step by step procedure instead of just sharing lengthy and complex links again and again.\n\nInstead of sharing long confusing posts please tell me about the **exact tools/procedure** in order to change file path of bootmgr.\n\nCurrently I am using **\u0027zbootmgr.exe\u0027** for this purpose but **\u0027zbootmgr.exe\u0027** have some limitations. It\u0027s why I want alternative **simple tool/method** which will allow me to choose desired name for \u0027bootmgr\u0027 and \u0027bcd\u0027.\n\nThanks in Advance\n\n"
    },
    {
      "id": "186145",
      "timestamp": "2014-07-27T15:01:14+00:00",
      "author": "Wonko the Sane",
      "content": "The \"generic\" process is:\n\n1. uncompress the BOOTMGR\n2. *change whatever you want in it* \\\u003c- this assumes more than basic knowledge about using a hex editor and some experimenting\n3. make sure to change the checksum or disable the the check\n4. recompress it\n\nWhat the given resources may provide you with are #1, #3 and #4, what you do in #2 (and whether it will work or not) is entirely up to you.\n\nWhich EXACT limitation(s) did you find in zbootmgr.exe?\n\nWhat is the REASON of this(these) limitations(s)?\n\nWHY would other methods be needed IF there were not such limitations?\n\nWHY yet other methods may be needed to work around further limitations of these other methods?\n\nWHAT IF some of the \"limitations\" of a given method are not actually a \"limitation\" but actually something \"impossible\"?\n\nDid you manage to understand that each SPECIFIC, EXACT, version of BOOTMGR (the piece of info you completely failed to provide) may need one or the other method (or possibly a suitable method does not even exist)?\n\nDon\u0027t bother to reply to the above questions, they were made only for rhetorical purposes. ![:whistling:](https://reboot.pro/public/style_emoticons/default/happy22.gif)\n\nYou could restart from here:\n\n[http://reboot.pro/to...e-bootmgr-file/](http://reboot.pro/topic/16291-how-to-create-bootmgr-file/ \"\")\n\nBy providing the info asked here:\n\n[http://reboot.pro/to...-file/?p\u003d148420](http://reboot.pro/topic/16291-how-to-create-bootmgr-file/?p\u003d148420 \"\")\n\nAND read this (link provided in the above thread):\n\n[http://reboot.pro/to...ffset-question/](http://reboot.pro/topic/16069-bootmgr-offset-question/ \"\")\n\nand at least TRY to read and understand the provided resources, though we are still in the original situation, you want to do something \"extremely advanced\" (IMHO also without a logical reason) without having the needed \"extremely advanced\" knowledge of the mechanisms involved.\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "186148",
      "timestamp": "2014-07-27T15:23:07+00:00",
      "author": "devdevadev",
      "content": "**\u0027zbootmgr.exe\u0027** does not allow me to choose desired name for \u0027**BCD\u0027** (i.e. WIM, VHD etc...). **\u0027zbootmgr.exe\u0027** also does not allow me to change file path of **\u0027BOOTMGR\u0027** from **\\\\Boot\\\\BCD** to **\\\\WIM**or **\\\\VHD**.\n\nYou mean there is no other solution other than **\u0027generic\u0027 process** in order to change file path of **\u0027BOOTMGR\u0027** from\n\n**\\\\Boot\\\\BCD** to **\\\\WIM**or **\\\\VHD ?**\n\nYou mean the modified **\u0027BOOTMGR\u0027** files ( **BDF7MBR ,****BIS7MGR ,** **BTP7MGR ,** **INSTMGR**) which I have were modified with the help of \u0027generic\u0027 process ?\n\nRegards.......\n\n"
    },
    {
      "id": "186150",
      "timestamp": "2014-07-27T16:09:40+00:00",
      "author": "cdob",
      "content": "Why do you like to change bootmgr at all?  \n\nHow do you use different bootmgr? Do you chainload at grub4dos?  \n\nWhat about one bootmgr?  \n-different bcd files, dd one at boot  \n-or patch bcd in RAM   \n"
    },
    {
      "id": "186151",
      "timestamp": "2014-07-27T16:10:32+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e **\u0027zbootmgr.exe\u0027** does not allow me to choose desired name for \u0027BCD\u0027(i.e. WIM, VHD etc...). \u0027zbootmgr.exe\u0027 also does not allow me to change file path of **\u0027BOOTMGR\u0027** from **\\\\Boot\\\\BCD** to **\\\\WIM** / **\\\\VHD** .\n\nReally? ![:w00t:](https://reboot.pro/public/style_emoticons/default/w00t.gif)  \nThat is an issue. ![:dubbio:](https://reboot.pro/public/style_emoticons/default/dubbio.gif)  \nThe fact that ADDITIONALLY it won\u0027t work for a non-Vista-SP0 or non-WAIK-for-7-version of the BOOTMGR file is probably a trifling detail?  \nReally finding this piece of info in the provided link is not that much work:  \n[http://reboot.pro/to...e-bootmgr-file/](http://reboot.pro/topic/16291-how-to-create-bootmgr-file/ \"\")  \nSee if this (complementary to the already given links) helps:  \n[http://www.msfn.org/...at-kind-of-bcd/](http://www.msfn.org/board/topic/162794-help-me-detect-what-kind-of-bcd/ \"External link\")  \n\n\u003e You mean there is no other solution other than **\u0027generic\u0027 process** in order to change file path of **\u0027BOOTMGR\u0027** from  \n\u003e **\\\\Boot\\\\BCD** to **\\\\WIM** or **\\\\VHD ?**\n\nNo, I mean that \"by definition\" the \"generic process\" is \"generic\" and applies \"generically\" to ALL possible methods of modifying a compressed BOOTMGR, AND I also mean that changing \\\\Boot\\\\BCD to \\\\WIM may also NOT be possible at all without some serious work of decompiling and recompiling the BOOTMGR.  \nThe alternative, as seen, may be to patch the BCD or BOOTMGR in RAM, but still the patch needs to be devised.  \n\n\u003cbr /\u003e\n\n\u003e You mean the modified \u0027BOOTMGR\u0027 files ( **BDF7MBR , \\[/size\\]**\\[/size\\]**BIS7MGR , \\[/size\\]** **BTP7MGR , \\[/size\\]** **INSTMGR\\[/size\\]** ) which I have were modified with the help of \u0027generic\u0027 process ?\n\nNo, I have NO idea how the files you have, and that you got \"from somewhere on the internet\", were modified, but again, by definition a \"generic\" process is \"generic\".  \nNow since you have the files and were given some (good ![:unsure:](https://reboot.pro/public/style_emoticons/default/unsure.png)) hints on the tools that might be used to inspect them, I quess you should be able find your answers yourself.  \n\n\u003cbr /\u003e\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)  \nWonko\n\n"
    },
    {
      "id": "186155",
      "timestamp": "2014-07-27T16:39:24+00:00",
      "author": "devdevadev",
      "content": "\u003e Why do you like to change bootmgr at all?  \n\u003e\n\u003e How do you use different bootmgr? Do you chainload at grub4dos?  \n\u003e\n\u003e What about one bootmgr?  \n\u003e -different bcd files, dd one at boot  \n\u003e -or patch bcd in RAM\n\nYes, I use different bootmgr in order to chainload at grub4dos. I know I can use one bootmgr and add multiple boot entries in \u0027BCD\u0027 but it increase number of selection in order to boot WIM, VHD etc....\n\nCurrently I am using three different **\u0027bootmgr\u0027** for **\u0027Win 8.1 U1_Installer\u0027 , \u0027WIMBoot.vhdx\u0027** and **\u0027Win8.1U1SE_x64_boot.wim\u0027** in order to chainload at grub4dos (E2B). I don\u0027t prefer one \u0027bootmgr\u0027 because I do not want to see \u0027Boot Manager\u0027 screen in order to select entries. I want to select entries within form Easy2boot menu.\n\nActually there is no problem/issue with**\u0027zbootmgr.exe\u0027.** It just work perfectly for me. But it would be more better if I learn a simple method in order to change file path of BOOTMGR from \u0027**\\\\Boot\\\\BCD)** to **\\\\Boot\\\\WIM**?\n\nRegards\n\n"
    },
    {
      "id": "186156",
      "timestamp": "2014-07-27T16:51:52+00:00",
      "author": "Wonko the Sane",
      "content": "Can you understand the ++**simple**++ notion that changing the filename \\\\boot\\\\BCD to filename \\\\boot\\\\WIM is one thing and that changing BOTH filename AND path from \\\\boot\\\\BCD to \\\\WIM are two **VERY DIFFERENT** things?  \n\nWhat do you think that the info given here (by **cdob** ![:worship:](https://reboot.pro/public/style_emoticons/default/worship.gif)) is about?  \n[http://www.msfn.org/...at-kind-of-bcd/](http://www.msfn.org/board/topic/162794-help-me-detect-what-kind-of-bcd/ \"External link\")\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "186157",
      "timestamp": "2014-07-27T17:19:00+00:00",
      "author": "devdevadev",
      "content": "\u003e Can you understand the ++**simple**++ notion that changing the filename \\\\boot\\\\BCD to filename \\\\boot\\\\WIM is one thing and that changing BOTH filename AND path from \\\\boot\\\\BCD to \\\\WIM are two **VERY DIFFERENT** things?\n\nYes, I can understand that both are two different things. **BTW**changing filename \\\\boot\\\\BCD to filename \\\\boot\\\\WIM does not make any sense without changing file path of BOOTMGR.\n\nActually ++\" changing file path of BOOTMGR from \u0027**\\\\Boot\\\\BCD)** to **\\\\Boot\\\\WIM**++ ++\"++ already indicating for changing BOTH file **name** AND **path** from **\\\\boot\\\\BCD** to**\\\\boot** **\\\\WIM** . Word **\u0027WIM\u0027**clearly express that I am also talking about changing file name along with changing file path of BOOTMGR.\n\nI think both ++**\\\\Boot\\\\BCD** and **\\\\Boot\\\\WIM**++ are not just two different file names but also two different file path of **\u0027BOOTMGR\u0027**. Am I wrong ?\n\nRegards......\n\n"
    },
    {
      "id": "186158",
      "timestamp": "2014-07-27T17:52:19+00:00",
      "author": "Wonko the Sane",
      "content": "No, no, no. ![:frusty:](https://reboot.pro/public/style_emoticons/default/frusty.gif)\n\nYou completely failed to READ this topic (to which you were pointed some time ago, here: [http://reboot.pro/to...t-bcd/?p\u003d185192](http://reboot.pro/topic/19424-how-to-edit-the-file-path-bootmgr-boot-bcd/?p\u003d185192 \"\") ) :\n\n[http://reboot.pro/to...usb-sub-folder/](http://reboot.pro/topic/8043-booting-vista2008w7-from-usb-sub-folder/ \"\")\n\nALL of it.\n\nI will try to tell you this in simpler words.\n\nThere are NO particular issues in changing the NAME of the BCD store from \"BCD\" to ANY other NAME ++as long a++ s the new NAME is ***still three characters long***, but you might need, depending on the exact specific version of BOOTMGR, to workaround some compression/checksums/integrity checks.\n\nThe PATH to the BCD store, which is hardcoded to \"\\\\boot\\\\\" cannot AFAIK be changed (or changed as easily)\n\nIf you are going to use a single BOOTMGR file, changing on the fly the NAME (and not the path) of the file \\\\boot\\\\BCD to \\\\boot\\\\WIM can be done with grub4dos.\n\nBut, if you are determined to use several different BOOTMGR files (i.e. you are OK with the space these several copies need), it makes no real sense to modify at all any of them or to rename them, as it is IMNSHO ++easier, faster and more convenient++ to use **INSTEAD** a set of floppy images, as said in the mentioned thread, starting from here:\n\n[http://reboot.pro/to...folder/?p\u003d73358](http://reboot.pro/topic/8043-booting-vista2008w7-from-usb-sub-folder/?p\u003d73358 \"\")\n\nAnd you could even use a COSMIAS approach ![:w00t:](https://reboot.pro/public/style_emoticons/default/w00t.gif) (shameless plug :wink:):\n\n[http://reboot.pro/to...-to-g4d-images/](http://reboot.pro/topic/17807-release-cosmias-a-new-approach-to-g4d-images/ \"\")\n\nbut until you do not try (and succeed) to understand the basics it won\u0027t help you much. ![:(](https://reboot.pro/public/style_emoticons/default/sad.png)\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "186159",
      "timestamp": "2014-07-27T18:04:02+00:00",
      "author": "cdob",
      "content": "\u003e changing filename \\\\boot\\\\BCD to filename \\\\boot\\\\WIM does not make any sense without changing file path of BOOTMGR.\n\u003e dd one at boot\ngrub4dos can copy files, dd is one possibility,  \nYou use this approach already: AutoUnattend.xml  \n\nWith the same approach  \n\\\\bootmgr  \n\\\\boot\\\\bcd  \n\\\\boot\\\\bcd.01  \n\\\\boot\\\\bcd.02  \n\nAt menu.lst dd \\\\boot\\\\bcd.01 to \\\\boot\\\\bcd.  \n\n\u003e I know I can use one bootmgr and add multiple boot entries in \u0027BCD\u0027 but it increase number of selection in order to boot WIM, VHD etc...\nEdit \\\\boot\\\\bcd at grub4dos, change default entry.  \nThis dosn\u0027t increase number of selection in order to boot.  \n\n\u003cbr /\u003e\n\nThere are floppy images too. That\u0027s another story.  \n\nIn my opinion: do not edit bootmgr, especial since Windows 8 bootmgr.  \nSearch another work around.   \n"
    },
    {
      "id": "186161",
      "timestamp": "2014-07-27T19:02:15+00:00",
      "author": "devdevadev",
      "content": "\u003e cdob, on 27 Jul 2014 - 11:34 PM, said:  \n\u003e\n\u003e Search another work around.\n\n**the oven **.** org / index.php?topic\u003d530.msg8154**   \n\nHere is a **script** created by **HALIKUS** that will make a custom BCD File from scratch, or add to the systems bcd. It works for both efi and mbr. Just rem out the things you want or dont want in :DVDMBR, :HDDMBR, :DVDEFI, and :HDDEFI and change any paths that differ.\n\n```\n@echo off\nrem http://diddy.boot-land.net/bcdedit/files/examples1.htm#winpe\nrem for VMWARE   firmware\u003d \"efi\"\ntitle Windows V 7 8 install.wim boot.wim and BCD manipulation\n:checkPrivileges \nNET FILE 1\u0026gt;NUL 2\u0026gt;NUL\nif \u0027%errorlevel%\u0027 \u003d\u003d \u00270\u0027 ( goto gotPrivileges ) else ( goto getPrivileges ) \n:getprivileges \nif \u0027%1\u0027\u003d\u003d\u0027ELEV\u0027 (shift \u0026amp; goto gotPrivileges)  \nsetlocal DisableDelayedExpansion\nset \"batchPath\u003d%~0\"\nsetlocal EnableDelayedExpansion\nECHO set UAC \u003d CreateObject^(\"Shell.Application\"^) \u0026gt; \"%temp%\\OEgetPrivileges.vbs\" \nECHO UAC.ShellExecute \"!batchPath!\", \"ELEV\", \"\", \"runas\", 1 \u0026gt;\u0026gt; \"%temp%\\OEgetPrivileges.vbs\" \n\"%temp%\\OEgetPrivileges.vbs\" \nexit /B \n:gotPrivileges \n\n:STARTBCD\n\nREM :::Choose variables here and below for :DVDMBR, :HDDMBR, :DVDEFI, and :HDDEFI\nset BCD\u003d%~dp0BCD\nSet BCDEDIT\u003d%SYSTEMROOT%\\System32\\BCDEDIT.exe\nREM partition letter is the drive where your files you want to boot are.  For DVD, \"boot\" is used.\nset PartitionLetter\u003dD:\n\ntitle Choose desired BCD \ncls\necho.\necho.\necho        Choose BCD type... \necho.          \necho. \necho   1 \u003d DVD MBR (%BCD%) (Make custom BCD file)\necho.\necho   2 \u003d HDD MBR (System) (Add entries to your system BCD)\necho. \necho   3 \u003d DVD EFI (%BCD%) (Make custom BCD file)\necho.\necho   4 \u003d HDD EFI (System) (Add entries to your system BCD)\necho. \necho   5 \u003d DELETE Entry\necho   6 \u003d RENAME BCD \necho   7 \u003d Change ORDER of BCD\necho   8 \u003d Add Specific Entry to BCD\necho   9 \u003d Add Win8 Safemode to system BCD (Must be logged in to Win8)\necho   10 \u003d Boot Legacy (Win7)\necho   11 \u003d Boot Standard (Win8)\necho   12 \u003d Choose Deafult boot entry\necho.\necho   ** HDD Wim and VHD files Partition \u003d %PartitionLetter%\necho.\necho. \nSET /P IM\u003dInput number : \nSET DD\u003d\nIf \"%IM%\"\u003d\u003d\"1\" goto :DVDMBR\nIf \"%IM%\"\u003d\u003d\"2\" goto :HDDMBR\nIf \"%IM%\"\u003d\u003d\"3\" goto :DVDEFI\nIf \"%IM%\"\u003d\u003d\"4\" goto :HDDEFI\nIf \"%IM%\"\u003d\u003d\"5\" goto :DeleteBCD\nIf \"%IM%\"\u003d\u003d\"6\" goto :RenameBCD\nIf \"%IM%\"\u003d\u003d\"7\" goto :OrderBCD\nIf \"%IM%\"\u003d\u003d\"8\" goto :AddBCD \nIf \"%IM%\"\u003d\u003d\"9\" goto :Win8Safemode\nIf \"%IM%\"\u003d\u003d\"10\" goto :BootLegacy\nIf \"%IM%\"\u003d\u003d\"11\" goto :BootStandard\nIf \"%IM%\"\u003d\u003d\"12\" goto :DefaultBCD\nIf \"%DD%\"\u003d\u003d\"\" echo INVALID NUMBER\nIf \"%DD%\"\u003d\u003d\"\" goto :STARTBCD\n\n\n:DVDMBR\nrem echo f | xcopy ISO_2 bcd\nrem set BCD\u003d%~dp0BCD\nset STORE\u003d/store %BCD%\nrem %BCDEDIT% /createstore %BCD%\nset PartitionLetter\u003dboot\nset Partition\u003dboot\nset Path\u003d[boot]\\sources\nset PathXPWIM\u003d[boot]\\boot\nREM choice is for efi, leave blank for mbr\nset choice\u003d\nset applicationpath\u003d\\Windows\\system32\\boot\\winload.exe\nset applicationpathHDD\u003d\\Windows\\system32\\winload.exe\nset VHDname\u003dVHD.vhd\nrem set ramdisksdipath\u003d\\boot\\boot.sdi\nset bootmenupolicy\u003dstandard\nset DisplayBootMenu\u003d%BCDEDIT% %STORE% /set {bootmgr} DisplayBootMenu True\nset memtest\u003d\\boot\\memtest.exe\ngoto :CREATECUSTOMDVD%choice%\n\n\n:HDDMBR\nset STORE\u003d\nrem set PartitionLetter\u003dd:\nset Partition\u003dPartition\u003d%PartitionLetter%\nset Path\u003d[%PartitionLetter%]\\sources\nREM choice is for efi, leave blank for mbr\nset choice\u003d\nset applicationpath\u003d\\Windows\\system32\\winload.exe\nset applicationpathHDD\u003d\\Windows\\system32\\winload.exe\nset VHDname\u003dVHD.vhd\nrem ?\nrem set ramdisksdipath\u003d\\Windows\\system32\\boot.sdi\nset DisplayBootMenu\u003d%BCDEDIT% %STORE% /set {bootmgr} DisplayBootMenu False\nset memtest\u003d\\Windows\\Boot\\PCAT\\memtest.exe\n%BCDEDIT% /set {current} bootmenupolicy standard\ngoto :CREATECUSTOMHDD%choice%\n\n\n\n:DVDEFI\nset STORE\u003d/store %BCD%\nset PartitionLetter\u003dboot\nset Partition\u003dboot\nset Path\u003d[boot]\\sources\nREM choice is for efi, leave blank for mbr\nset choice\u003dEFI\nset applicationpath\u003d\\Windows\\system32\\boot\\winload.efi\nset applicationpathHDD\u003d\\Windows\\system32\\winload.efi\nset VHDname\u003dVHD.vhd\nset bootmenupolicy\u003dstandard\nrem set ramdisksdipath\u003d\\boot\\boot.sdi\nset DisplayBootMenu\u003d%BCDEDIT% %STORE% /set {bootmgr} DisplayBootMenu True\nset memtest\u003d\\efi\\microsoft\\boot\\memtest.efi\ngoto :CREATECUSTOMDVD%choice%\n\n\n\n:HDDEFI\nset STORE\u003d\nrem set PartitionLetter\u003dd:\nset Partition\u003dPartition\u003d%PartitionLetter%\nset Path\u003d[%PartitionLetter%]\\sources\nREM choice is for efi, leave blank for mbr\nset choice\u003dEFI\nset applicationpath\u003d\\Windows\\system32\\winload.efi\nset applicationpathHDD\u003d\\Windows\\system32\\winload.efi\nset VHDname\u003dVHD.vhd\nrem ?\nrem set ramdisksdipath\u003d\\Windows\\system32\\boot.sdi\nset DisplayBootMenu\u003d%BCDEDIT% %STORE% /set {bootmgr} DisplayBootMenu False\nset memtest\u003d\\Windows\\Boot\\EFI\\memtest.efi\n%BCDEDIT% /set {current} bootmenupolicy standard\ngoto :CREATECUSTOMHDD%choice%\n\n\n\n\n\n:CREATECUSTOMDVD\ncall :CREATEBCD\ncall :Ramdisk\ncall :BootCdriveMBRDVD\ncall :WIM_bootwim\ncall :GRUB4DOS \ncall :GRUB2 \nrem call :GRUB24DOS \ncall :SYSLINUX\ncall :ISOLINUX\ncall :BCD_ISO_DISK\ncall :BCD_ISO_MEM\ncall :BCD_IMG\ncall :BCD_GZ\nrem call :ISO_Gena_WIM\nrem call :XPWIM\nrem call :WIM_w7x86\nrem call :WIM_w7x64\nrem call :WIM_w8x86\nrem call :WIM_w8x64\ncall :WIM_DART_w7x86\ncall :WIM_DART_w7x64\ncall :WIM_DART_w8x86\ncall :WIM_DART_w8x64\nrem call :WIM_DART_wVx86\nrem call :WIM_DART_wVx64\ncall :XPntldrHDD\ncall :XPNORMAL\nrem call :XPADMIN\nrem call :XPES\nrem call :ISO_Mac\nrem call :Plop\nrem call :BootC\nrem call :BootD\nrem call :BootE\nrem call :BootF\nrem call :BootG\nrem call :BootH\nrem call :W2Go\nrem call :VHDDVD\nrem call :VHDHDD\nrem call :VHDXDVD\nrem call :VHDXHDD\nrem call :pxeWindows\ncall :pxelinux\ncall :EFI_BootBIN\nrem call :MEMTEST\n%BCDEDIT% %STORE% /timeout 10\nrem %BCDEDIT% %STORE% /enum\nrem pause\ngoto :ORDERBCD\ngoto :StartBCD\n\n\n\n:CREATECUSTOMHDD\nrem bcdboot C:\\Windows\nrem call :CREATEBCD\nrem call :BootC\ncall :Ramdisk\nrem call :VHDHDDw7x86\nrem call :VHDHDDw7x64\ncall :VHDHDDw8x86\nrem call :VHDHDDw8x64\nrem call :XPPE\ncall :WIM_w8x64\nrem call :WIM_w8x86\nrem call :WIM_w7x64\nrem call :WIM_w7x86\nrem call :WIM_DART_w7x86\nrem call :WIM_DART_w7x64\nrem call :WIM_DART_w8x86\nrem call :WIM_DART_w8x64\nrem call :WIM_DART_wVx86\nrem call :WIM_DART_wVx64\nrem call :XPntldrHDD\nrem call :XPNORMAL\nrem call :XPADMIN\nrem call :XPES\nrem call :BootD\nrem call :BootE\nrem call :BootF\nrem call :BootG\nrem call :BootH\nrem call :W2Go\nrem call :VHDDVD\nrem call :VHDHDD\nrem call :VHDXDVD\nrem call :VHDXHDD\nrem call :WIM_bootwim\ncall :GRUB4DOS \ncall :SYSLINUX\n%BCDEDIT% %STORE% /default {current}\n%BCDEDIT% %STORE% /timeout 10\nrem %BCDEDIT% %STORE% /enum\nrem pause\ngoto :ORDERBCD\ngoto :StartBCD\n\n\n\n:CREATECUSTOMDVDEFI\ncall :CREATEBCD\ncall :Ramdisk\ncall :WIM_bootwim\nrem call :GRUB4DOS \nrem call :SYSLINUX\nrem call :ISOLINUX\nrem call :XPPE\nrem call :WIM_w7x86\nrem call :WIM_w7x64\nrem call :WIM_w8x86\nrem call :WIM_w8x64\nrem call :WIM_DART_w7x86\ncall :WIM_DART_w8x64\nrem call :WIM_DART_w8x86\ncall :WIM_DART_w7x64\nrem call :WIM_DART_w8x86\nrem call :WIM_DART_wVx86\nrem call :WIM_DART_wVx64\nrem call :XPntldrHDD\nrem call :XPNORMAL\nrem call :XPADMIN\nrem call :XPES\nrem call :BootC\nrem call :BootD\nrem call :BootE\nrem call :BootF\nrem call :BootG\nrem call :BootH\nrem call :W2Go\nrem call :VHDDVD\nrem call :VHDHDD\nrem call :VHDXDVD\nrem call :VHDXHDD\nrem call :GRUB2EFI\nrem call :BootC\nrem call :BootCdriveMBRDVD\nrem call :GRUB4DOS \ncall :BootCdriveEFIDVD\n%BCDEDIT% %STORE% /timeout 10\nrem %BCDEDIT% %STORE% /enum\nrem pause\ngoto :ORDERBCD\ngoto :StartBCD\n\n\n\n\n\n:CREATECUSTOMHDDEFI\nrem bcdboot C:\\Windows\nrem call :CREATEBCD\ncall :Ramdisk\nrem call :WIM_bootwim\nrem call :BootC\nrem call :GRUB4DOS \nrem call :SYSLINUX\nrem call :ISOLINUX\nrem call :XPPE\nrem call :WIM_w7x86\ncall :WIM_w7x64\nrem call :WIM_w8x86\ncall :WIM_w8x64\nrem call :WIM_DART_w7x86\nrem call :WIM_DART_w7x64\nrem call :WIM_DART_w8x86\nrem call :WIM_DART_w8x64\nrem call :WIM_DART_wVx86\nrem call :WIM_DART_wVx64\nrem call :XPntldrHDD\nrem call :XPNORMAL\nrem call :XPADMIN\nrem call :XPES\nrem call :BootD\nrem call :BootE\nrem call :BootF\nrem call :BootG\nrem call :BootH\nrem call :W2Go\nrem call :VHDDVD\nrem call :VHDHDD\nrem call :VHDXDVD\nrem call :VHDXHDD\n%BCDEDIT% %STORE% /default {current}\n%BCDEDIT% %STORE% /timeout 10\nrem %BCDEDIT% %STORE% /enum\nrem pause\ngoto :ORDERBCD\ngoto :StartBCD\n\n\n\n\n\n:DELETEBCD \necho. \necho   1 \u003d DVD (%BCD%)\necho.\necho   2 \u003d HDD (System)\necho.\necho. \nSET /P IM\u003dInput number : \nSET DD\u003d\nIf \"%IM%\"\u003d\u003d\"1\" goto :DVD\nIf \"%IM%\"\u003d\u003d\"2\" goto :HDD\nIf \"%DD%\"\u003d\u003d\"\" echo INVALID NUMBER\nIf \"%DD%\"\u003d\u003d\"\" goto :STARTBCD\n\n:DVD\nset STORE\u003d/store %BCD%\ngoto :DELETEBCD1\n\n:HDD\nset STORE\u003d\ngoto :DELETEBCD1\n\n:DELETEBCD1\nset _count\u003d1\nfor /f \"tokens\u003d1* usebackq skip\u003d1\" %%a in (`\"%BCDEDIT% %STORE% | c:\\windows\\system32\\find \"identifier\"\"`) do (call :DELETEBCD2 %_count%)\n:DELETEBCD2\nif \"%1\" neq \"\" (set /a _count+\u003d1 \u0026amp;for /f \"tokens\u003d1* usebackq skip\u003d%_count%\" %%c in (`\"%BCDEDIT% %STORE% | c:\\windows\\system32\\find \"description\"\"`) do (echo            %_count%. %%d \u0026amp;goto :eof))\nset _choice\u003d\necho.\necho.\nset /p _choice\u003dEnter a number (Q to quit): \necho.\necho.\nif \"%_choice%\" equ \"\" goto :STARTBCD \nif \"%_choice%\" gtr \"0\" if %_choice% lss %_count% for /f \"tokens\u003d2 usebackq skip\u003d%_choice%\" %%a in (`\"%BCDEDIT% %STORE% | c:\\windows\\system32\\find \"identifier\"\"`) do (%BCDEDIT% %STORE% /delete %%a /f \u0026amp;goto :DELETEBCD1)\ngoto :STARTBCD\n\n\n\n\n\n\n\n\n\n:Win8Safemode\n %BCDEDIT% /copy {current} /d \"Windows 8 (Safe Mode)\"\n %BCDEDIT% /timeout 10 \n cls\n  echo.\n  echo.\n  echo   Activate Win8 Safe Mode\n  echo.\n  echo.\nset _count\u003d1\nfor /f \"tokens\u003d1* usebackq skip\u003d1\" %%a in (`\"%BCDEDIT% | c:\\windows\\system32\\find \"identifier\"\"`) do (call :safemode %_count%)\n:safemode  \nif \"%1\" neq \"\" (set /a _count+\u003d1 \u0026amp;for /f \"tokens\u003d1* usebackq skip\u003d%_count%\" %%c in (`\"%BCDEDIT% | c:\\windows\\system32\\find \"description\"\"`) do (echo            %_count%. %%d \u0026amp;goto :eof))\nset _choice\u003d\necho.\necho.\nset /p _choice\u003dEnter a number (Q to quit): \necho.\necho.\nif \"%_choice%\" equ \"\" goto :eof \nif \"%_choice%\" gtr \"0\" if %_choice% lss %_count% for /f \"tokens\u003d2 usebackq skip\u003d%_choice%\" %%a in (`\"%BCDEDIT% | c:\\windows\\system32\\find \"identifier\"\"`) do (%BCDEDIT% /set %%a safeboot minimal \u0026amp;goto :safemode2)\n:safemode2\ncd c:\\windows\\system32\nreagentc /enable\n %BCDEDIT% /set {current} bootmenupolicy standard\n %BCDEDIT%\npause\ngoto :StartBCD\n\n\n\n\n\n\n\n\n\n\n\n\n\n:CREATEBCD\nEcho Create BCD\n%BCDEDIT% /createstore %BCD%\n\nEcho Create BootManager\n%BCDEDIT% %STORE% /create {bootmgr}\n%BCDEDIT% %STORE% /set {bootmgr} description \"Windows Boot Manager\"\n%BCDEDIT% %STORE% /set {bootmgr} device %partition%\n%BCDEDIT% %STORE% /set {bootmgr} locale en-US\n%BCDEDIT% %STORE% /set {bootmgr} nointegritychecks YES\nrem ***displaybootmenu disables win8 menu***\nrem %BCDEDIT% %STORE% /set {bootmgr} DisplayBootMenu True\n%DisplayBootMenu%\n%BCDEDIT% %STORE% /timeout 10\nEcho Bad memory\n%BCDEDIT% %STORE% /create {badmemory}\nEcho EMS\n%BCDEDIT% %STORE% /create {emssettings}\nrem text\nrem %BCDEDIT% %STORE% /set {emssettings} bootems \"Yes\"\nrem UI\n%BCDEDIT% %STORE% /set {emssettings} bootems \"No\"\nEcho Debug\n%BCDEDIT% %STORE% /create {dbgsettings}\n%BCDEDIT% %STORE% /dbgsettings SERIAL DEBUGPORT:1 BAUDRATE:115200\nEcho Hypervisor\n%BCDEDIT% %STORE% /create {hypervisorsettings}\n%BCDEDIT% %STORE% /hypervisorsettings SERIAL DEBUGPORT:1 BAUDRATE:115200\nEcho Global settings\n%BCDEDIT% %STORE% /create {globalsettings}\n%BCDEDIT% %STORE% /set {globalsettings} INHERIT {dbgsettings} {emssettings} {badmemory}\n%BCDEDIT% %STORE% /set {bootmgr} INHERIT {globalsettings}\nEcho Bootloader settings\n%BCDEDIT% %STORE% /create {bootloadersettings}\n%BCDEDIT% %STORE% /set {bootloadersettings} INHERIT {globalsettings} {hypervisorsettings}\nEcho Resume\nREM %BCDEDIT% %STORE% /create {resumeloadersettings}\nREM %BCDEDIT% %STORE% /set {resumeloadersettings} INHERIT {globalsettings}\nEcho Memtest\n%BCDEDIT% %STORE% /create {memdiag}\n%BCDEDIT% %STORE% /set {memdiag} description \"Windows Memory Diagnostic\"\nrem %BCDEDIT% %STORE% /set {memdiag} device partition\u003d\\Device\\HarddiskVolume1\n%BCDEDIT% %STORE% /set {memdiag} device %partition%\n%BCDEDIT% %STORE% /set {memdiag} path %memtest%\n%BCDEDIT% %STORE% /set {memdiag} locale en-US\n%BCDEDIT% %STORE% /set {memdiag} inherit {globalsettings}\nREM %BCDEDIT% %STORE% /set {memdiag} badmemoryaccess Yes\n%BCDEDIT% %STORE% /toolsdisplayorder {memdiag}\ngoto :eof\n\n\n\n:Ramdisk\nEcho Ramdisk settings\n%BCDEDIT% %STORE% /create {ramdiskoptions}\n%BCDEDIT% %STORE% /set {ramdiskoptions} ramdisksdidevice %partition%\nrem %BCDEDIT% %STORE% /set {ramdiskoptions} ramdisksdipath %ramdisksdipath%\n%BCDEDIT% %STORE% /set {ramdiskoptions} ramdisksdipath \\boot\\boot.sdi \ngoto :eof\n\n\n:MEMTEST\necho MEMTEST \n%BCDEDIT% %STORE% /create {memdiag}\n%BCDEDIT% %STORE% /set {memdiag} description \"Windows Memory Diagnostic\"\nrem %BCDEDIT% %STORE% /set {memdiag} device partition\u003d\\Device\\HarddiskVolume1\n%BCDEDIT% %STORE% /set {memdiag} device %partition%\n%BCDEDIT% %STORE% /set {memdiag} path %memtest%\nrem %BCDEDIT% %STORE% /set {memdiag} locale en-US\nrem %BCDEDIT% %STORE% /set {memdiag} inherit {globalsettings}\nREM %BCDEDIT% %STORE% /set {memdiag} badmemoryaccess Yes\n%BCDEDIT% %STORE% /toolsdisplayorder {memdiag}\n%BCDEDIT% %STORE% /displayorder {memdiag} /addlast\ngoto :eof\n\n\n\n:BCD_ISO_DISK\necho BCD_ISO_DISK\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"Boot ISO (Disk)\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\BCD_ISO_DISK\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n:BCD_ISO_MEM\necho BCD_ISO_MEM\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"Boot ISO (Memory)\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\BCD_ISO_MEM\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:BCD_IMG\necho BCD_IMG\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"Boot IMG (Floppy Image)\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\BCD_IMG\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:BCD_GZ\necho BCD_GZ\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"Boot GZ Zip file (Memdisk)\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\BCD_GZ\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:BCD_ISO_Mac\necho BCD_ISO_Mac\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"Mac OSX Boot Loader (Chameleon)\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\BCD_ISO_Mac\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n:Plop\necho Plop\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"Plop\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\BCD_ISO_Plop\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:GRUB4DOS \necho GRUB4DOS \nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"Grub4dos\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\grub4dos\\grldr\nrem %BCDEDIT% %STORE% /set %guid% path \\grldr.mbr\nrem %BCDEDIT% %STORE% /set %guid% path \\boot\\grub\\grldr.mbr\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:GRUB2\necho GRUB2\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"Grub2\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\grub\\g2ldr\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n:GRUB2EFI\necho GRUB2\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"Grub2 %choice%\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\efi\\boot\\grubx64.efi\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n:BURG\necho BURG\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"Burg\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\burg\\g2ldr\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:SYSLINUX\necho SYSLINUX\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"Syslinux (USB)\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\syslinux\\syslinux.bin\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:ISOLINUX\necho ISOLINUX \nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"Isolinux (CD\\DVD)\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\syslinux\\isolinux.bin\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n:EFI_BootBIN\necho SYSLINUX\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"EFI Boot\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\efi\\microsoft\\boot\\Grub.bin\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n\n:XPPE\necho XP PE\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"WinXP Mini PE\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\SETUPLDR.BIN\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:ISO_Gena_WIM\necho Gena_WIM \nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"GenaXP LiveCD\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\BCDs\\ISO_Gena_WIM\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:XPntldrHDD\necho XP HDD\n%BCDEDIT% %STORE% /create {ntldr} /d \"WinXP {ntldr}\"\n%BCDEDIT% %STORE% /set {ntldr} device %partition%\n%BCDEDIT% %STORE% /set {ntldr} path \\ntldr\n%BCDEDIT% %STORE% /displayorder {ntldr} /addlast\ngoto :eof\n:XPNORMAL\necho XP normal\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"WinXP (SETUPLDR.bin) (CD\\DVD)\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\I386\\SETUPLDR.bin\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n:XPADMIN\necho XP admin\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"WinXP Admin (i386\\SETUPLDU.bin) (CD\\DVD)\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\I386\\SETUPLDU.bin\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n:XPES\necho XP Enter settings\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"WinXP Enter Settings (i386\\SETUPLDE.bin) (CD\\DVD)\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\I386\\SETUPLDE.bin\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:W2Go\necho Windows to go\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% path %applicationpath%\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% description \"Windows to Go [boot] (Win8 Enterprise)\"\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% osdevice %partition%\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:VHDDVD\necho VHDDVD\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device vhd\u003d%Path%\\%VHDname%\n%BCDEDIT% %STORE% /set %guid% path %applicationpath%\n%BCDEDIT% %STORE% /set %guid% osdevice vhd\u003d%Path%\\%VHDname%\nrem %BCDEDIT% %STORE% /set %guid% detecthal Yes\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% description \"VHD (%Path%\\%VHDname%)\"\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:VHDHDD\necho VHDHDD\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device vhd\u003d%Path%\\%VHDname%\n%BCDEDIT% %STORE% /set %guid% path %applicationpath%\n%BCDEDIT% %STORE% /set %guid% osdevice vhd\u003d%Path%\\%VHDname%\nrem %BCDEDIT% %STORE% /set %guid% detecthal Yes\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% description \"VHD (%Path%\\%VHDname%)\"\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n:VHDXDVD\necho VHDDVD\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device vhd\u003d%Path%\\%VHDname%x\n%BCDEDIT% %STORE% /set %guid% path %applicationpath%\n%BCDEDIT% %STORE% /set %guid% osdevice vhd\u003d%Path%\\%VHDname%x\nrem %BCDEDIT% %STORE% /set %guid% detecthal Yes\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% description \"VHDX (%Path%\\%VHDname%x)\"\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:VHDXHDD\necho VHDHDD\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device vhd\u003d%Path%\\%VHDname%x\n%BCDEDIT% %STORE% /set %guid% path %applicationpath%\n%BCDEDIT% %STORE% /set %guid% osdevice vhd\u003d%Path%\\%VHDname%x\nrem %BCDEDIT% %STORE% /set %guid% detecthal Yes\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% description \"VHDX (%Path%\\%VHDname%)\"\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:VHDHDDw7x86\necho VHDHDDw7x86\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device vhd\u003d%Path%\\w7x86.vhd\n%BCDEDIT% %STORE% /set %guid% path %applicationpath%\n%BCDEDIT% %STORE% /set %guid% osdevice vhd\u003d%Path%\\w7x86.vhd\nrem %BCDEDIT% %STORE% /set %guid% detecthal Yes\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% description \"w7x86 VHD (%Path%\\w7x86.vhd)\"\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:VHDHDDw7x64\necho VHDHDDw7x64\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device vhd\u003d%Path%\\w7x64.vhd\n%BCDEDIT% %STORE% /set %guid% path %applicationpath%\n%BCDEDIT% %STORE% /set %guid% osdevice vhd\u003d%Path%\\w7x64.vhd\nrem %BCDEDIT% %STORE% /set %guid% detecthal Yes\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% description \"w7x64 VHD (%Path%\\w7x64.vhd)\"\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:VHDHDDw8x86\necho VHDHDDw8x86\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device vhd\u003d%Path%\\w8x86.vhd\n%BCDEDIT% %STORE% /set %guid% path %applicationpath%\n%BCDEDIT% %STORE% /set %guid% osdevice vhd\u003d%Path%\\w8x86.vhd\nrem %BCDEDIT% %STORE% /set %guid% detecthal Yes\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% description \"w8x86 VHD (%Path%\\w8x86.vhd)\"\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:VHDHDDw8x64\necho VHDHDDw8x64\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device vhd\u003d%Path%\\w8x64.vhd\n%BCDEDIT% %STORE% /set %guid% path %applicationpath%\n%BCDEDIT% %STORE% /set %guid% osdevice vhd\u003d%Path%\\w8x64.vhd\nrem %BCDEDIT% %STORE% /set %guid% detecthal Yes\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% description \"w8x64 VHD (%Path%\\w8x64.vhd)\"\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:pxelinux\necho pxelinux\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"pxelinux\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\syslinux\\pxelinux.bin\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n:pxeWindows\necho pxeWindows\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"pxeboot.n12\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\nREM %BCDEDIT% %STORE% /set %guid% path \\boot\\bootpxe\\grldr\n%BCDEDIT% %STORE% /set %guid% path \\boot\\bootpxe\\pxeboot.n12\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n\n:BootCdriveMBRDVD\necho BootCdriveMBRDVD\nset Drive\u003dc:\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device partition\u003d%Drive%\n%BCDEDIT% %STORE% /set %guid% path \\Windows\\system32\\winload.exe\n%BCDEDIT% %STORE% /set %guid% osdevice partition\u003d%Drive%\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% description \"Windows %Drive%\"\n%BCDEDIT% %STORE% /set %guid% bootmenupolicy %bootmenupolicy%\nrem %BCDEDIT% %STORE% /set %guid% detecthal yes\n%BCDEDIT% %STORE% /set %guid% nx optin\n%BCDEDIT% %STORE% /set %guid% locale en-us\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n:BootCdriveEFIDVD\necho BootCdriveMBRDVD\nset Drive\u003dc:\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device partition\u003d%Drive%\n%BCDEDIT% %STORE% /set %guid% path \\Windows\\system32\\winload.efi\n%BCDEDIT% %STORE% /set %guid% osdevice partition\u003d%Drive%\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% description \"Windows %Drive%\"\n%BCDEDIT% %STORE% /set %guid% bootmenupolicy %bootmenupolicy%\nrem %BCDEDIT% %STORE% /set %guid% detecthal yes\n%BCDEDIT% %STORE% /set %guid% nx optin\n%BCDEDIT% %STORE% /set %guid% locale en-us\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n\n:BootC\necho Windows c:\nset Drive\u003dC:\nset bootmenupolicy\u003dstandard\nrem set bootmenupolicy\u003dlegacy\ngoto :BOOT\n:BootD\necho Windows D:\nset Drive\u003dD:\nset bootmenupolicy\u003dstandard\nrem set bootmenupolicy\u003dlegacy\ngoto :BOOT\n:BootE\necho Windows E:\nset Drive\u003dE:\nset bootmenupolicy\u003dstandard\nrem set bootmenupolicy\u003dlegacy\ngoto :BOOT\n:BootF\necho Windows F:\nset Drive\u003dF:\nset bootmenupolicy\u003dstandard\nrem set bootmenupolicy\u003dlegacy\ngoto :BOOT\n:BootG\necho Windows G:\nset Drive\u003dG:\nset bootmenupolicy\u003dstandard\nrem set bootmenupolicy\u003dlegacy\ngoto :BOOT\n:BootH\necho Windows H:\nset Drive\u003dH:\nset bootmenupolicy\u003dstandard\nrem set bootmenupolicy\u003dlegacy\ngoto :BOOT\n:BootI\necho Windows I:\nset Drive\u003dI:\nset bootmenupolicy\u003dstandard\nrem set bootmenupolicy\u003dlegacy\ngoto :BOOT\n:BootJ\necho Windows J:\nset Drive\u003dJ:\nset bootmenupolicy\u003dstandard\nrem set bootmenupolicy\u003dlegacy\ngoto :BOOT\n:BootK\necho Windows K:\nset Drive\u003dK:\nset bootmenupolicy\u003dstandard\nrem set bootmenupolicy\u003dlegacy\ngoto :BOOT\n:BOOT\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device partition\u003d%Drive%\n%BCDEDIT% %STORE% /set %guid% path %applicationpathHDD%\n%BCDEDIT% %STORE% /set %guid% osdevice partition\u003d%Drive%\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% description \"Windows %choice% %Drive%\"\nrem %BCDEDIT% %STORE% /set %guid% bootmenupolicy %bootmenupolicy%\n%BCDEDIT% %STORE% /set %guid% detecthal yes\n%BCDEDIT% %STORE% /set %guid% nx optin\nrem %BCDEDIT% %STORE% /set %guid% locale en-US\nrem for bitlocker library_custom:0x17000077 set to 3   BcdLibraryIntegerList_AllowedInMemorySettings, i dunno...\nrem %BCDEDIT% %STORE% /set %guid%  ems \"yes\"\nrem %BCDEDIT% %STORE% /ems %guid% on\nrem %BCDEDIT% %STORE% /set %guid2%  RecoveryOs true\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n:WIM_bootwim\nEcho boot.wim\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% systemroot \\windows\n%BCDEDIT% %STORE% /set %guid% detecthal yes\n%BCDEDIT% %STORE% /set %guid% winpe yes\n%BCDEDIT% %STORE% /set %guid% OSDEVICE ramdisk\u003d%path%\\boot.wim,{ramdiskoptions}\n%BCDEDIT% %STORE% /set %guid% DEVICE ramdisk\u003d%path%\\boot.wim,{ramdiskoptions} \n%BCDEDIT% %STORE% /set %guid% description \"Windows Setup %choice% (%path%\\boot.wim)\"\nrem %BCDEDIT% %STORE% /set %guid% path %applicationpath%\nrem %BCDEDIT% %STORE% /set %guid% locale en-US\nrem %BCDEDIT% %STORE% /set %guid% INHERIT {bootloadersettings}\nrem %BCDEDIT% %STORE% /set %guid% bootmenupolicy legacy\nrem %BCDEDIT% %STORE% /set %guid% bootmenupolicy standard\nrem %BCDEDIT% %STORE% /set %guid%  nx optin\nrem %BCDEDIT% %STORE% /set %guid%  ems \"no\"\nrem %BCDEDIT% %STORE% /ems %guid% on\nrem %BCDEDIT% %STORE% /bootems %guid% on\n%BCDEDIT% %STORE% /default %guid%  \n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n\n:WIM_DART_w7x86\necho Win DART 7 %choice% x86 \nset pename\u003d\"Win7 %choice% Setup\\DART x86 (%path%\\w7x86\\boot.wim)\"\nset filena\u003d%Path%\\w7x86\\boot.wim\ngoto :WIMAll\n:WIM_DART_w7x64\necho Win DART 7 %choice% x64 \nset pename\u003d\"Win7 %choice% Setup\\DART x64 (%path%\\w7x64\\boot.wim)\"\nset filena\u003d%Path%\\w7x64\\boot.wim\ngoto :WIMAll\n:WIM_DART_w8x86\necho Win DART 8 %choice% x86 \nset pename\u003d\"Win8 %choice% Setup\\DART x86 (%path%\\w8x86\\boot.wim)\"\nset filena\u003d%Path%\\w8x86\\boot.wim\ngoto :WIMAll\n:WIM_DART_w8x64\necho Win DART 8 %choice% x64 \nset pename\u003d\"Win8 %choice% Setup\\DART x64 (%path%\\w8x64\\boot.wim)\"\nset filena\u003d%Path%\\w8x64\\boot.wim\ngoto :WIMAll\n:WIM_DART_wVx86\necho Win DART Vista %choice% x86 \nset pename\u003d\"Vista %choice% Setup\\DART x86 (%path%\\wVx86\\boot.wim)\"\nset filena\u003d%Path%\\wVx86\\boot.wim\ngoto :WIMAll\n:WIM_DART_wVx64\necho Win DART Vista x64 \nset pename\u003d\"Vista %choice% Setup\\DART x64 (%path%\\wVx64\\boot.wim)\"\nset filena\u003d%Path%\\wVx64\\boot.wim\ngoto :WIMAll\n:WIM_w7x86\necho WinPE 7 %choice%\nset pename\u003d\"WinPE 7 %choice% x86 (%path%\\w7x86.wim)\"\nset filena\u003d%Path%\\w7x86.wim\ngoto :WIMAll\n:WIM_w7x64\necho WinPE 7 %choice% x64\nset pename\u003d\"WinPE 7 %choice% x64 (%path%\\w7x64.wim)\"\nset filena\u003d%Path%\\w7x64.wim\ngoto :WIMAll\n:WIM_w8x86\necho WinPE 8 %choice%\nset pename\u003d\"WinPE 8 %choice% x86 (%path%\\w8x86.wim)\"\nset filena\u003d%Path%\\w8x86.wim\ngoto :WIMAll\n:WIM_w8x64\necho WinPE 8 %choice% x64\nset pename\u003d\"WinPE 8 %choice% x64 (%path%\\w8x64.wim)\"\nset filena\u003d%Path%\\w8x64.wim\ngoto :WIMAll\n\n:WIMALL\nrem create a new ramdisk where you can specify a different boot.sdi.  last entry here http://diddy.boot-land.net/bcdedit/files/examples1.htm#winpe\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /device\u0027) do set ramdisk\u003d%%A \n%BCDEDIT% %STORE% /set %ramdisk% ramdisksdidevice %partition%\n%BCDEDIT% %STORE% /set %ramdisk% ramdisksdipath \\boot\\boot.sdi \nfor /f \"Tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set GUID\u003d%%A\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% detecthal Yes\n%BCDEDIT% %STORE% /set %guid% winpe Yes\n%BCDEDIT% %STORE% /set %guid% osdevice ramdisk\u003d%filena%,%ramdisk%\n%BCDEDIT% %STORE% /set %guid% device ramdisk\u003d%filena%,%ramdisk%\nrem %BCDEDIT% %STORE% /set %guid% osdevice ramdisk\u003d[C:]\\Sources\\boot.wim,%ramdisk%\nrem %BCDEDIT% %STORE% /set %guid% device ramdisk\u003d[C:]\\Sources\\boot.wim,%ramdisk%\nrem %BCDEDIT% %STORE% /set %guid% path %applicationpath%\nrem %BCDEDIT% %STORE% /set %guid% locale en-US\nrem %BCDEDIT% %STORE% /set %guid% INHERIT {bootloadersettings}\nrem %BCDEDIT% %STORE% /set %guid% bootmenupolicy legacy\nrem %BCDEDIT% %STORE% /set %guid% bootmenupolicy standard\nrem %BCDEDIT% %STORE% /set %guid%  nx optin\nrem %BCDEDIT% %STORE% /set %guid%  ems \"no\"\nrem %BCDEDIT% %STORE% /ems %guid% on\nrem %BCDEDIT% %STORE% /bootems %guid% on\nrem %BCDEDIT% %STORE% /default %guid%  \n%BCDEDIT% %STORE% /set %guid% description %pename%\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n\n\n\n\n:ORDERBCD\ntitle Choose Order or quit\ncls\n%BCDEDIT% %STORE%\necho.  \necho   Ordering of items on the Boot Menu    \necho.        \nset _count\u003d1\nfor /f \"tokens\u003d1* usebackq skip\u003d1\" %%a in (`\"%BCDEDIT% %STORE% | c:\\windows\\system32\\find \"identifier\"\"`) do (call :ORDERBCD1 %_count%)\n:ORDERBCD1\nif \"%1\" neq \"\" (set /a _count+\u003d1 \u0026amp;for /f \"tokens\u003d1* usebackq skip\u003d%_count%\" %%c in (`\"%BCDEDIT% %STORE% | c:\\windows\\system32\\find \"description\"\"`) do (echo            %_count%. %%d \u0026amp;goto :eof))\necho.\necho   Choose one you want to put into the first slot or exit\necho.\nset _choice\u003d\nset /p _choice\u003dEnter a number (Q to quit): \nif \"%_choice%\" equ \"\" goto :ORDERBCD\nif \"%_choice%\" equ \"q\" goto :STARTbcd\nif \"%_choice%\" gtr \"0\" if %_choice% lss %_count% for /f \"tokens\u003d2 usebackq skip\u003d%_choice%\" %%a in (`\"%BCDEDIT% %STORE% | c:\\windows\\system32\\find \"identifier\"\"`) do (%BCDEDIT% %STORE% /displayorder %%a /addfirst \u0026amp;goto :STARTbcd)\n%BCDEDIT% %STORE%\npause\ngoto :eof\n\n\n:eof\n\n \n```\n\nCan anybody tell me about the actual use of this Script with more specific and detailed description......  \n\nWill this script be useful for my case ?  \n\nRegards......   \n"
    },
    {
      "id": "186163",
      "timestamp": "2014-07-27T19:09:42+00:00",
      "author": "cdob",
      "content": "\u003e Actually there is no problem/issue with**\u0027zbootmgr.exe\u0027.** It just work perfectly for me.\nWhich bootmgr version do you edit with \u0027zbootmgr.exe\u0027?  \nDoes this include windows 8 SP1 U1 bootmgr?  \nDoes Wimboot booting works that way?  \n\n\u003cbr /\u003e\n\n\u003e Will this script be useful for my case ?\nI don\u0027t know.  \nIt\u0027s about one bcd file. Didn\u0027t you like to avoid this?   \n"
    },
    {
      "id": "186164",
      "timestamp": "2014-07-27T19:27:49+00:00",
      "author": "devdevadev",
      "content": "\u003e Which bootmgr version do you edit with \u0027zbootmgr.exe\u0027?  \n\u003e Does this include windows 8 SP1 U1 bootmgr?  \n\u003e Does Wimboot booting works that way?\n\nI have used \u0027**BOOTMGR_Win7RTM\u0027** and it work for \u0027Win 8.1 U1\u0027 based \u0027boot.wim\u0027 and \u0027WIMBoot.vhdx\u0027.  \n\nI had not tried \u0027**BOOTMGR_Win8.1RTM\u0027** because I don\u0027t have...........Do you have it ?  \n\n\u003e It\u0027s about one bcd file. Didn\u0027t you like to avoid this?\n\nIf script is about one BCD file, then it is not useful for me..........Thanks for alerting me.......  \n\nRegards........   \n"
    },
    {
      "id": "186170",
      "timestamp": "2014-07-27T21:07:16+00:00",
      "author": "cdob",
      "content": "I used Win 8.1 U1 bootmgr for wimboot so far.  \n\n\u003e If script is about one BCD file, then\nyou may use it. Add one setting and create a new bcd file   \n"
    },
    {
      "id": "186174",
      "timestamp": "2014-07-28T00:28:33+00:00",
      "author": "devdevadev",
      "content": "\u003e I used Win 8.1 U1 bootmgr for wimboot so far.\n\nI am also using Win 8.1 U1 bootmgr for WIMBoot so far which is already modified. And \u0027zbootmgr\u0027 does not accept already modified \u0027bootmgr\u0027. I don\u0027t have any unmodified \u0027**BOOTMGR_Win8.1RTM\u0027**in order to test with \u0027zbootmgr\u0027.\n\nDoes \u0027zbootmgr\u0027 accept your Win 8.1 U1 bootmgr ?\n\nRegards\n\n"
    },
    {
      "id": "186195",
      "timestamp": "2014-07-28T22:16:06+00:00",
      "author": "cdob",
      "content": "\u003e Does \u0027zbootmgr\u0027 accept your Win 8.1 U1 bootmgr ?\nI don\u0027t know. I dislike editing bootmgr and prefer to edit bcd.  \n\nA old floppy in RAM patch bcd example, Windows 7 back then:  \n[http://reboot.pro/to...e-2#entry145675](http://reboot.pro/topic/16069-bootmgr-offset-question/page-2#entry145675 \"\")   \n"
    },
    {
      "id": "186196",
      "timestamp": "2014-07-29T07:28:48+00:00",
      "author": "Fryquez",
      "content": "@devdevadev\n\nDon\u0027t use Windows 7 bootmgr to boot a Windows 8, it\u0027s not fully compatible.\n\nIf you really need to change bootmgr than see this post\n\n[http://www.msfn.org/...tmgr-windows-8/](http://www.msfn.org/board/topic/162853-need-help-modify-bootmgr-windows-8/ \"External link\")\n\n"
    },
    {
      "id": "186200",
      "timestamp": "2014-07-29T10:36:56+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e @devdevadev\\[/size\\]\nDon\u0027t use Windows 7 bootmgr to boot a Windows 8, it\u0027s not fully compatible.  \nIf you really need to change bootmgr than see this post  \n\n[http://www.msfn.org/...tmgr-windows-8/](http://www.msfn.org/board/topic/162853-need-help-modify-bootmgr-windows-8/ \"External link\")  \nWhich brings back right to what was already posted on post #2. ![:whistling:](https://reboot.pro/public/style_emoticons/default/happy22.gif)  \n\n@devdevadev  \nJFYI, \"point b.\" is a set of floppy images WITHOUT any need to modify the BOOTMGR or BCD name in them.  \n[http://reboot.pro/to...r-wim/?p\u003d186158](http://reboot.pro/topic/19956-change-path-from-bootmgr-bootbcd-to-wim9mgr-bootwim-wim9mgr-wim/?p\u003d186158 \"\")  \n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)  \nWonko   \n"
    },
    {
      "id": "186202",
      "timestamp": "2014-07-29T14:25:29+00:00",
      "author": "devdevadev",
      "content": "\u003e JFYI, \"point b.\" is a set of floppy images WITHOUT any need to modify the BOOTMGR or BCD name in them.  \n\u003e [http://reboot.pro/to...r-wim/?p\u003d186158](http://reboot.pro/topic/19956-change-path-from-bootmgr-bootbcd-to-wim9mgr-bootwim-wim9mgr-wim/?p\u003d186158 \"\")\n\nYou mean I have to to create three floppy images as follows and have to put then within \\\\_ISO\\\\MAINMENU .\n\n**floppy image 1 -** It will contain **bootmgr** and **\\\\boot\\\\bcd** correspond to **\u0027Win 8.1 U1 Installer\u0027**\n\n**floppy image 2 -** It will contain **bootmgr** and **\\\\boot\\\\bcd** correspond to **\u0027Win8.1U1SE_x64_boot.wim\u0027**  \n**floppy image 3 -** It will contain **bootmgr** and **\\\\boot\\\\bcd** correspond to **\u0027WIMBoot.vhdx\u0027**  \n\nCould I understand correctly or not ?\n\nRegards......\n\n"
    },
    {
      "id": "186203",
      "timestamp": "2014-07-29T14:34:24+00:00",
      "author": "Wonko the Sane",
      "content": "Sure, the idea is that, with no need to \"edit\" or \"rename\" \\*anything\\*.\n\nWhere you put it the floppy images is your problem, of course, or more loosely the problem might be to change Easy2boot scripts/menus to recognize them (or whatever).\n\nBooting through one of them in plain grub4dos command line amounts to (more or less):\n\n```\n\n\n\nmap --mem /floppyN.img (fd0)\nmap --hook\nroot (fd0)\nchainloader /bootmgr\nboot\n```\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "186204",
      "timestamp": "2014-07-29T15:48:00+00:00",
      "author": "devdevadev",
      "content": "It means I have to first create following three floppy images from respective **bootmgr** and **\\\\boot\\\\bcd** .\n\n**1-Win8.1U1_Installer.img**\n\n**2-Win8.1U1SE_x64_boot.img**  \n**3-WIMBoot.img**\n\nand then also have to put following three .mnu files within **Easy2boot** in order to recognize respective floppy images.\n\n**1- Win8.1U1_Installer.mnu**\n\n```\nmap --mem /Win8.1U1_Installer.img (fd0)\nmap --hook\nroot (fd0)\nchainloader /bootmgr\nboot\n```\n\n**2- Win8.1U1SE_x64_Boot.mnu**\n\n```\nmap --mem /Win8.1U1SE_x64_Boot.img (fd0)\nmap --hook\nroot (fd0)\nchainloader /bootmgr\nboot\n```\n\n**3- WIMBoot.mnu**\n\n```\nmap --mem /WIMBoot.img (fd0)\nmap --hook\nroot (fd0)\nchainloader /bootmgr\nboot\n```\n\nAm I going right or not ?\n\nIf \u0027Yes\u0027 , then How to create floppy images from **bootmgr** and **\\\\boot\\\\bcd** ?\n\nRegards....\n\n"
    },
    {
      "id": "186206",
      "timestamp": "2014-07-29T16:54:05+00:00",
      "author": "Wonko the Sane",
      "content": "You have a strange ability for jumping to conclusions as opposed to go with a step by step approach ![:unsure:](https://reboot.pro/public/style_emoticons/default/unsure.png), you cannot seriously think to build an \"advanced\" ultimate-super-mega-hyper boot stick if you don\u0027 t learn first the basics (and yes, making a floppy disk image is a very basic piece of knowledge in the \"booting field\")\n\n1. FIRST learn to make a floppy image, and the ALREADY GIVEN links provide some good hints, however I have one word for you: IMDISK. ^**\\[1\\]**^\n2. Then copy to the floppy image an ALREADY working and tested BOOTMGR + \\\\boot\\\\BCD (i.e. copy to the floppy image your current, tested, working set)\n3. Then try the approach on **COMMAND LINE** \\\u003c- this means **NOT** \"make a .mnu file (whatever a .mnu file is, the extension for grub4dos menu files is .lst by convention, and it needs a \"title\" and it needs NOT a \"boot\" command), it means \"test on command line\".\n4. Then (optionally) optimize the above by using instead of a plain 1.44 Mb floppy image smaller floppy images or try them gzipped, and/or (even more optionally) experiment with small .iso\u0027s or hard disk images instead and the COSMIAS approach (that would BTW remove altogether the need for several menus)\n5. Then repeat the test with different sets of BOOTMGR + \\\\boot\\\\BCD, creating more floppy images (or whatever images)\n6. Then FINALLY find a way to automate/integrate the thing in a set of grub4dos menus or in Easy2boot structure or whatever.\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n\\[1\\] How difficult can it be ![:dubbio:](https://reboot.pro/public/style_emoticons/default/dubbio.gif):\n\n[http://en.lmgtfy.com...oppy disk image](http://en.lmgtfy.com/?q\u003dhow+to+make+a+floppy+disk+image \"External link\")\n\nto find this (just as an example):\n\n[http://www.rmprepusb...orials/winimage](http://www.rmprepusb.com/tutorials/winimage \"External link\")\n\nthere are of course ***tens*** of ways to create a floppy disk images ... you can even use Excel ![:w00t:](https://reboot.pro/public/style_emoticons/default/w00t.gif) and a few basic tools (shameless plug :wink:):\n\n[http://www.msfn.org/...ation/?p\u003d972044](http://www.msfn.org/board/topic/152399-on-bootable-cds-floppy-emulation/?p\u003d972044 \"External link\")\n\n[http://www.msfn.org/...mages/?p\u003d988732](http://www.msfn.org/board/topic/152097-on-superfloppies-and-their-images/?p\u003d988732 \"External link\")\n\nchoose the one you find more convenient... (the spreadsheet above is to be considered \"advanced-advanced\" ![:ph34r:](https://reboot.pro/public/style_emoticons/default/scared9.gif), but by reading those threads and looking at how the spreadsheet is made I am sure you can learn a lot of things)\n\n"
    },
    {
      "id": "186207",
      "timestamp": "2014-07-29T17:36:48+00:00",
      "author": "devdevadev",
      "content": "Sorry for silly question......Actually I had never used floppy images till now. I had only created and used .imgPTN images with the help of IMDISK. I was thinking that creating**\u0027****floppyN.** **img\u0027** will be little tricky/different. It\u0027s why I asked you without doing GOOGLE. But now it\u0027s looking that .img images are just like .imgPTN images. Only difference in extension and **COMMAND LINE**approach. Actually I became so happy to know about floppy images method that I forget to GOOGLE for it.............I think 1.44MB floppy disk images will be more useful for me ............\n\nThanks a lot for such a great alternative method......It\u0027s looking very interesting and amazing.\n\nRegards......\n\n"
    },
    {
      "id": "186132",
      "timestamp": "2014-07-27T03:48:15+00:00",
      "author": "devdevadev",
      "content": "***Hello Everyone....***\n\nSome time ago I had found a **\u0027USB.zip\u0027** from [http://windowsforum.kr/review/5665807](http://windowsforum.kr/review/5665807 \"External link\") . But this link is currently not working. Within \u0027USB.zip\u0027 I have found following files which are looking modified version of **BOOTMGR** and **BCD**.\n\n**BDF7MBR -\\\u003e \\\\Boot\\\\BDF**\n\n**BIS7MGR -\\\u003e \\\\Boot\\\\BIS**\n\n**BTP7MGR -\\\u003e \\\\Boot\\\\BTP**\n\n**INSTMGR -\\\u003e \\\\Boot\\\\BCD**\n\n![index.php?app\u003dcore\u0026module\u003dattach\u0026section](http://reboot.pro/index.php?app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d14983)\n\nI want to modify**\u0027BOOTMGR\u0027** and **\u0027BCD\u0027** as follows. But I don\u0027t know how to do this ?\n\n-------------------------------------------------------------------------------------------------------------------\n\n**(BOOTMGR -\\\u003e \\\\Boot\\\\BCD)** to **(WIM9MGR -\\\u003e \\\\Boot\\\\WIM)** / **(WIM9MGR -\\\u003e \\\\WIM)**  \n**(BOOTMGR -\\\u003e \\\\Boot\\\\BCD)** to **(VHDXMGR -\\\u003e \\\\Boot\\\\VHD)** / **(VHDXMGR -\\\u003e \\\\VHD)**\n\n-------------------------------------------------------------------------------------------------------------------  \nIf anybody know about how to modify **\u0027BOOTMGR\u0027** and **\u0027BCD\u0027** in above fashion then please help me........  \n**Note-** I know I can create (bootmgr1 ,bootmgr2 , bootmgr3....) and (bc1, bc2 ,bc3....) by using **\u0027zbootmgr.exe\u0027** . but I want a method/tool other than **\u0027zbootmgr.exe\u0027**.  \n***Thanks in Advance***  \n***Regards.....***\n\n[![USB.zip Contents.png](http://reboot.pro/uploads/monthly_07_2014/post-65263-0-39603800-1406431914_thumb.png)](http://reboot.pro/uploads/monthly_07_2014/post-65263-0-39603800-1406431914.png \"USB.zip Contents.png - Size: 405.96KB\"){#ipb-attach-url-14983-0-71885800-1676066499}\n\n"
    },
    {
      "id": "186143",
      "timestamp": "2014-07-27T13:21:21+00:00",
      "author": "Wonko the Sane",
      "content": "And the idea of searching a bit didn\u0027t cross your mind, right?\n\nHere:\n\n[http://reboot.pro/to...r-of-windows-8/](http://reboot.pro/topic/16824-how-to-modify-bootmgr-of-windows-8/ \"\")\n\n[http://reboot.pro/fi...ls-bootmgrntfs/](http://reboot.pro/files/file/121-lznt1-tools-bootmgrntfs/ \"\")\n\nWhich BTW were already provided to you here some time ago:\n\n[http://reboot.pro/to...otmgr-boot-bcd/](http://reboot.pro/topic/19424-how-to-edit-the-file-path-bootmgr-boot-bcd/ \"\")\n\nSo we are back to the \"I don\u0027t understand\" (or \"I don\u0027t want to understand\") previous art, for some reasons I want to do it differently, I don\u0027t care about any limitation that is impossible to overcome, and since I cannot do it, someone else should do it for me? ![:dubbio:](https://reboot.pro/public/style_emoticons/default/dubbio.gif)\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "186144",
      "timestamp": "2014-07-27T14:37:53+00:00",
      "author": "devdevadev",
      "content": "**@wonko**\n\nYou mean I have to use **\u0027LZNT1_Tools\u0027**in order to change file path of bootmgr (boot \\\\ BCD) ?\n\nIf \u0027Yes\u0027 , then I am unable to understand the procedure for changing file path of bootmgr with the help of **\u0027LZNT1_Tools\u0027** **?**\n\nIf you don\u0027t mind then Can you please provide me some simple step by step procedure instead of just sharing lengthy and complex links again and again.\n\nInstead of sharing long confusing posts please tell me about the **exact tools/procedure** in order to change file path of bootmgr.\n\nCurrently I am using **\u0027zbootmgr.exe\u0027** for this purpose but **\u0027zbootmgr.exe\u0027** have some limitations. It\u0027s why I want alternative **simple tool/method** which will allow me to choose desired name for \u0027bootmgr\u0027 and \u0027bcd\u0027.\n\nThanks in Advance\n\n"
    },
    {
      "id": "186145",
      "timestamp": "2014-07-27T15:01:14+00:00",
      "author": "Wonko the Sane",
      "content": "The \"generic\" process is:\n\n1. uncompress the BOOTMGR\n2. *change whatever you want in it* \\\u003c- this assumes more than basic knowledge about using a hex editor and some experimenting\n3. make sure to change the checksum or disable the the check\n4. recompress it\n\nWhat the given resources may provide you with are #1, #3 and #4, what you do in #2 (and whether it will work or not) is entirely up to you.\n\nWhich EXACT limitation(s) did you find in zbootmgr.exe?\n\nWhat is the REASON of this(these) limitations(s)?\n\nWHY would other methods be needed IF there were not such limitations?\n\nWHY yet other methods may be needed to work around further limitations of these other methods?\n\nWHAT IF some of the \"limitations\" of a given method are not actually a \"limitation\" but actually something \"impossible\"?\n\nDid you manage to understand that each SPECIFIC, EXACT, version of BOOTMGR (the piece of info you completely failed to provide) may need one or the other method (or possibly a suitable method does not even exist)?\n\nDon\u0027t bother to reply to the above questions, they were made only for rhetorical purposes. ![:whistling:](https://reboot.pro/public/style_emoticons/default/happy22.gif)\n\nYou could restart from here:\n\n[http://reboot.pro/to...e-bootmgr-file/](http://reboot.pro/topic/16291-how-to-create-bootmgr-file/ \"\")\n\nBy providing the info asked here:\n\n[http://reboot.pro/to...-file/?p\u003d148420](http://reboot.pro/topic/16291-how-to-create-bootmgr-file/?p\u003d148420 \"\")\n\nAND read this (link provided in the above thread):\n\n[http://reboot.pro/to...ffset-question/](http://reboot.pro/topic/16069-bootmgr-offset-question/ \"\")\n\nand at least TRY to read and understand the provided resources, though we are still in the original situation, you want to do something \"extremely advanced\" (IMHO also without a logical reason) without having the needed \"extremely advanced\" knowledge of the mechanisms involved.\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "186148",
      "timestamp": "2014-07-27T15:23:07+00:00",
      "author": "devdevadev",
      "content": "**\u0027zbootmgr.exe\u0027** does not allow me to choose desired name for \u0027**BCD\u0027** (i.e. WIM, VHD etc...). **\u0027zbootmgr.exe\u0027** also does not allow me to change file path of **\u0027BOOTMGR\u0027** from **\\\\Boot\\\\BCD** to **\\\\WIM**or **\\\\VHD**.\n\nYou mean there is no other solution other than **\u0027generic\u0027 process** in order to change file path of **\u0027BOOTMGR\u0027** from\n\n**\\\\Boot\\\\BCD** to **\\\\WIM**or **\\\\VHD ?**\n\nYou mean the modified **\u0027BOOTMGR\u0027** files ( **BDF7MBR ,****BIS7MGR ,** **BTP7MGR ,** **INSTMGR**) which I have were modified with the help of \u0027generic\u0027 process ?\n\nRegards.......\n\n"
    },
    {
      "id": "186150",
      "timestamp": "2014-07-27T16:09:40+00:00",
      "author": "cdob",
      "content": "Why do you like to change bootmgr at all?  \n\nHow do you use different bootmgr? Do you chainload at grub4dos?  \n\nWhat about one bootmgr?  \n-different bcd files, dd one at boot  \n-or patch bcd in RAM   \n"
    },
    {
      "id": "186151",
      "timestamp": "2014-07-27T16:10:32+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e **\u0027zbootmgr.exe\u0027** does not allow me to choose desired name for \u0027BCD\u0027(i.e. WIM, VHD etc...). \u0027zbootmgr.exe\u0027 also does not allow me to change file path of **\u0027BOOTMGR\u0027** from **\\\\Boot\\\\BCD** to **\\\\WIM** / **\\\\VHD** .\n\nReally? ![:w00t:](https://reboot.pro/public/style_emoticons/default/w00t.gif)  \nThat is an issue. ![:dubbio:](https://reboot.pro/public/style_emoticons/default/dubbio.gif)  \nThe fact that ADDITIONALLY it won\u0027t work for a non-Vista-SP0 or non-WAIK-for-7-version of the BOOTMGR file is probably a trifling detail?  \nReally finding this piece of info in the provided link is not that much work:  \n[http://reboot.pro/to...e-bootmgr-file/](http://reboot.pro/topic/16291-how-to-create-bootmgr-file/ \"\")  \nSee if this (complementary to the already given links) helps:  \n[http://www.msfn.org/...at-kind-of-bcd/](http://www.msfn.org/board/topic/162794-help-me-detect-what-kind-of-bcd/ \"External link\")  \n\n\u003e You mean there is no other solution other than **\u0027generic\u0027 process** in order to change file path of **\u0027BOOTMGR\u0027** from  \n\u003e **\\\\Boot\\\\BCD** to **\\\\WIM** or **\\\\VHD ?**\n\nNo, I mean that \"by definition\" the \"generic process\" is \"generic\" and applies \"generically\" to ALL possible methods of modifying a compressed BOOTMGR, AND I also mean that changing \\\\Boot\\\\BCD to \\\\WIM may also NOT be possible at all without some serious work of decompiling and recompiling the BOOTMGR.  \nThe alternative, as seen, may be to patch the BCD or BOOTMGR in RAM, but still the patch needs to be devised.  \n\n\u003cbr /\u003e\n\n\u003e You mean the modified \u0027BOOTMGR\u0027 files ( **BDF7MBR , \\[/size\\]**\\[/size\\]**BIS7MGR , \\[/size\\]** **BTP7MGR , \\[/size\\]** **INSTMGR\\[/size\\]** ) which I have were modified with the help of \u0027generic\u0027 process ?\n\nNo, I have NO idea how the files you have, and that you got \"from somewhere on the internet\", were modified, but again, by definition a \"generic\" process is \"generic\".  \nNow since you have the files and were given some (good ![:unsure:](https://reboot.pro/public/style_emoticons/default/unsure.png)) hints on the tools that might be used to inspect them, I quess you should be able find your answers yourself.  \n\n\u003cbr /\u003e\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)  \nWonko\n\n"
    },
    {
      "id": "186155",
      "timestamp": "2014-07-27T16:39:24+00:00",
      "author": "devdevadev",
      "content": "\u003e Why do you like to change bootmgr at all?  \n\u003e\n\u003e How do you use different bootmgr? Do you chainload at grub4dos?  \n\u003e\n\u003e What about one bootmgr?  \n\u003e -different bcd files, dd one at boot  \n\u003e -or patch bcd in RAM\n\nYes, I use different bootmgr in order to chainload at grub4dos. I know I can use one bootmgr and add multiple boot entries in \u0027BCD\u0027 but it increase number of selection in order to boot WIM, VHD etc....\n\nCurrently I am using three different **\u0027bootmgr\u0027** for **\u0027Win 8.1 U1_Installer\u0027 , \u0027WIMBoot.vhdx\u0027** and **\u0027Win8.1U1SE_x64_boot.wim\u0027** in order to chainload at grub4dos (E2B). I don\u0027t prefer one \u0027bootmgr\u0027 because I do not want to see \u0027Boot Manager\u0027 screen in order to select entries. I want to select entries within form Easy2boot menu.\n\nActually there is no problem/issue with**\u0027zbootmgr.exe\u0027.** It just work perfectly for me. But it would be more better if I learn a simple method in order to change file path of BOOTMGR from \u0027**\\\\Boot\\\\BCD)** to **\\\\Boot\\\\WIM**?\n\nRegards\n\n"
    },
    {
      "id": "186156",
      "timestamp": "2014-07-27T16:51:52+00:00",
      "author": "Wonko the Sane",
      "content": "Can you understand the ++**simple**++ notion that changing the filename \\\\boot\\\\BCD to filename \\\\boot\\\\WIM is one thing and that changing BOTH filename AND path from \\\\boot\\\\BCD to \\\\WIM are two **VERY DIFFERENT** things?  \n\nWhat do you think that the info given here (by **cdob** ![:worship:](https://reboot.pro/public/style_emoticons/default/worship.gif)) is about?  \n[http://www.msfn.org/...at-kind-of-bcd/](http://www.msfn.org/board/topic/162794-help-me-detect-what-kind-of-bcd/ \"External link\")\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "186157",
      "timestamp": "2014-07-27T17:19:00+00:00",
      "author": "devdevadev",
      "content": "\u003e Can you understand the ++**simple**++ notion that changing the filename \\\\boot\\\\BCD to filename \\\\boot\\\\WIM is one thing and that changing BOTH filename AND path from \\\\boot\\\\BCD to \\\\WIM are two **VERY DIFFERENT** things?\n\nYes, I can understand that both are two different things. **BTW**changing filename \\\\boot\\\\BCD to filename \\\\boot\\\\WIM does not make any sense without changing file path of BOOTMGR.\n\nActually ++\" changing file path of BOOTMGR from \u0027**\\\\Boot\\\\BCD)** to **\\\\Boot\\\\WIM**++ ++\"++ already indicating for changing BOTH file **name** AND **path** from **\\\\boot\\\\BCD** to**\\\\boot** **\\\\WIM** . Word **\u0027WIM\u0027**clearly express that I am also talking about changing file name along with changing file path of BOOTMGR.\n\nI think both ++**\\\\Boot\\\\BCD** and **\\\\Boot\\\\WIM**++ are not just two different file names but also two different file path of **\u0027BOOTMGR\u0027**. Am I wrong ?\n\nRegards......\n\n"
    },
    {
      "id": "186158",
      "timestamp": "2014-07-27T17:52:19+00:00",
      "author": "Wonko the Sane",
      "content": "No, no, no. ![:frusty:](https://reboot.pro/public/style_emoticons/default/frusty.gif)\n\nYou completely failed to READ this topic (to which you were pointed some time ago, here: [http://reboot.pro/to...t-bcd/?p\u003d185192](http://reboot.pro/topic/19424-how-to-edit-the-file-path-bootmgr-boot-bcd/?p\u003d185192 \"\") ) :\n\n[http://reboot.pro/to...usb-sub-folder/](http://reboot.pro/topic/8043-booting-vista2008w7-from-usb-sub-folder/ \"\")\n\nALL of it.\n\nI will try to tell you this in simpler words.\n\nThere are NO particular issues in changing the NAME of the BCD store from \"BCD\" to ANY other NAME ++as long a++ s the new NAME is ***still three characters long***, but you might need, depending on the exact specific version of BOOTMGR, to workaround some compression/checksums/integrity checks.\n\nThe PATH to the BCD store, which is hardcoded to \"\\\\boot\\\\\" cannot AFAIK be changed (or changed as easily)\n\nIf you are going to use a single BOOTMGR file, changing on the fly the NAME (and not the path) of the file \\\\boot\\\\BCD to \\\\boot\\\\WIM can be done with grub4dos.\n\nBut, if you are determined to use several different BOOTMGR files (i.e. you are OK with the space these several copies need), it makes no real sense to modify at all any of them or to rename them, as it is IMNSHO ++easier, faster and more convenient++ to use **INSTEAD** a set of floppy images, as said in the mentioned thread, starting from here:\n\n[http://reboot.pro/to...folder/?p\u003d73358](http://reboot.pro/topic/8043-booting-vista2008w7-from-usb-sub-folder/?p\u003d73358 \"\")\n\nAnd you could even use a COSMIAS approach ![:w00t:](https://reboot.pro/public/style_emoticons/default/w00t.gif) (shameless plug :wink:):\n\n[http://reboot.pro/to...-to-g4d-images/](http://reboot.pro/topic/17807-release-cosmias-a-new-approach-to-g4d-images/ \"\")\n\nbut until you do not try (and succeed) to understand the basics it won\u0027t help you much. ![:(](https://reboot.pro/public/style_emoticons/default/sad.png)\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "186159",
      "timestamp": "2014-07-27T18:04:02+00:00",
      "author": "cdob",
      "content": "\u003e changing filename \\\\boot\\\\BCD to filename \\\\boot\\\\WIM does not make any sense without changing file path of BOOTMGR.\n\u003e dd one at boot\ngrub4dos can copy files, dd is one possibility,  \nYou use this approach already: AutoUnattend.xml  \n\nWith the same approach  \n\\\\bootmgr  \n\\\\boot\\\\bcd  \n\\\\boot\\\\bcd.01  \n\\\\boot\\\\bcd.02  \n\nAt menu.lst dd \\\\boot\\\\bcd.01 to \\\\boot\\\\bcd.  \n\n\u003e I know I can use one bootmgr and add multiple boot entries in \u0027BCD\u0027 but it increase number of selection in order to boot WIM, VHD etc...\nEdit \\\\boot\\\\bcd at grub4dos, change default entry.  \nThis dosn\u0027t increase number of selection in order to boot.  \n\n\u003cbr /\u003e\n\nThere are floppy images too. That\u0027s another story.  \n\nIn my opinion: do not edit bootmgr, especial since Windows 8 bootmgr.  \nSearch another work around.   \n"
    },
    {
      "id": "186161",
      "timestamp": "2014-07-27T19:02:15+00:00",
      "author": "devdevadev",
      "content": "\u003e cdob, on 27 Jul 2014 - 11:34 PM, said:  \n\u003e\n\u003e Search another work around.\n\n**the oven **.** org / index.php?topic\u003d530.msg8154**   \n\nHere is a **script** created by **HALIKUS** that will make a custom BCD File from scratch, or add to the systems bcd. It works for both efi and mbr. Just rem out the things you want or dont want in :DVDMBR, :HDDMBR, :DVDEFI, and :HDDEFI and change any paths that differ.\n\n```\n@echo off\nrem http://diddy.boot-land.net/bcdedit/files/examples1.htm#winpe\nrem for VMWARE   firmware\u003d \"efi\"\ntitle Windows V 7 8 install.wim boot.wim and BCD manipulation\n:checkPrivileges \nNET FILE 1\u0026gt;NUL 2\u0026gt;NUL\nif \u0027%errorlevel%\u0027 \u003d\u003d \u00270\u0027 ( goto gotPrivileges ) else ( goto getPrivileges ) \n:getprivileges \nif \u0027%1\u0027\u003d\u003d\u0027ELEV\u0027 (shift \u0026amp; goto gotPrivileges)  \nsetlocal DisableDelayedExpansion\nset \"batchPath\u003d%~0\"\nsetlocal EnableDelayedExpansion\nECHO set UAC \u003d CreateObject^(\"Shell.Application\"^) \u0026gt; \"%temp%\\OEgetPrivileges.vbs\" \nECHO UAC.ShellExecute \"!batchPath!\", \"ELEV\", \"\", \"runas\", 1 \u0026gt;\u0026gt; \"%temp%\\OEgetPrivileges.vbs\" \n\"%temp%\\OEgetPrivileges.vbs\" \nexit /B \n:gotPrivileges \n\n:STARTBCD\n\nREM :::Choose variables here and below for :DVDMBR, :HDDMBR, :DVDEFI, and :HDDEFI\nset BCD\u003d%~dp0BCD\nSet BCDEDIT\u003d%SYSTEMROOT%\\System32\\BCDEDIT.exe\nREM partition letter is the drive where your files you want to boot are.  For DVD, \"boot\" is used.\nset PartitionLetter\u003dD:\n\ntitle Choose desired BCD \ncls\necho.\necho.\necho        Choose BCD type... \necho.          \necho. \necho   1 \u003d DVD MBR (%BCD%) (Make custom BCD file)\necho.\necho   2 \u003d HDD MBR (System) (Add entries to your system BCD)\necho. \necho   3 \u003d DVD EFI (%BCD%) (Make custom BCD file)\necho.\necho   4 \u003d HDD EFI (System) (Add entries to your system BCD)\necho. \necho   5 \u003d DELETE Entry\necho   6 \u003d RENAME BCD \necho   7 \u003d Change ORDER of BCD\necho   8 \u003d Add Specific Entry to BCD\necho   9 \u003d Add Win8 Safemode to system BCD (Must be logged in to Win8)\necho   10 \u003d Boot Legacy (Win7)\necho   11 \u003d Boot Standard (Win8)\necho   12 \u003d Choose Deafult boot entry\necho.\necho   ** HDD Wim and VHD files Partition \u003d %PartitionLetter%\necho.\necho. \nSET /P IM\u003dInput number : \nSET DD\u003d\nIf \"%IM%\"\u003d\u003d\"1\" goto :DVDMBR\nIf \"%IM%\"\u003d\u003d\"2\" goto :HDDMBR\nIf \"%IM%\"\u003d\u003d\"3\" goto :DVDEFI\nIf \"%IM%\"\u003d\u003d\"4\" goto :HDDEFI\nIf \"%IM%\"\u003d\u003d\"5\" goto :DeleteBCD\nIf \"%IM%\"\u003d\u003d\"6\" goto :RenameBCD\nIf \"%IM%\"\u003d\u003d\"7\" goto :OrderBCD\nIf \"%IM%\"\u003d\u003d\"8\" goto :AddBCD \nIf \"%IM%\"\u003d\u003d\"9\" goto :Win8Safemode\nIf \"%IM%\"\u003d\u003d\"10\" goto :BootLegacy\nIf \"%IM%\"\u003d\u003d\"11\" goto :BootStandard\nIf \"%IM%\"\u003d\u003d\"12\" goto :DefaultBCD\nIf \"%DD%\"\u003d\u003d\"\" echo INVALID NUMBER\nIf \"%DD%\"\u003d\u003d\"\" goto :STARTBCD\n\n\n:DVDMBR\nrem echo f | xcopy ISO_2 bcd\nrem set BCD\u003d%~dp0BCD\nset STORE\u003d/store %BCD%\nrem %BCDEDIT% /createstore %BCD%\nset PartitionLetter\u003dboot\nset Partition\u003dboot\nset Path\u003d[boot]\\sources\nset PathXPWIM\u003d[boot]\\boot\nREM choice is for efi, leave blank for mbr\nset choice\u003d\nset applicationpath\u003d\\Windows\\system32\\boot\\winload.exe\nset applicationpathHDD\u003d\\Windows\\system32\\winload.exe\nset VHDname\u003dVHD.vhd\nrem set ramdisksdipath\u003d\\boot\\boot.sdi\nset bootmenupolicy\u003dstandard\nset DisplayBootMenu\u003d%BCDEDIT% %STORE% /set {bootmgr} DisplayBootMenu True\nset memtest\u003d\\boot\\memtest.exe\ngoto :CREATECUSTOMDVD%choice%\n\n\n:HDDMBR\nset STORE\u003d\nrem set PartitionLetter\u003dd:\nset Partition\u003dPartition\u003d%PartitionLetter%\nset Path\u003d[%PartitionLetter%]\\sources\nREM choice is for efi, leave blank for mbr\nset choice\u003d\nset applicationpath\u003d\\Windows\\system32\\winload.exe\nset applicationpathHDD\u003d\\Windows\\system32\\winload.exe\nset VHDname\u003dVHD.vhd\nrem ?\nrem set ramdisksdipath\u003d\\Windows\\system32\\boot.sdi\nset DisplayBootMenu\u003d%BCDEDIT% %STORE% /set {bootmgr} DisplayBootMenu False\nset memtest\u003d\\Windows\\Boot\\PCAT\\memtest.exe\n%BCDEDIT% /set {current} bootmenupolicy standard\ngoto :CREATECUSTOMHDD%choice%\n\n\n\n:DVDEFI\nset STORE\u003d/store %BCD%\nset PartitionLetter\u003dboot\nset Partition\u003dboot\nset Path\u003d[boot]\\sources\nREM choice is for efi, leave blank for mbr\nset choice\u003dEFI\nset applicationpath\u003d\\Windows\\system32\\boot\\winload.efi\nset applicationpathHDD\u003d\\Windows\\system32\\winload.efi\nset VHDname\u003dVHD.vhd\nset bootmenupolicy\u003dstandard\nrem set ramdisksdipath\u003d\\boot\\boot.sdi\nset DisplayBootMenu\u003d%BCDEDIT% %STORE% /set {bootmgr} DisplayBootMenu True\nset memtest\u003d\\efi\\microsoft\\boot\\memtest.efi\ngoto :CREATECUSTOMDVD%choice%\n\n\n\n:HDDEFI\nset STORE\u003d\nrem set PartitionLetter\u003dd:\nset Partition\u003dPartition\u003d%PartitionLetter%\nset Path\u003d[%PartitionLetter%]\\sources\nREM choice is for efi, leave blank for mbr\nset choice\u003dEFI\nset applicationpath\u003d\\Windows\\system32\\winload.efi\nset applicationpathHDD\u003d\\Windows\\system32\\winload.efi\nset VHDname\u003dVHD.vhd\nrem ?\nrem set ramdisksdipath\u003d\\Windows\\system32\\boot.sdi\nset DisplayBootMenu\u003d%BCDEDIT% %STORE% /set {bootmgr} DisplayBootMenu False\nset memtest\u003d\\Windows\\Boot\\EFI\\memtest.efi\n%BCDEDIT% /set {current} bootmenupolicy standard\ngoto :CREATECUSTOMHDD%choice%\n\n\n\n\n\n:CREATECUSTOMDVD\ncall :CREATEBCD\ncall :Ramdisk\ncall :BootCdriveMBRDVD\ncall :WIM_bootwim\ncall :GRUB4DOS \ncall :GRUB2 \nrem call :GRUB24DOS \ncall :SYSLINUX\ncall :ISOLINUX\ncall :BCD_ISO_DISK\ncall :BCD_ISO_MEM\ncall :BCD_IMG\ncall :BCD_GZ\nrem call :ISO_Gena_WIM\nrem call :XPWIM\nrem call :WIM_w7x86\nrem call :WIM_w7x64\nrem call :WIM_w8x86\nrem call :WIM_w8x64\ncall :WIM_DART_w7x86\ncall :WIM_DART_w7x64\ncall :WIM_DART_w8x86\ncall :WIM_DART_w8x64\nrem call :WIM_DART_wVx86\nrem call :WIM_DART_wVx64\ncall :XPntldrHDD\ncall :XPNORMAL\nrem call :XPADMIN\nrem call :XPES\nrem call :ISO_Mac\nrem call :Plop\nrem call :BootC\nrem call :BootD\nrem call :BootE\nrem call :BootF\nrem call :BootG\nrem call :BootH\nrem call :W2Go\nrem call :VHDDVD\nrem call :VHDHDD\nrem call :VHDXDVD\nrem call :VHDXHDD\nrem call :pxeWindows\ncall :pxelinux\ncall :EFI_BootBIN\nrem call :MEMTEST\n%BCDEDIT% %STORE% /timeout 10\nrem %BCDEDIT% %STORE% /enum\nrem pause\ngoto :ORDERBCD\ngoto :StartBCD\n\n\n\n:CREATECUSTOMHDD\nrem bcdboot C:\\Windows\nrem call :CREATEBCD\nrem call :BootC\ncall :Ramdisk\nrem call :VHDHDDw7x86\nrem call :VHDHDDw7x64\ncall :VHDHDDw8x86\nrem call :VHDHDDw8x64\nrem call :XPPE\ncall :WIM_w8x64\nrem call :WIM_w8x86\nrem call :WIM_w7x64\nrem call :WIM_w7x86\nrem call :WIM_DART_w7x86\nrem call :WIM_DART_w7x64\nrem call :WIM_DART_w8x86\nrem call :WIM_DART_w8x64\nrem call :WIM_DART_wVx86\nrem call :WIM_DART_wVx64\nrem call :XPntldrHDD\nrem call :XPNORMAL\nrem call :XPADMIN\nrem call :XPES\nrem call :BootD\nrem call :BootE\nrem call :BootF\nrem call :BootG\nrem call :BootH\nrem call :W2Go\nrem call :VHDDVD\nrem call :VHDHDD\nrem call :VHDXDVD\nrem call :VHDXHDD\nrem call :WIM_bootwim\ncall :GRUB4DOS \ncall :SYSLINUX\n%BCDEDIT% %STORE% /default {current}\n%BCDEDIT% %STORE% /timeout 10\nrem %BCDEDIT% %STORE% /enum\nrem pause\ngoto :ORDERBCD\ngoto :StartBCD\n\n\n\n:CREATECUSTOMDVDEFI\ncall :CREATEBCD\ncall :Ramdisk\ncall :WIM_bootwim\nrem call :GRUB4DOS \nrem call :SYSLINUX\nrem call :ISOLINUX\nrem call :XPPE\nrem call :WIM_w7x86\nrem call :WIM_w7x64\nrem call :WIM_w8x86\nrem call :WIM_w8x64\nrem call :WIM_DART_w7x86\ncall :WIM_DART_w8x64\nrem call :WIM_DART_w8x86\ncall :WIM_DART_w7x64\nrem call :WIM_DART_w8x86\nrem call :WIM_DART_wVx86\nrem call :WIM_DART_wVx64\nrem call :XPntldrHDD\nrem call :XPNORMAL\nrem call :XPADMIN\nrem call :XPES\nrem call :BootC\nrem call :BootD\nrem call :BootE\nrem call :BootF\nrem call :BootG\nrem call :BootH\nrem call :W2Go\nrem call :VHDDVD\nrem call :VHDHDD\nrem call :VHDXDVD\nrem call :VHDXHDD\nrem call :GRUB2EFI\nrem call :BootC\nrem call :BootCdriveMBRDVD\nrem call :GRUB4DOS \ncall :BootCdriveEFIDVD\n%BCDEDIT% %STORE% /timeout 10\nrem %BCDEDIT% %STORE% /enum\nrem pause\ngoto :ORDERBCD\ngoto :StartBCD\n\n\n\n\n\n:CREATECUSTOMHDDEFI\nrem bcdboot C:\\Windows\nrem call :CREATEBCD\ncall :Ramdisk\nrem call :WIM_bootwim\nrem call :BootC\nrem call :GRUB4DOS \nrem call :SYSLINUX\nrem call :ISOLINUX\nrem call :XPPE\nrem call :WIM_w7x86\ncall :WIM_w7x64\nrem call :WIM_w8x86\ncall :WIM_w8x64\nrem call :WIM_DART_w7x86\nrem call :WIM_DART_w7x64\nrem call :WIM_DART_w8x86\nrem call :WIM_DART_w8x64\nrem call :WIM_DART_wVx86\nrem call :WIM_DART_wVx64\nrem call :XPntldrHDD\nrem call :XPNORMAL\nrem call :XPADMIN\nrem call :XPES\nrem call :BootD\nrem call :BootE\nrem call :BootF\nrem call :BootG\nrem call :BootH\nrem call :W2Go\nrem call :VHDDVD\nrem call :VHDHDD\nrem call :VHDXDVD\nrem call :VHDXHDD\n%BCDEDIT% %STORE% /default {current}\n%BCDEDIT% %STORE% /timeout 10\nrem %BCDEDIT% %STORE% /enum\nrem pause\ngoto :ORDERBCD\ngoto :StartBCD\n\n\n\n\n\n:DELETEBCD \necho. \necho   1 \u003d DVD (%BCD%)\necho.\necho   2 \u003d HDD (System)\necho.\necho. \nSET /P IM\u003dInput number : \nSET DD\u003d\nIf \"%IM%\"\u003d\u003d\"1\" goto :DVD\nIf \"%IM%\"\u003d\u003d\"2\" goto :HDD\nIf \"%DD%\"\u003d\u003d\"\" echo INVALID NUMBER\nIf \"%DD%\"\u003d\u003d\"\" goto :STARTBCD\n\n:DVD\nset STORE\u003d/store %BCD%\ngoto :DELETEBCD1\n\n:HDD\nset STORE\u003d\ngoto :DELETEBCD1\n\n:DELETEBCD1\nset _count\u003d1\nfor /f \"tokens\u003d1* usebackq skip\u003d1\" %%a in (`\"%BCDEDIT% %STORE% | c:\\windows\\system32\\find \"identifier\"\"`) do (call :DELETEBCD2 %_count%)\n:DELETEBCD2\nif \"%1\" neq \"\" (set /a _count+\u003d1 \u0026amp;for /f \"tokens\u003d1* usebackq skip\u003d%_count%\" %%c in (`\"%BCDEDIT% %STORE% | c:\\windows\\system32\\find \"description\"\"`) do (echo            %_count%. %%d \u0026amp;goto :eof))\nset _choice\u003d\necho.\necho.\nset /p _choice\u003dEnter a number (Q to quit): \necho.\necho.\nif \"%_choice%\" equ \"\" goto :STARTBCD \nif \"%_choice%\" gtr \"0\" if %_choice% lss %_count% for /f \"tokens\u003d2 usebackq skip\u003d%_choice%\" %%a in (`\"%BCDEDIT% %STORE% | c:\\windows\\system32\\find \"identifier\"\"`) do (%BCDEDIT% %STORE% /delete %%a /f \u0026amp;goto :DELETEBCD1)\ngoto :STARTBCD\n\n\n\n\n\n\n\n\n\n:Win8Safemode\n %BCDEDIT% /copy {current} /d \"Windows 8 (Safe Mode)\"\n %BCDEDIT% /timeout 10 \n cls\n  echo.\n  echo.\n  echo   Activate Win8 Safe Mode\n  echo.\n  echo.\nset _count\u003d1\nfor /f \"tokens\u003d1* usebackq skip\u003d1\" %%a in (`\"%BCDEDIT% | c:\\windows\\system32\\find \"identifier\"\"`) do (call :safemode %_count%)\n:safemode  \nif \"%1\" neq \"\" (set /a _count+\u003d1 \u0026amp;for /f \"tokens\u003d1* usebackq skip\u003d%_count%\" %%c in (`\"%BCDEDIT% | c:\\windows\\system32\\find \"description\"\"`) do (echo            %_count%. %%d \u0026amp;goto :eof))\nset _choice\u003d\necho.\necho.\nset /p _choice\u003dEnter a number (Q to quit): \necho.\necho.\nif \"%_choice%\" equ \"\" goto :eof \nif \"%_choice%\" gtr \"0\" if %_choice% lss %_count% for /f \"tokens\u003d2 usebackq skip\u003d%_choice%\" %%a in (`\"%BCDEDIT% | c:\\windows\\system32\\find \"identifier\"\"`) do (%BCDEDIT% /set %%a safeboot minimal \u0026amp;goto :safemode2)\n:safemode2\ncd c:\\windows\\system32\nreagentc /enable\n %BCDEDIT% /set {current} bootmenupolicy standard\n %BCDEDIT%\npause\ngoto :StartBCD\n\n\n\n\n\n\n\n\n\n\n\n\n\n:CREATEBCD\nEcho Create BCD\n%BCDEDIT% /createstore %BCD%\n\nEcho Create BootManager\n%BCDEDIT% %STORE% /create {bootmgr}\n%BCDEDIT% %STORE% /set {bootmgr} description \"Windows Boot Manager\"\n%BCDEDIT% %STORE% /set {bootmgr} device %partition%\n%BCDEDIT% %STORE% /set {bootmgr} locale en-US\n%BCDEDIT% %STORE% /set {bootmgr} nointegritychecks YES\nrem ***displaybootmenu disables win8 menu***\nrem %BCDEDIT% %STORE% /set {bootmgr} DisplayBootMenu True\n%DisplayBootMenu%\n%BCDEDIT% %STORE% /timeout 10\nEcho Bad memory\n%BCDEDIT% %STORE% /create {badmemory}\nEcho EMS\n%BCDEDIT% %STORE% /create {emssettings}\nrem text\nrem %BCDEDIT% %STORE% /set {emssettings} bootems \"Yes\"\nrem UI\n%BCDEDIT% %STORE% /set {emssettings} bootems \"No\"\nEcho Debug\n%BCDEDIT% %STORE% /create {dbgsettings}\n%BCDEDIT% %STORE% /dbgsettings SERIAL DEBUGPORT:1 BAUDRATE:115200\nEcho Hypervisor\n%BCDEDIT% %STORE% /create {hypervisorsettings}\n%BCDEDIT% %STORE% /hypervisorsettings SERIAL DEBUGPORT:1 BAUDRATE:115200\nEcho Global settings\n%BCDEDIT% %STORE% /create {globalsettings}\n%BCDEDIT% %STORE% /set {globalsettings} INHERIT {dbgsettings} {emssettings} {badmemory}\n%BCDEDIT% %STORE% /set {bootmgr} INHERIT {globalsettings}\nEcho Bootloader settings\n%BCDEDIT% %STORE% /create {bootloadersettings}\n%BCDEDIT% %STORE% /set {bootloadersettings} INHERIT {globalsettings} {hypervisorsettings}\nEcho Resume\nREM %BCDEDIT% %STORE% /create {resumeloadersettings}\nREM %BCDEDIT% %STORE% /set {resumeloadersettings} INHERIT {globalsettings}\nEcho Memtest\n%BCDEDIT% %STORE% /create {memdiag}\n%BCDEDIT% %STORE% /set {memdiag} description \"Windows Memory Diagnostic\"\nrem %BCDEDIT% %STORE% /set {memdiag} device partition\u003d\\Device\\HarddiskVolume1\n%BCDEDIT% %STORE% /set {memdiag} device %partition%\n%BCDEDIT% %STORE% /set {memdiag} path %memtest%\n%BCDEDIT% %STORE% /set {memdiag} locale en-US\n%BCDEDIT% %STORE% /set {memdiag} inherit {globalsettings}\nREM %BCDEDIT% %STORE% /set {memdiag} badmemoryaccess Yes\n%BCDEDIT% %STORE% /toolsdisplayorder {memdiag}\ngoto :eof\n\n\n\n:Ramdisk\nEcho Ramdisk settings\n%BCDEDIT% %STORE% /create {ramdiskoptions}\n%BCDEDIT% %STORE% /set {ramdiskoptions} ramdisksdidevice %partition%\nrem %BCDEDIT% %STORE% /set {ramdiskoptions} ramdisksdipath %ramdisksdipath%\n%BCDEDIT% %STORE% /set {ramdiskoptions} ramdisksdipath \\boot\\boot.sdi \ngoto :eof\n\n\n:MEMTEST\necho MEMTEST \n%BCDEDIT% %STORE% /create {memdiag}\n%BCDEDIT% %STORE% /set {memdiag} description \"Windows Memory Diagnostic\"\nrem %BCDEDIT% %STORE% /set {memdiag} device partition\u003d\\Device\\HarddiskVolume1\n%BCDEDIT% %STORE% /set {memdiag} device %partition%\n%BCDEDIT% %STORE% /set {memdiag} path %memtest%\nrem %BCDEDIT% %STORE% /set {memdiag} locale en-US\nrem %BCDEDIT% %STORE% /set {memdiag} inherit {globalsettings}\nREM %BCDEDIT% %STORE% /set {memdiag} badmemoryaccess Yes\n%BCDEDIT% %STORE% /toolsdisplayorder {memdiag}\n%BCDEDIT% %STORE% /displayorder {memdiag} /addlast\ngoto :eof\n\n\n\n:BCD_ISO_DISK\necho BCD_ISO_DISK\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"Boot ISO (Disk)\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\BCD_ISO_DISK\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n:BCD_ISO_MEM\necho BCD_ISO_MEM\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"Boot ISO (Memory)\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\BCD_ISO_MEM\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:BCD_IMG\necho BCD_IMG\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"Boot IMG (Floppy Image)\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\BCD_IMG\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:BCD_GZ\necho BCD_GZ\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"Boot GZ Zip file (Memdisk)\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\BCD_GZ\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:BCD_ISO_Mac\necho BCD_ISO_Mac\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"Mac OSX Boot Loader (Chameleon)\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\BCD_ISO_Mac\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n:Plop\necho Plop\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"Plop\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\BCD_ISO_Plop\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:GRUB4DOS \necho GRUB4DOS \nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"Grub4dos\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\grub4dos\\grldr\nrem %BCDEDIT% %STORE% /set %guid% path \\grldr.mbr\nrem %BCDEDIT% %STORE% /set %guid% path \\boot\\grub\\grldr.mbr\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:GRUB2\necho GRUB2\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"Grub2\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\grub\\g2ldr\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n:GRUB2EFI\necho GRUB2\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"Grub2 %choice%\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\efi\\boot\\grubx64.efi\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n:BURG\necho BURG\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"Burg\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\burg\\g2ldr\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:SYSLINUX\necho SYSLINUX\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"Syslinux (USB)\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\syslinux\\syslinux.bin\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:ISOLINUX\necho ISOLINUX \nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"Isolinux (CD\\DVD)\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\syslinux\\isolinux.bin\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n:EFI_BootBIN\necho SYSLINUX\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"EFI Boot\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\efi\\microsoft\\boot\\Grub.bin\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n\n:XPPE\necho XP PE\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"WinXP Mini PE\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\SETUPLDR.BIN\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:ISO_Gena_WIM\necho Gena_WIM \nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"GenaXP LiveCD\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\BCDs\\ISO_Gena_WIM\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:XPntldrHDD\necho XP HDD\n%BCDEDIT% %STORE% /create {ntldr} /d \"WinXP {ntldr}\"\n%BCDEDIT% %STORE% /set {ntldr} device %partition%\n%BCDEDIT% %STORE% /set {ntldr} path \\ntldr\n%BCDEDIT% %STORE% /displayorder {ntldr} /addlast\ngoto :eof\n:XPNORMAL\necho XP normal\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"WinXP (SETUPLDR.bin) (CD\\DVD)\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\I386\\SETUPLDR.bin\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n:XPADMIN\necho XP admin\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"WinXP Admin (i386\\SETUPLDU.bin) (CD\\DVD)\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\I386\\SETUPLDU.bin\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n:XPES\necho XP Enter settings\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"WinXP Enter Settings (i386\\SETUPLDE.bin) (CD\\DVD)\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\I386\\SETUPLDE.bin\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:W2Go\necho Windows to go\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% path %applicationpath%\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% description \"Windows to Go [boot] (Win8 Enterprise)\"\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% osdevice %partition%\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:VHDDVD\necho VHDDVD\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device vhd\u003d%Path%\\%VHDname%\n%BCDEDIT% %STORE% /set %guid% path %applicationpath%\n%BCDEDIT% %STORE% /set %guid% osdevice vhd\u003d%Path%\\%VHDname%\nrem %BCDEDIT% %STORE% /set %guid% detecthal Yes\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% description \"VHD (%Path%\\%VHDname%)\"\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:VHDHDD\necho VHDHDD\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device vhd\u003d%Path%\\%VHDname%\n%BCDEDIT% %STORE% /set %guid% path %applicationpath%\n%BCDEDIT% %STORE% /set %guid% osdevice vhd\u003d%Path%\\%VHDname%\nrem %BCDEDIT% %STORE% /set %guid% detecthal Yes\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% description \"VHD (%Path%\\%VHDname%)\"\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n:VHDXDVD\necho VHDDVD\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device vhd\u003d%Path%\\%VHDname%x\n%BCDEDIT% %STORE% /set %guid% path %applicationpath%\n%BCDEDIT% %STORE% /set %guid% osdevice vhd\u003d%Path%\\%VHDname%x\nrem %BCDEDIT% %STORE% /set %guid% detecthal Yes\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% description \"VHDX (%Path%\\%VHDname%x)\"\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:VHDXHDD\necho VHDHDD\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device vhd\u003d%Path%\\%VHDname%x\n%BCDEDIT% %STORE% /set %guid% path %applicationpath%\n%BCDEDIT% %STORE% /set %guid% osdevice vhd\u003d%Path%\\%VHDname%x\nrem %BCDEDIT% %STORE% /set %guid% detecthal Yes\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% description \"VHDX (%Path%\\%VHDname%)\"\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:VHDHDDw7x86\necho VHDHDDw7x86\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device vhd\u003d%Path%\\w7x86.vhd\n%BCDEDIT% %STORE% /set %guid% path %applicationpath%\n%BCDEDIT% %STORE% /set %guid% osdevice vhd\u003d%Path%\\w7x86.vhd\nrem %BCDEDIT% %STORE% /set %guid% detecthal Yes\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% description \"w7x86 VHD (%Path%\\w7x86.vhd)\"\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:VHDHDDw7x64\necho VHDHDDw7x64\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device vhd\u003d%Path%\\w7x64.vhd\n%BCDEDIT% %STORE% /set %guid% path %applicationpath%\n%BCDEDIT% %STORE% /set %guid% osdevice vhd\u003d%Path%\\w7x64.vhd\nrem %BCDEDIT% %STORE% /set %guid% detecthal Yes\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% description \"w7x64 VHD (%Path%\\w7x64.vhd)\"\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:VHDHDDw8x86\necho VHDHDDw8x86\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device vhd\u003d%Path%\\w8x86.vhd\n%BCDEDIT% %STORE% /set %guid% path %applicationpath%\n%BCDEDIT% %STORE% /set %guid% osdevice vhd\u003d%Path%\\w8x86.vhd\nrem %BCDEDIT% %STORE% /set %guid% detecthal Yes\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% description \"w8x86 VHD (%Path%\\w8x86.vhd)\"\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:VHDHDDw8x64\necho VHDHDDw8x64\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device vhd\u003d%Path%\\w8x64.vhd\n%BCDEDIT% %STORE% /set %guid% path %applicationpath%\n%BCDEDIT% %STORE% /set %guid% osdevice vhd\u003d%Path%\\w8x64.vhd\nrem %BCDEDIT% %STORE% /set %guid% detecthal Yes\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% description \"w8x64 VHD (%Path%\\w8x64.vhd)\"\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n:pxelinux\necho pxelinux\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"pxelinux\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\n%BCDEDIT% %STORE% /set %guid% path \\boot\\syslinux\\pxelinux.bin\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n:pxeWindows\necho pxeWindows\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /d \"pxeboot.n12\" /application bootsector\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device %partition%\nREM %BCDEDIT% %STORE% /set %guid% path \\boot\\bootpxe\\grldr\n%BCDEDIT% %STORE% /set %guid% path \\boot\\bootpxe\\pxeboot.n12\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n\n:BootCdriveMBRDVD\necho BootCdriveMBRDVD\nset Drive\u003dc:\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device partition\u003d%Drive%\n%BCDEDIT% %STORE% /set %guid% path \\Windows\\system32\\winload.exe\n%BCDEDIT% %STORE% /set %guid% osdevice partition\u003d%Drive%\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% description \"Windows %Drive%\"\n%BCDEDIT% %STORE% /set %guid% bootmenupolicy %bootmenupolicy%\nrem %BCDEDIT% %STORE% /set %guid% detecthal yes\n%BCDEDIT% %STORE% /set %guid% nx optin\n%BCDEDIT% %STORE% /set %guid% locale en-us\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n:BootCdriveEFIDVD\necho BootCdriveMBRDVD\nset Drive\u003dc:\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device partition\u003d%Drive%\n%BCDEDIT% %STORE% /set %guid% path \\Windows\\system32\\winload.efi\n%BCDEDIT% %STORE% /set %guid% osdevice partition\u003d%Drive%\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% description \"Windows %Drive%\"\n%BCDEDIT% %STORE% /set %guid% bootmenupolicy %bootmenupolicy%\nrem %BCDEDIT% %STORE% /set %guid% detecthal yes\n%BCDEDIT% %STORE% /set %guid% nx optin\n%BCDEDIT% %STORE% /set %guid% locale en-us\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n\n:BootC\necho Windows c:\nset Drive\u003dC:\nset bootmenupolicy\u003dstandard\nrem set bootmenupolicy\u003dlegacy\ngoto :BOOT\n:BootD\necho Windows D:\nset Drive\u003dD:\nset bootmenupolicy\u003dstandard\nrem set bootmenupolicy\u003dlegacy\ngoto :BOOT\n:BootE\necho Windows E:\nset Drive\u003dE:\nset bootmenupolicy\u003dstandard\nrem set bootmenupolicy\u003dlegacy\ngoto :BOOT\n:BootF\necho Windows F:\nset Drive\u003dF:\nset bootmenupolicy\u003dstandard\nrem set bootmenupolicy\u003dlegacy\ngoto :BOOT\n:BootG\necho Windows G:\nset Drive\u003dG:\nset bootmenupolicy\u003dstandard\nrem set bootmenupolicy\u003dlegacy\ngoto :BOOT\n:BootH\necho Windows H:\nset Drive\u003dH:\nset bootmenupolicy\u003dstandard\nrem set bootmenupolicy\u003dlegacy\ngoto :BOOT\n:BootI\necho Windows I:\nset Drive\u003dI:\nset bootmenupolicy\u003dstandard\nrem set bootmenupolicy\u003dlegacy\ngoto :BOOT\n:BootJ\necho Windows J:\nset Drive\u003dJ:\nset bootmenupolicy\u003dstandard\nrem set bootmenupolicy\u003dlegacy\ngoto :BOOT\n:BootK\necho Windows K:\nset Drive\u003dK:\nset bootmenupolicy\u003dstandard\nrem set bootmenupolicy\u003dlegacy\ngoto :BOOT\n:BOOT\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% device partition\u003d%Drive%\n%BCDEDIT% %STORE% /set %guid% path %applicationpathHDD%\n%BCDEDIT% %STORE% /set %guid% osdevice partition\u003d%Drive%\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% description \"Windows %choice% %Drive%\"\nrem %BCDEDIT% %STORE% /set %guid% bootmenupolicy %bootmenupolicy%\n%BCDEDIT% %STORE% /set %guid% detecthal yes\n%BCDEDIT% %STORE% /set %guid% nx optin\nrem %BCDEDIT% %STORE% /set %guid% locale en-US\nrem for bitlocker library_custom:0x17000077 set to 3   BcdLibraryIntegerList_AllowedInMemorySettings, i dunno...\nrem %BCDEDIT% %STORE% /set %guid%  ems \"yes\"\nrem %BCDEDIT% %STORE% /ems %guid% on\nrem %BCDEDIT% %STORE% /set %guid2%  RecoveryOs true\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n:WIM_bootwim\nEcho boot.wim\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set guid\u003d%%A\n%BCDEDIT% %STORE% /set %guid% systemroot \\windows\n%BCDEDIT% %STORE% /set %guid% detecthal yes\n%BCDEDIT% %STORE% /set %guid% winpe yes\n%BCDEDIT% %STORE% /set %guid% OSDEVICE ramdisk\u003d%path%\\boot.wim,{ramdiskoptions}\n%BCDEDIT% %STORE% /set %guid% DEVICE ramdisk\u003d%path%\\boot.wim,{ramdiskoptions} \n%BCDEDIT% %STORE% /set %guid% description \"Windows Setup %choice% (%path%\\boot.wim)\"\nrem %BCDEDIT% %STORE% /set %guid% path %applicationpath%\nrem %BCDEDIT% %STORE% /set %guid% locale en-US\nrem %BCDEDIT% %STORE% /set %guid% INHERIT {bootloadersettings}\nrem %BCDEDIT% %STORE% /set %guid% bootmenupolicy legacy\nrem %BCDEDIT% %STORE% /set %guid% bootmenupolicy standard\nrem %BCDEDIT% %STORE% /set %guid%  nx optin\nrem %BCDEDIT% %STORE% /set %guid%  ems \"no\"\nrem %BCDEDIT% %STORE% /ems %guid% on\nrem %BCDEDIT% %STORE% /bootems %guid% on\n%BCDEDIT% %STORE% /default %guid%  \n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n\n:WIM_DART_w7x86\necho Win DART 7 %choice% x86 \nset pename\u003d\"Win7 %choice% Setup\\DART x86 (%path%\\w7x86\\boot.wim)\"\nset filena\u003d%Path%\\w7x86\\boot.wim\ngoto :WIMAll\n:WIM_DART_w7x64\necho Win DART 7 %choice% x64 \nset pename\u003d\"Win7 %choice% Setup\\DART x64 (%path%\\w7x64\\boot.wim)\"\nset filena\u003d%Path%\\w7x64\\boot.wim\ngoto :WIMAll\n:WIM_DART_w8x86\necho Win DART 8 %choice% x86 \nset pename\u003d\"Win8 %choice% Setup\\DART x86 (%path%\\w8x86\\boot.wim)\"\nset filena\u003d%Path%\\w8x86\\boot.wim\ngoto :WIMAll\n:WIM_DART_w8x64\necho Win DART 8 %choice% x64 \nset pename\u003d\"Win8 %choice% Setup\\DART x64 (%path%\\w8x64\\boot.wim)\"\nset filena\u003d%Path%\\w8x64\\boot.wim\ngoto :WIMAll\n:WIM_DART_wVx86\necho Win DART Vista %choice% x86 \nset pename\u003d\"Vista %choice% Setup\\DART x86 (%path%\\wVx86\\boot.wim)\"\nset filena\u003d%Path%\\wVx86\\boot.wim\ngoto :WIMAll\n:WIM_DART_wVx64\necho Win DART Vista x64 \nset pename\u003d\"Vista %choice% Setup\\DART x64 (%path%\\wVx64\\boot.wim)\"\nset filena\u003d%Path%\\wVx64\\boot.wim\ngoto :WIMAll\n:WIM_w7x86\necho WinPE 7 %choice%\nset pename\u003d\"WinPE 7 %choice% x86 (%path%\\w7x86.wim)\"\nset filena\u003d%Path%\\w7x86.wim\ngoto :WIMAll\n:WIM_w7x64\necho WinPE 7 %choice% x64\nset pename\u003d\"WinPE 7 %choice% x64 (%path%\\w7x64.wim)\"\nset filena\u003d%Path%\\w7x64.wim\ngoto :WIMAll\n:WIM_w8x86\necho WinPE 8 %choice%\nset pename\u003d\"WinPE 8 %choice% x86 (%path%\\w8x86.wim)\"\nset filena\u003d%Path%\\w8x86.wim\ngoto :WIMAll\n:WIM_w8x64\necho WinPE 8 %choice% x64\nset pename\u003d\"WinPE 8 %choice% x64 (%path%\\w8x64.wim)\"\nset filena\u003d%Path%\\w8x64.wim\ngoto :WIMAll\n\n:WIMALL\nrem create a new ramdisk where you can specify a different boot.sdi.  last entry here http://diddy.boot-land.net/bcdedit/files/examples1.htm#winpe\nfor /f \"tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /device\u0027) do set ramdisk\u003d%%A \n%BCDEDIT% %STORE% /set %ramdisk% ramdisksdidevice %partition%\n%BCDEDIT% %STORE% /set %ramdisk% ramdisksdipath \\boot\\boot.sdi \nfor /f \"Tokens\u003d3\" %%A in (\u0027%BCDEDIT% %STORE% /create /application osloader\u0027) do set GUID\u003d%%A\n%BCDEDIT% %STORE% /set %guid% systemroot \\Windows\n%BCDEDIT% %STORE% /set %guid% detecthal Yes\n%BCDEDIT% %STORE% /set %guid% winpe Yes\n%BCDEDIT% %STORE% /set %guid% osdevice ramdisk\u003d%filena%,%ramdisk%\n%BCDEDIT% %STORE% /set %guid% device ramdisk\u003d%filena%,%ramdisk%\nrem %BCDEDIT% %STORE% /set %guid% osdevice ramdisk\u003d[C:]\\Sources\\boot.wim,%ramdisk%\nrem %BCDEDIT% %STORE% /set %guid% device ramdisk\u003d[C:]\\Sources\\boot.wim,%ramdisk%\nrem %BCDEDIT% %STORE% /set %guid% path %applicationpath%\nrem %BCDEDIT% %STORE% /set %guid% locale en-US\nrem %BCDEDIT% %STORE% /set %guid% INHERIT {bootloadersettings}\nrem %BCDEDIT% %STORE% /set %guid% bootmenupolicy legacy\nrem %BCDEDIT% %STORE% /set %guid% bootmenupolicy standard\nrem %BCDEDIT% %STORE% /set %guid%  nx optin\nrem %BCDEDIT% %STORE% /set %guid%  ems \"no\"\nrem %BCDEDIT% %STORE% /ems %guid% on\nrem %BCDEDIT% %STORE% /bootems %guid% on\nrem %BCDEDIT% %STORE% /default %guid%  \n%BCDEDIT% %STORE% /set %guid% description %pename%\n%BCDEDIT% %STORE% /displayorder %guid% /addlast\ngoto :eof\n\n\n\n\n\n\n\n:ORDERBCD\ntitle Choose Order or quit\ncls\n%BCDEDIT% %STORE%\necho.  \necho   Ordering of items on the Boot Menu    \necho.        \nset _count\u003d1\nfor /f \"tokens\u003d1* usebackq skip\u003d1\" %%a in (`\"%BCDEDIT% %STORE% | c:\\windows\\system32\\find \"identifier\"\"`) do (call :ORDERBCD1 %_count%)\n:ORDERBCD1\nif \"%1\" neq \"\" (set /a _count+\u003d1 \u0026amp;for /f \"tokens\u003d1* usebackq skip\u003d%_count%\" %%c in (`\"%BCDEDIT% %STORE% | c:\\windows\\system32\\find \"description\"\"`) do (echo            %_count%. %%d \u0026amp;goto :eof))\necho.\necho   Choose one you want to put into the first slot or exit\necho.\nset _choice\u003d\nset /p _choice\u003dEnter a number (Q to quit): \nif \"%_choice%\" equ \"\" goto :ORDERBCD\nif \"%_choice%\" equ \"q\" goto :STARTbcd\nif \"%_choice%\" gtr \"0\" if %_choice% lss %_count% for /f \"tokens\u003d2 usebackq skip\u003d%_choice%\" %%a in (`\"%BCDEDIT% %STORE% | c:\\windows\\system32\\find \"identifier\"\"`) do (%BCDEDIT% %STORE% /displayorder %%a /addfirst \u0026amp;goto :STARTbcd)\n%BCDEDIT% %STORE%\npause\ngoto :eof\n\n\n:eof\n\n \n```\n\nCan anybody tell me about the actual use of this Script with more specific and detailed description......  \n\nWill this script be useful for my case ?  \n\nRegards......   \n"
    },
    {
      "id": "186163",
      "timestamp": "2014-07-27T19:09:42+00:00",
      "author": "cdob",
      "content": "\u003e Actually there is no problem/issue with**\u0027zbootmgr.exe\u0027.** It just work perfectly for me.\nWhich bootmgr version do you edit with \u0027zbootmgr.exe\u0027?  \nDoes this include windows 8 SP1 U1 bootmgr?  \nDoes Wimboot booting works that way?  \n\n\u003cbr /\u003e\n\n\u003e Will this script be useful for my case ?\nI don\u0027t know.  \nIt\u0027s about one bcd file. Didn\u0027t you like to avoid this?   \n"
    },
    {
      "id": "186164",
      "timestamp": "2014-07-27T19:27:49+00:00",
      "author": "devdevadev",
      "content": "\u003e Which bootmgr version do you edit with \u0027zbootmgr.exe\u0027?  \n\u003e Does this include windows 8 SP1 U1 bootmgr?  \n\u003e Does Wimboot booting works that way?\n\nI have used \u0027**BOOTMGR_Win7RTM\u0027** and it work for \u0027Win 8.1 U1\u0027 based \u0027boot.wim\u0027 and \u0027WIMBoot.vhdx\u0027.  \n\nI had not tried \u0027**BOOTMGR_Win8.1RTM\u0027** because I don\u0027t have...........Do you have it ?  \n\n\u003e It\u0027s about one bcd file. Didn\u0027t you like to avoid this?\n\nIf script is about one BCD file, then it is not useful for me..........Thanks for alerting me.......  \n\nRegards........   \n"
    },
    {
      "id": "186170",
      "timestamp": "2014-07-27T21:07:16+00:00",
      "author": "cdob",
      "content": "I used Win 8.1 U1 bootmgr for wimboot so far.  \n\n\u003e If script is about one BCD file, then\nyou may use it. Add one setting and create a new bcd file   \n"
    },
    {
      "id": "186174",
      "timestamp": "2014-07-28T00:28:33+00:00",
      "author": "devdevadev",
      "content": "\u003e I used Win 8.1 U1 bootmgr for wimboot so far.\n\nI am also using Win 8.1 U1 bootmgr for WIMBoot so far which is already modified. And \u0027zbootmgr\u0027 does not accept already modified \u0027bootmgr\u0027. I don\u0027t have any unmodified \u0027**BOOTMGR_Win8.1RTM\u0027**in order to test with \u0027zbootmgr\u0027.\n\nDoes \u0027zbootmgr\u0027 accept your Win 8.1 U1 bootmgr ?\n\nRegards\n\n"
    },
    {
      "id": "186195",
      "timestamp": "2014-07-28T22:16:06+00:00",
      "author": "cdob",
      "content": "\u003e Does \u0027zbootmgr\u0027 accept your Win 8.1 U1 bootmgr ?\nI don\u0027t know. I dislike editing bootmgr and prefer to edit bcd.  \n\nA old floppy in RAM patch bcd example, Windows 7 back then:  \n[http://reboot.pro/to...e-2#entry145675](http://reboot.pro/topic/16069-bootmgr-offset-question/page-2#entry145675 \"\")   \n"
    },
    {
      "id": "186196",
      "timestamp": "2014-07-29T07:28:48+00:00",
      "author": "Fryquez",
      "content": "@devdevadev\n\nDon\u0027t use Windows 7 bootmgr to boot a Windows 8, it\u0027s not fully compatible.\n\nIf you really need to change bootmgr than see this post\n\n[http://www.msfn.org/...tmgr-windows-8/](http://www.msfn.org/board/topic/162853-need-help-modify-bootmgr-windows-8/ \"External link\")\n\n"
    },
    {
      "id": "186200",
      "timestamp": "2014-07-29T10:36:56+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e @devdevadev\\[/size\\]\nDon\u0027t use Windows 7 bootmgr to boot a Windows 8, it\u0027s not fully compatible.  \nIf you really need to change bootmgr than see this post  \n\n[http://www.msfn.org/...tmgr-windows-8/](http://www.msfn.org/board/topic/162853-need-help-modify-bootmgr-windows-8/ \"External link\")  \nWhich brings back right to what was already posted on post #2. ![:whistling:](https://reboot.pro/public/style_emoticons/default/happy22.gif)  \n\n@devdevadev  \nJFYI, \"point b.\" is a set of floppy images WITHOUT any need to modify the BOOTMGR or BCD name in them.  \n[http://reboot.pro/to...r-wim/?p\u003d186158](http://reboot.pro/topic/19956-change-path-from-bootmgr-bootbcd-to-wim9mgr-bootwim-wim9mgr-wim/?p\u003d186158 \"\")  \n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)  \nWonko   \n"
    },
    {
      "id": "186202",
      "timestamp": "2014-07-29T14:25:29+00:00",
      "author": "devdevadev",
      "content": "\u003e JFYI, \"point b.\" is a set of floppy images WITHOUT any need to modify the BOOTMGR or BCD name in them.  \n\u003e [http://reboot.pro/to...r-wim/?p\u003d186158](http://reboot.pro/topic/19956-change-path-from-bootmgr-bootbcd-to-wim9mgr-bootwim-wim9mgr-wim/?p\u003d186158 \"\")\n\nYou mean I have to to create three floppy images as follows and have to put then within \\\\_ISO\\\\MAINMENU .\n\n**floppy image 1 -** It will contain **bootmgr** and **\\\\boot\\\\bcd** correspond to **\u0027Win 8.1 U1 Installer\u0027**\n\n**floppy image 2 -** It will contain **bootmgr** and **\\\\boot\\\\bcd** correspond to **\u0027Win8.1U1SE_x64_boot.wim\u0027**  \n**floppy image 3 -** It will contain **bootmgr** and **\\\\boot\\\\bcd** correspond to **\u0027WIMBoot.vhdx\u0027**  \n\nCould I understand correctly or not ?\n\nRegards......\n\n"
    },
    {
      "id": "186203",
      "timestamp": "2014-07-29T14:34:24+00:00",
      "author": "Wonko the Sane",
      "content": "Sure, the idea is that, with no need to \"edit\" or \"rename\" \\*anything\\*.\n\nWhere you put it the floppy images is your problem, of course, or more loosely the problem might be to change Easy2boot scripts/menus to recognize them (or whatever).\n\nBooting through one of them in plain grub4dos command line amounts to (more or less):\n\n```\n\n\n\nmap --mem /floppyN.img (fd0)\nmap --hook\nroot (fd0)\nchainloader /bootmgr\nboot\n```\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "186204",
      "timestamp": "2014-07-29T15:48:00+00:00",
      "author": "devdevadev",
      "content": "It means I have to first create following three floppy images from respective **bootmgr** and **\\\\boot\\\\bcd** .\n\n**1-Win8.1U1_Installer.img**\n\n**2-Win8.1U1SE_x64_boot.img**  \n**3-WIMBoot.img**\n\nand then also have to put following three .mnu files within **Easy2boot** in order to recognize respective floppy images.\n\n**1- Win8.1U1_Installer.mnu**\n\n```\nmap --mem /Win8.1U1_Installer.img (fd0)\nmap --hook\nroot (fd0)\nchainloader /bootmgr\nboot\n```\n\n**2- Win8.1U1SE_x64_Boot.mnu**\n\n```\nmap --mem /Win8.1U1SE_x64_Boot.img (fd0)\nmap --hook\nroot (fd0)\nchainloader /bootmgr\nboot\n```\n\n**3- WIMBoot.mnu**\n\n```\nmap --mem /WIMBoot.img (fd0)\nmap --hook\nroot (fd0)\nchainloader /bootmgr\nboot\n```\n\nAm I going right or not ?\n\nIf \u0027Yes\u0027 , then How to create floppy images from **bootmgr** and **\\\\boot\\\\bcd** ?\n\nRegards....\n\n"
    },
    {
      "id": "186206",
      "timestamp": "2014-07-29T16:54:05+00:00",
      "author": "Wonko the Sane",
      "content": "You have a strange ability for jumping to conclusions as opposed to go with a step by step approach ![:unsure:](https://reboot.pro/public/style_emoticons/default/unsure.png), you cannot seriously think to build an \"advanced\" ultimate-super-mega-hyper boot stick if you don\u0027 t learn first the basics (and yes, making a floppy disk image is a very basic piece of knowledge in the \"booting field\")\n\n1. FIRST learn to make a floppy image, and the ALREADY GIVEN links provide some good hints, however I have one word for you: IMDISK. ^**\\[1\\]**^\n2. Then copy to the floppy image an ALREADY working and tested BOOTMGR + \\\\boot\\\\BCD (i.e. copy to the floppy image your current, tested, working set)\n3. Then try the approach on **COMMAND LINE** \\\u003c- this means **NOT** \"make a .mnu file (whatever a .mnu file is, the extension for grub4dos menu files is .lst by convention, and it needs a \"title\" and it needs NOT a \"boot\" command), it means \"test on command line\".\n4. Then (optionally) optimize the above by using instead of a plain 1.44 Mb floppy image smaller floppy images or try them gzipped, and/or (even more optionally) experiment with small .iso\u0027s or hard disk images instead and the COSMIAS approach (that would BTW remove altogether the need for several menus)\n5. Then repeat the test with different sets of BOOTMGR + \\\\boot\\\\BCD, creating more floppy images (or whatever images)\n6. Then FINALLY find a way to automate/integrate the thing in a set of grub4dos menus or in Easy2boot structure or whatever.\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n\\[1\\] How difficult can it be ![:dubbio:](https://reboot.pro/public/style_emoticons/default/dubbio.gif):\n\n[http://en.lmgtfy.com...oppy disk image](http://en.lmgtfy.com/?q\u003dhow+to+make+a+floppy+disk+image \"External link\")\n\nto find this (just as an example):\n\n[http://www.rmprepusb...orials/winimage](http://www.rmprepusb.com/tutorials/winimage \"External link\")\n\nthere are of course ***tens*** of ways to create a floppy disk images ... you can even use Excel ![:w00t:](https://reboot.pro/public/style_emoticons/default/w00t.gif) and a few basic tools (shameless plug :wink:):\n\n[http://www.msfn.org/...ation/?p\u003d972044](http://www.msfn.org/board/topic/152399-on-bootable-cds-floppy-emulation/?p\u003d972044 \"External link\")\n\n[http://www.msfn.org/...mages/?p\u003d988732](http://www.msfn.org/board/topic/152097-on-superfloppies-and-their-images/?p\u003d988732 \"External link\")\n\nchoose the one you find more convenient... (the spreadsheet above is to be considered \"advanced-advanced\" ![:ph34r:](https://reboot.pro/public/style_emoticons/default/scared9.gif), but by reading those threads and looking at how the spreadsheet is made I am sure you can learn a lot of things)\n\n"
    },
    {
      "id": "186207",
      "timestamp": "2014-07-29T17:36:48+00:00",
      "author": "devdevadev",
      "content": "Sorry for silly question......Actually I had never used floppy images till now. I had only created and used .imgPTN images with the help of IMDISK. I was thinking that creating**\u0027****floppyN.** **img\u0027** will be little tricky/different. It\u0027s why I asked you without doing GOOGLE. But now it\u0027s looking that .img images are just like .imgPTN images. Only difference in extension and **COMMAND LINE**approach. Actually I became so happy to know about floppy images method that I forget to GOOGLE for it.............I think 1.44MB floppy disk images will be more useful for me ............\n\nThanks a lot for such a great alternative method......It\u0027s looking very interesting and amazing.\n\nRegards......\n\n"
    },
    {
      "id": "186209",
      "timestamp": "2014-07-29T18:38:53+00:00",
      "author": "Wonko the Sane",
      "content": "Good.\n\nYou have to understand that a filename (and/or an extension) means NOTHING unless a given convention is in use.\n\n[http://en.wikipedia...._smell_as_sweet](http://en.wikipedia.org/wiki/A_rose_by_any_other_name_would_smell_as_sweet \"External link\")\n\nNaming a floppy image with a .ima extension (right^\\[\\*\\]^) or with a .img extension (wrong^\\[\\*\\]^) or with a .imgPTN (Steve6375\u0027s \"own\" extension used for Easy2boot^\\[\\*\\]^, that actually is normally applied NOT to a floppy image, but rather to a ParTitioN image^\\[1\\]^, i.e. a particular form of \"superfloppy\") does not alter in any way the actual contents or the \"essence\" of the file at hand.\n\nAnd there are a number of confusing terms in use in technical literature/knowledge (on which a few people, including Olof, Steve, erwan.l, dencorso, a few other members and of course yours truly) debate ++since years++ ![:w00t:](https://reboot.pro/public/style_emoticons/default/w00t.gif), like device/disk/disc/drive/partition/volume/floppy/superfloppy/filesystem that are often used - if not improperly - *loosely* and that need to be attentively evaluated and understood in the context they are cited.\n\nA \"floppy\" image is a volume with size/characteristics compatible with \"existing\" real hardware floppy disks. \\\u003c- this is the image of a non partitioned \"real\" device with Sectors Before\u003d0 in the BPB (and should have IMHO .ima extension for historical reasons, as the extensions was used by the early programs such as Winimage since the dawn of time)\n\nA \"superfloppy\" image is a volume as the above but usually larger and either corresponding (as an example LS-120 or ZIP disk image are \"superfloppy\" images corresponding to \"real\" superfloppy devices) or not corresponding to real hardware (as an example the 5760 Kb floppy) \\\u003c- since these are still - essentially - (bigger) images of non partitioned devices (Sectors Before\u003d0 in the BPB) they should also have the .ima extension\n\nA \"hard disk image\" is the image of a partitioned device containing one or more volumes \\\u003c- this - traditionally - had the .img extension.\n\nA number of programs/tools use for the above indifferently the .img extension which helps in the confusion^\\[\\*\\]^.\n\nA \"partition image\" (as Steve6375 defined it^\\[1\\]^) is actually an image of a ++*primary*++ partition, i.e. the image of a volume on a hard disk, conceptually it is also a \"superfloppy\" BUT it is actually IMHO a very good thing that he found a suitable extension to \"identify\" and distinguish this type of images, which - by definition - have NOT Sectors Before\u003d0 in the BPB (at least when \"applied\")\n\nAs well as the ***n*** extensions he \"invented\" ![:ph34r:](https://reboot.pro/public/style_emoticons/default/scared9.gif) are a good thing :smile::\n\n[http://www.easy2boot...ognised-by-e2b/](http://www.easy2boot.com/add-payload-files/list-of-file-extensions-recognised-by-e2b/ \"External link\")\n\nbecause they provide an easy way to know \"which is which\" by the extension, AND provided a documented convention, but you cannot expect any other tool (or Author) to follow that same (partially arbitrary) convention.\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n^\\[\\*\\]^\"right\" or \"wrong\" only depends on the conventions used or not used, it is common to find more extensions used for floppy images.\n\n^\\[1\\]^ References:\n\n[http://rmprepusb.blo...evelopment.html](http://rmprepusb.blogspot.it/2014/04/easy2boot-and-imgptn-file-development.html \"External link\")\n\n[http://www.easy2boot.../makepartimage/](http://www.easy2boot.com/add-payload-files/makepartimage/ \"External link\")\n\n"
    },
    {
      "id": "186211",
      "timestamp": "2014-07-29T19:59:27+00:00",
      "author": "cdob",
      "content": "\u003e map --mem /Win8.1U1_Installer.img (fd0)  \n\u003e map --hook  \n\u003e root (fd0)  \n\u003e chainloader /bootmgr  \n\u003e boot  \n\u003e\n\u003e How to create floppy images from bootmgr and \\\\boot\\\\bcd ?\n\nOpen a command prompt, change directory to bcd file,  \nrun  \n\n```\nbcdedit /store bcd /enum all\n```\n\nRead the output.  \nChange boot to the (virtual)fixed USB drive letter.  \n\nA Windows 8 bcd example at USB letter E:  \n\n```\nbcdedit /store bcd /set {default}   device ramdisk\u003d[E:]\\sources\\boot.wim,{7619dcc8-fafe-11d9-b411-000476eba25f}\nbcdedit /store bcd /set {default} osdevice ramdisk\u003d[E:]\\sources\\boot.wim,{7619dcc8-fafe-11d9-b411-000476eba25f}\nbcdedit /store bcd /set {default} description \"Floppy image boot: Windows Setup\"\nbcdedit /store bcd /set {default} bootmenupolicy Legacy\nbcdedit /store bcd /set {7619dcc8-fafe-11d9-b411-000476eba25f} ramdisksdidevice partition\u003dE:\n```\n\n\u003cbr /\u003e\n\n```\ntitle BIOS: Windows 8 Setup x86 - \\\\sources\\\\BOOT.WIM\nset fd_ima\u003d/boot/BOOT.ima\n#load boot floppy image\nfind --set-root --devices\u003dh %fd_ima%\nmap %fd_ima% (fd0)\nmap --hook\nroot (fd0)\nchainloader /bootmgr\n```\n\n\u003cbr /\u003e\n\nThere is no need to add bootmgr to the floppy image. You may read this from USB drive too.  \n\n```\ntitle BIOS: Windows 8 Setup x86 - \\\\sources\\\\BOOT.WIM - read /boot/bootmgr from USB disk\nset fd_ima\u003d/boot/BOOT.ima\n#load boot floppy image\nfind --set-root --devices\u003dh %fd_ima%\n#read /boot/bootmgr from USB disk\nchainloader /boot/bootmgr\nmap %fd_ima% (fd0)\nmap --hook\nroot (fd0)\nboot\n```\n\n\\\\boot\\\\bcd is at floppy image only. A 360kb floppy image holds the data.   \n"
    },
    {
      "id": "186212",
      "timestamp": "2014-07-29T21:37:14+00:00",
      "author": "cdob",
      "content": "\u003e \\\\boot\\\\bcd is at floppy image only. A 360kb floppy image holds the data.\nBCD can be trimmed further.  \n\n```\nReg.exe load HKLM\\BCD_HIVE BCD\nReg.exe save HKLM\\BCD_HIVE BCD.small\nReg.exe unload HKLM\\BCD_HIVE\ndel bcd \u0026\u0026 ren BCD.small bcd\n```\n\nThe result matches a 45kb floppy image  \n[http://bootcd.narod.ru/images_e.htm](http://bootcd.narod.ru/images_e.htm \"External link\")   \n"
    },
    {
      "id": "186231",
      "timestamp": "2014-07-30T19:37:20+00:00",
      "author": "cdob",
      "content": "\u003e How to create floppy images from bootmgr and \\\\boot\\\\bcd ?\nAnd another approach:  \nSeveral bcd files are stored at USB disk, no need to wrap this files to a floppy image.  \nbootmgr and boot.sdi is read from USB disk too.  \n\n\u003e \\\\boot\\\\bootmgr  \n\u003e \\\\boot\\\\boot.sdi  \n\u003e \\\\boot\\\\fd.gz  \n\u003e \\\\boot\\\\bcd_PE8_x86  \n\u003e \\\\boot\\\\bcd_PE81SE_x64  \n\u003e \\\\sources\\\\boot8x86.wim  \n\u003e \\\\sources\\\\BOOT81SE_x64.wim\n\n\\\\boot\\\\fd.gz is a floppy image with a dummy \\\\boot\\\\bcd file. The bcd file size 256 kb, current windows 8 bcd file size. Use a own bcd file up to 256 kb.  \nAt grub4dos\\\\boot\\\\fd.gz is expanded to (fd0). And \\\\boot\\\\bcd_PE8_x86 is copied to (fd0)\\\\boot\\\\bcd  \n\nmk_pe_part.cmd  \n\n```\n@ECHO OFF\npath ..;%path%\nREM experimental, under construction\nRem Create BCD (boot configuration data) for Windows\n\nrem mk_pe_part.cmd bcd_PE8_x86    \\sources\\BOOT8_x86.WIM    \"BIOS: Windows 8 Setup x86\"\nrem mk_pe_part.cmd bcd_PE81SE_x64 \\sources\\BOOT81SE_x64.WIM \"BIOS: Windows Win8.1 SE x64\"\n\nset BCD\u003d%~1\nset boot_wim\u003d%~2\nset description\u003d%~3\nset partition\u003d%~4\nif %partition%.\u003d\u003d. set partition\u003d%~d0\nset GUID\u003d{7619dcc9-fafe-11d9-b411-000476eba25f}\n\nIF EXIST \"%BCD%\" del \"%BCD%\"\nBCDedit.exe /createstore \"%BCD%\"\n\nBCDedit.exe /store \"%BCD%\" /create {bootmgr} /d \"Windows Boot Manager\"\nrem BCDedit.exe /store \"%BCD%\" /set {bootmgr} 5\nBCDedit.exe /store \"%BCD%\" /set {bootmgr} nointegritychecks Yes\n\nBCDedit.exe /store \"%BCD%\" /create {ramdiskoptions}\nBCDedit.exe /store \"%BCD%\" /set {ramdiskoptions} ramdisksdidevice partition\u003d%partition%\nBCDedit.exe /store \"%BCD%\" /set {ramdiskoptions} ramdisksdipath \\boot\\boot.sdi\n\nBCDedit.exe /store \"%BCD%\" /create %guid% /application OSLOADER\nBCDedit.exe /store \"%BCD%\" /displayorder %guid% /addlast\nBCDedit.exe /store \"%BCD%\" /set %guid% description \"%description%\"\nBCDedit.exe /store \"%BCD%\" /set %guid%   device ramdisk\u003d[%partition%]%boot_wim%,{ramdiskoptions}\nBCDedit.exe /store \"%BCD%\" /set %guid% osdevice ramdisk\u003d[%partition%]%boot_wim%,{ramdiskoptions}\nBCDedit.exe /store \"%BCD%\" /set %guid% systemroot \\windows\nBCDedit.exe /store \"%BCD%\" /set %guid% path \\windows\\system32\\boot\\winload.exe\nBCDedit.exe /store \"%BCD%\" /set %guid% detecthal Yes\nBCDedit.exe /store \"%BCD%\" /set %guid% winpe Yes\nBCDedit.exe /store \"%BCD%\" /set %guid% ems No\nBCDedit.exe /store \"%BCD%\" /set %guid% bootmenupolicy legacy\n\nBCDedit.exe /store \"%BCD%\" /enum all\n\nReg.exe load HKLM\\BCD_HIVE \"%BCD%\"\nReg.exe save HKLM\\BCD_HIVE \"%BCD%.small\"\nReg.exe unload HKLM\\BCD_HIVE\ndel \"%BCD%\" \u0026\u0026 ren \"%BCD%.small\" \"%BCD%\"\n```\n\nUsage examples:  \nmk_pe_part.cmd bcd_PE8_x86 \\\\sources\\\\BOOT8_x86.WIM \"BIOS: Windows 8 Setup x86\"  \nmk_pe_part.cmd bcd_PE81SE_x64 \\\\sources\\\\BOOT81SE_x64.WIM \"BIOS: Windows Win8.1 SE x64\" E:  \n\n\u003cbr /\u003e\n\nmenu.lst  \n\n```\ntitle BIOS: Windows 8 Setup x86 \\nread /boot/bootmgr from USB disk\\nand read bcd file from USB disk \nset fd_ima\u003d/boot/fd.gz\ncat --length\u003d0 %fd_ima% \u003e nul || find --set-root --devices\u003dh %fd_ima%\n#read /boot/bootmgr from USB disk\nchainloader /boot/bootmgr\nmap --mem %fd_ima% (fd0)\nmap --hook\ndd if\u003d(bd)/boot/bcd_PE8_x86 of\u003d(fd0)/boot/bcd\nroot (fd0)\nboot\n\ntitle BIOS: Windows Win8.1 SE x64 \\nread /boot/bootmgr from USB disk\\nand read bcd file from USB disk \nset fd_ima\u003d/boot/fd.gz\ncat --length\u003d0 %fd_ima% \u003e nul || find --set-root --devices\u003dh %fd_ima%\n#read /boot/bootmgr from USB disk\nchainloader /boot/bootmgr\nmap --mem %fd_ima% (fd0)\nmap --hook\ndd if\u003d(bd)/boot/bcd_PE81SE_x64 of\u003d(fd0)/boot/bcd\nroot (fd0)\nboot\n```\n\n#### Attached Files {#attach_wrap}\n\n* [![Attached File](http://reboot.pro/public/style_extra/mime_types/zip.gif)](http://reboot.pro/index.php?s\u003da828ca2cf00f14747b386e0dce87d308\u0026app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d14986 \"Download attachment\") [**fd.gz**](http://reboot.pro/index.php?s\u003da828ca2cf00f14747b386e0dce87d308\u0026app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d14986 \"Download attachment\") **984bytes** 795 downloads\n\n"
    },
    {
      "id": "186240",
      "timestamp": "2014-07-31T02:16:50+00:00",
      "author": "devdevadev",
      "content": "Awesome discovery**\u0027cdob\u0027. L** ots of thanks for your help and support.\n\nYour new approach is looking very useful for me. AFAIU, \"**mk_pe_part.cmd\"** should create **\u0027****bcd_PE8_x86\u0027** and**\u0027bcd_PE81SE_x64\u0027** . But when I paste two lines of \u0027Usage Example\u0027 in CMD prompt, then it gives error. Should I have to use these lines after putting all files into USB drive. I think something is missing which I could not understood about \"**mk_pe_part.cmd\".** Will I have to edit something (**path ..;%path%** ) in \"**mk_pe_part.cmd\".**\n\nCan you please tell me about \"How to use \"**mk_pe_part.cmd\"** and why\" ? So that I can use it properly without confusing. Is \"**mk_pe_part.cmd\"** under construction ?\n\nActually I never create **BCD\u0027s** through commands. I always use**\u0027Bootice\\\\BCDEdit\u0027** in order to create and edit**BCD\u0027s**.\n\nI can create **\u0027****bcd_PE8_x86\u0027** and**\u0027bcd_PE81SE_x64\u0027** with the help of **\u0027Bootice\\\\BCDEdit\u0027.**But what will be the advantage\n\nif I use \"**mk_pe_part.cmd\"** instead of**\u0027Bootice\\\\BCDEdit\u0027** in order to create **\u0027****bcd_PE8_x86\u0027** and**\u0027bcd_PE81SE_x64\u0027 ?**\n\nRegards........\n\n"
    },
    {
      "id": "186241",
      "timestamp": "2014-07-31T03:53:30+00:00",
      "author": "cdob",
      "content": "\u003e But when I paste two lines of \u0027Usage Example\u0027 in CMD prompt, then it gives error.\nWhich error do you get?  \nWhich OS do you use?  \n\n\u003e How to use \"mk_pe_part.cmd\"\nOne case: copy mk_pe_part.cmd to the USB drive \\\\boot.  \nOpen a command prompt, change directory to USB drive \\\\boot. Run the command.  \nThe USB drive has to be a fixed drive one, hence use a filter driver like cfadisk at a removable USB flash.  \n\n\u003e I always use \u0027Bootice\\\\BCDEdit\u0027 in order to create and edit BCD\u0027s.\nFeel free to use Bootice still.  \nDoes BCDEdit set the disk and partition at a PE boot?  \nDoes a partition refers to boot.sdi and boot.wim?   \n"
    },
    {
      "id": "186244",
      "timestamp": "2014-07-31T07:25:09+00:00",
      "author": "devdevadev",
      "content": "\u003e Which error do you get?  \n\u003e Which OS do you use?\n\nThat was the syntax error because of not copying \u0027mk_pe_part.cmd\u0027 to the USB drive \\\\boot.. Now I got it correctly.  \n\u003e Does BCDEdit set the disk and partition at a PE boot?  \n\u003e Does a partition refers to boot.sdi and boot.wim?\n\nYes, I always use**\" Bootice\\\\BCDEdit\\\\Easy Mode \"**in order to set**\u0027disk\u0027** and**\u0027partition\u0027** as well as relocate to **boot.sdi** ,**boot.wim** and **VHDX**.  \n\nAs I say earlier that I will keep \u0027boot.sdi\u0027, \u0027boot.wim\u0027 , \u0027Win8.1U1SE_x64_boot.wim\u0027 and \u0027WIMBoot.vhdx\u0027 in \u0027ptn3\u0027 of my USB drive as follows-\n\n**ptn3:\\\\boot\\\\boot.sdi**\n\n**ptn3:\\\\sources\\\\boot.wim** (Injected with \u0027cfadisk\u0027 drive and taken form 64-bit \u0027Win 8.1 U1\u0027)\n\n**ptn3:\\\\sources\\\\Win8.1U1SE_x64_boot.wim** (Injected with \u0027cfadisk\u0027 drive and taken form 64-bit \u0027Win8.1SE.iso\u0027)\n\n**ptn3:\\\\WIMBoot.vhdx**\n\nptn3:\\\\sources\\\\setup.exe  \nptn3:\\\\sources\\\\**install.wim** (taken form 32-bit \u0027Win 8.1 U1\u0027)  \nptn3:\\\\BOOTNXT\n\nand will keep **BCD\u0027s** within**\u0027ptn2\u0027** as follows-\n\n**ptn2:\\\\_ISO\\\\MAINMENU\\\\Win8.1U1_(x64_Installer + SE_x64_boot.WIM + WIMBoot ).mnu**\n\n**ptn2:\\\\boot\\\\bootmgr**\n\n**ptn2:\\\\boot\\\\bcd_Win8.1U1_x64_Installer** (Relocated to **ptn3:\\\\boot\\\\boot.sdi** and **ptn3:\\\\sources\\\\boot.wim**)\n\n**ptn2:\\\\boot\\\\bcd_Win8.1U1SE_x64_boot**(Relocated to **ptn3:\\\\boot\\\\boot.sdi** and **ptn3:\\\\sources\\\\****Win8.1U1SE_x64_boot** **.wim**)\n\n**ptn2:\\\\boot\\\\bcd_WIMBoot**(Relocated to **ptn3:\\\\WIMBoot.vhdx**  \n\nWhere content of \"**Win8.1U1_(x64_Installer + SE_x64_boot.WIM + WIMBoot ).mnu\"**will be as follows -\n\n```\ntitle Win8.1U1_x64_Installer \n#read /boot/bootmgr from USB disk\ncat --length\u003d0 /boot/bootmgr \u003e nul || find --set-root --devices\u003dh /boot/bootmgr\nchainloader /boot/bootmgr\nmap --mem --heads\u003d2 --sectors-per-track\u003d9 (md)0x6000+720 (fd0)\nmap --hook\n#create a 360kb floppy with a 336kb file \\boot\\bcd\nwrite (fd0) \\xEB\\x3C\\x90\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x20\\x01\\x00\\x01\\x10\\x00\\xD0\\x02\\xFD\\x01\\x00\\x09\\x00\\x02\nwrite --offset\u003d0x1FE (fd0) \\x55\\xAA\\xFD\\xFF\\xFF\\xFF\\x4F\\x00\\x05\\x60\\x00\\x07\\x80\\x00\\x09\\xA0\\x00\\x0B\nwrite --offset\u003d0x210 (fd0) \\xC0\\x00\\x0D\\xE0\\x00\\x0F\\x00\\x01\\x11\\x20\\x01\\x13\\x40\\x01\\x15\\x60\\x01\\x17\\xF0\\xFF\nwrite --offset\u003d0x400 (fd0) BOOT\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\nwrite --offset\u003d0x600 (fd0) .\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\nwrite --offset\u003d0x620 (fd0) ..\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x10\nwrite --offset\u003d0x640 (fd0) BCD\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x40\\x05\n#\n#write --offset\u003d0x59FFD (fd0) END\n#cat --hex --skip\u003d0x59F00 (fd0)+720\n#pause\n#\ndd if\u003d(bd)/boot/bcd_Win8.1U1_x64_Installer of\u003d(fd0)/boot/bcd\nroot (fd0)\nboot\n\n\ntitle Win8.1U1SE_x64_boot-WIM\n#read /boot/bootmgr from USB disk\ncat --length\u003d0 /boot/bootmgr \u003e nul || find --set-root --devices\u003dh /boot/bootmgr\nchainloader /boot/bootmgr\nmap --mem --heads\u003d2 --sectors-per-track\u003d9 (md)0x6000+720 (fd0)\nmap --hook\n#create a 360kb floppy with a 336kb file \\boot\\bcd\nwrite (fd0) \\xEB\\x3C\\x90\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x20\\x01\\x00\\x01\\x10\\x00\\xD0\\x02\\xFD\\x01\\x00\\x09\\x00\\x02\nwrite --offset\u003d0x1FE (fd0) \\x55\\xAA\\xFD\\xFF\\xFF\\xFF\\x4F\\x00\\x05\\x60\\x00\\x07\\x80\\x00\\x09\\xA0\\x00\\x0B\nwrite --offset\u003d0x210 (fd0) \\xC0\\x00\\x0D\\xE0\\x00\\x0F\\x00\\x01\\x11\\x20\\x01\\x13\\x40\\x01\\x15\\x60\\x01\\x17\\xF0\\xFF\nwrite --offset\u003d0x400 (fd0) BOOT\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\nwrite --offset\u003d0x600 (fd0) .\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\nwrite --offset\u003d0x620 (fd0) ..\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x10\nwrite --offset\u003d0x640 (fd0) BCD\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x40\\x05\n#\n#write --offset\u003d0x59FFD (fd0) END\n#cat --hex --skip\u003d0x59F00 (fd0)+720\n#pause\n#\ndd if\u003d(bd)/bcd_Win8.1U1SE_x64_boot of\u003d(fd0)/boot/bcd\nroot (fd0)\nboot\n\n\ntitle WIMBoot \n#read /boot/bootmgr from USB disk\ncat --length\u003d0 /boot/bootmgr \u003e nul || find --set-root --devices\u003dh /boot/bootmgr\nchainloader /boot/bootmgr\nmap --mem --heads\u003d2 --sectors-per-track\u003d9 (md)0x6000+720 (fd0)\nmap --hook\n#create a 360kb floppy with a 336kb file \\boot\\bcd\nwrite (fd0) \\xEB\\x3C\\x90\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x20\\x01\\x00\\x01\\x10\\x00\\xD0\\x02\\xFD\\x01\\x00\\x09\\x00\\x02\nwrite --offset\u003d0x1FE (fd0) \\x55\\xAA\\xFD\\xFF\\xFF\\xFF\\x4F\\x00\\x05\\x60\\x00\\x07\\x80\\x00\\x09\\xA0\\x00\\x0B\nwrite --offset\u003d0x210 (fd0) \\xC0\\x00\\x0D\\xE0\\x00\\x0F\\x00\\x01\\x11\\x20\\x01\\x13\\x40\\x01\\x15\\x60\\x01\\x17\\xF0\\xFF\nwrite --offset\u003d0x400 (fd0) BOOT\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\nwrite --offset\u003d0x600 (fd0) .\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\nwrite --offset\u003d0x620 (fd0) ..\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x10\nwrite --offset\u003d0x640 (fd0) BCD\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x40\\x05\n#\n#write --offset\u003d0x59FFD (fd0) END\n#cat --hex --skip\u003d0x59F00 (fd0)+720\n#pause\n#\ndd if\u003d(bd)/boot/bcd_WIMBoot of\u003d(fd0)/boot/bcd\nroot (fd0)\nboot\n```\n\nThe Screenshots of the BCD\u0027s Settings are given as follow-  \n\n**USB Partition Table-**  \n![post-65263-0-51698900-1406801983.png](http://reboot.pro/uploads/monthly_07_2014/post-65263-0-51698900-1406801983.png)\n\n![post-65263-0-85969400-1406801998.png](http://reboot.pro/uploads/monthly_07_2014/post-65263-0-85969400-1406801998.png)\n\n**1- bcd_Win8.1U1_x64_Installer**  \n![post-65263-0-67793000-1406802027.png](http://reboot.pro/uploads/monthly_07_2014/post-65263-0-67793000-1406802027.png)  \n\n\u003cbr /\u003e\n\n**2- bcd_Win8.1U1SE_x64_boot**   \n![post-65263-0-12559300-1406802055.png](http://reboot.pro/uploads/monthly_07_2014/post-65263-0-12559300-1406802055.png)  \n\n\u003cbr /\u003e\n\n**3- bcd_WIMBoot**   \n![post-65263-0-80599400-1406802079.png](http://reboot.pro/uploads/monthly_07_2014/post-65263-0-80599400-1406802079.png)  \n\n**Note-** After modifying BCD\u0027s settings according to above screenshots don\u0027t forget to click ***\u0027Save current System\u0027*** and ***\u0027Save Globals\u0027*** buttons at the bottom of the**\u0027Bootice\\\\BCDEdit\\\\Easy Mode\u0027** dialog box. \u0027disk\u0027 and \u0027partition\u0027 entries of the BCD\u0027s will be shown only when we attached same USB drive in the system otherwise \u0027disk\u0027 and \u0027partition\u0027 area will shown as blank.\n\n***Regards....***..  \n\n#### Attached Thumbnails {#attach_wrap}\n\n* [![USB Partition Table.png](http://reboot.pro/uploads/monthly_07_2014/post-65263-0-51698900-1406801983_thumb.png)](http://reboot.pro/uploads/monthly_07_2014/post-65263-0-51698900-1406801983.png \"USB Partition Table.png - Size: 23.9KB\"){#ipb-attach-url-14993-0-94991500-1676066499}\n* [![Partition Selection.png](http://reboot.pro/uploads/monthly_07_2014/post-65263-0-85969400-1406801998_thumb.png)](http://reboot.pro/uploads/monthly_07_2014/post-65263-0-85969400-1406801998.png \"Partition Selection.png - Size: 10.54KB\"){#ipb-attach-url-14994-0-95000000-1676066499}\n* [![1- bcd_Win8.1U1_x64_Installer.png](http://reboot.pro/uploads/monthly_07_2014/post-65263-0-67793000-1406802027_thumb.png)](http://reboot.pro/uploads/monthly_07_2014/post-65263-0-67793000-1406802027.png \"1- bcd_Win8.1U1_x64_Installer.png - Size: 36.13KB\"){#ipb-attach-url-14995-0-95005700-1676066499}\n* [![2- bcd_Win8.1U1SE_x64_boot.png](http://reboot.pro/uploads/monthly_07_2014/post-65263-0-12559300-1406802055_thumb.png)](http://reboot.pro/uploads/monthly_07_2014/post-65263-0-12559300-1406802055.png \"2- bcd_Win8.1U1SE_x64_boot.png - Size: 36.16KB\"){#ipb-attach-url-14996-0-95011100-1676066499}\n* [![3- bcd_WIMBoot.png](http://reboot.pro/uploads/monthly_07_2014/post-65263-0-80599400-1406802079_thumb.png)](http://reboot.pro/uploads/monthly_07_2014/post-65263-0-80599400-1406802079.png \"3- bcd_WIMBoot.png - Size: 35.21KB\"){#ipb-attach-url-14997-0-95015900-1676066499}\n\n"
    },
    {
      "id": "186247",
      "timestamp": "2014-07-31T08:46:09+00:00",
      "author": "Wonko the Sane",
      "content": "Still speaking about \"conventions\", it\u0027s interesting ![:dubbio:](https://reboot.pro/public/style_emoticons/default/dubbio.gif) how the tool in the screenshot (just like grub4dos) numbers partitions (or partition entries) from 0 to 3 and you name them PTN1, PTN2, PTN3 (and I presume a fourth partition would be PTN4), another small step into complexity and probability -before or later - to get the \"wrong\" number ![:ph34r:](https://reboot.pro/public/style_emoticons/default/scared9.gif), just like the good Linux guys decided that GRUB2 uses 1-4 instead of 0-3.\n\n@cdob\n\nDo you have an idea how the chainloaded BOOTMGR looks for a \\\\boot\\\\BCD?\n\nIs first floppy disk always seeked first? Or it depends by the fact that you establish root on the floppy? I mean, what happens when a \\\\boot\\\\BCD actually exists in any other connected and accessible device? ![:unsure:](https://reboot.pro/public/style_emoticons/default/unsure.png)\n\nThough I like your approach :smile:, I would still like better (at the cost of a somewhat slower boot) the approach with keeping the boot floppy monolithic (i.e. with a BOOTMGR in it) as it would be IMHO more \"portable\"/\"manageable\".\n\nBack to the \"on-the-fly\" copy of the chosen \\\\boot\\\\BCD to floppy, what about using the fat grub4dos tool?\n\nWould it allow to have a completely blank floppy?\n\nWould doing something \\*like\\*a:\n\n```\ninsmod fat\n\nfat copy (bd)/boot/bcd_PE81SE_x64 (fd0)/boot/bcd\n```\n\nwork and/or provide any advantage (or disadvantage)? ![:unsure:](https://reboot.pro/public/style_emoticons/default/unsure.png)\n\nAnother random (but not much) idea, *loosely*connected to the COSMIAS approach - just a couple references before I forget about it (again):\n\n[http://reboot.pro/to...brided/?p\u003d86679](http://reboot.pro/topic/9916-grub4dos-isohybrided/?p\u003d86679 \"\")\n\n[http://www.msfn.org/...ation/?p\u003d971170](http://www.msfn.org/board/topic/152399-on-bootable-cds-floppy-emulation/?p\u003d971170 \"External link\")\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "186248",
      "timestamp": "2014-07-31T09:10:46+00:00",
      "author": "devdevadev",
      "content": "\u003e Still speaking about \"conventions\", it\u0027s interesting ![:dubbio:](https://reboot.pro/public/style_emoticons/default/dubbio.gif) how the tool in the screenshot (just like grub4dos) numbers partitions (or partition entries) from 0 to 3 and you name them PTN1, PTN2, PTN3 (and I presume a fourth partition would be PTN4), another small step into complexity and probability -before or later - to get the \"wrong\" number ![:ph34r:](https://reboot.pro/public/style_emoticons/default/scared9.gif), just like the good Linux guys decided that GRUB2 uses 1-4 instead of 0-3.\n\u003e\nYou mean I should use \u0027PTN0, PTN1, PTN2\u0027 instead of PTN1, PTN2, PTN3 ?\n\nActually Convention PTN1, PTN2, PTN3 are the result of BAD habit which I learn from \u0027RMPrepUSB\u0027 . And now I am also using \u0027Bootice\u0027 along with \u0027RMPrepUSB\u0027 since some weeks. I was also thinking that I should have to use \u0027PTN0, PTN1, PTN2\u0027 instead of PTN1, PTN2, PTN3 but it will take some time in order to use it in regular practice.\n\nRegards......\n\n"
    },
    {
      "id": "186249",
      "timestamp": "2014-07-31T10:03:17+00:00",
      "author": "Wonko the Sane",
      "content": "No :smile:, anything goes, it was just a way to highlight how it is needed to explicit (and take into account) the conventions used, for all it matters, one can call the partitions:\n\n* MickeyMouse\n* Minnie\n* Goofy\n* Pluto\n\nPersonally, since we are talking of Partitions (and not of anything else) three out of four letters used are unneeded ![:w00t:](https://reboot.pro/public/style_emoticons/default/w00t.gif), i.e. calling them:\n\n* 1st\n* 2nd\n* 3rd\n* 4th\n\nwould make (to me) more sense/create less confusion, as it is easier to understand/remember using ordinals that the numbering is starting from 1  \n[http://en.wikipedia....r_(linguistics)](http://en.wikipedia.org/wiki/Ordinal_number_(linguistics) \"External link\")\n\n* 1st - is First partition entry corresponding in grub4dos to (hd***n***,0), i.e. to the partition entry at offset 0 or the one that has 0 partition entries before\n* 2nd - is Second partition entry corresponding in grub4dos to (hd***n***,1)\n* 3rd - is Third partition entry corresponding in grub4dos to (hd***n***,2)\n* 4th - is Fourth partition entry corresponding in grub4dos to (hd***n***,3)\n\nIf you want to really overdo it ![:w00t:](https://reboot.pro/public/style_emoticons/default/w00t.gif) this is unlikely to create misunderstandings/mistakes:\n\n* 1st_entry_0\n* 2nd_entry_1\n* 3rd_entry_2\n* 4th_entry_3\n\nwhile still being within the 11 characters length compatible with \\*anything\\*.\n\n\u003cbr /\u003e\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)  \nWonko\n\n"
    },
    {
      "id": "186260",
      "timestamp": "2014-07-31T14:15:27+00:00",
      "author": "devdevadev",
      "content": "\u003e Though I like your approach :smile:, **I would still like better** (at the cost of a somewhat slower boot) the **approach with keeping the boot floppy monolithic (i.e. with a BOOTMGR in it) as it would be IMHO more \"portable\"/\"manageable\".**\n\nYou mean if we also add a \u0027BOOTMGR\u0027 within floppy image ( \\\\boot\\\\**fd.gz** ) along with a dummy \\\\boot\\\\bcd file. then it will be more better than previous ?\n\nRegards.........\n\n"
    },
    {
      "id": "186262",
      "timestamp": "2014-07-31T14:51:01+00:00",
      "author": "cdob",
      "content": "\u003e Do you have an idea how the chainloaded BOOTMGR looks for a \\\\boot\\\\BCD?  \n\u003e Is first floppy disk always seeked first? Or it depends by the fact that you establish root on the floppy? I mean, what happens when a \\\\boot\\\\BCD actually exists in any other connected and accessible device? ![:unsure:](https://reboot.pro/public/style_emoticons/default/unsure.png)\nThe \"root (fd0)\" is importand.  \nWithout \"root (fd0)\": bootmgr searches and reads \\\\boot\\\\BCD at USB drive. If the file is missing, there is a error message \\\\boot\\\\BCD missing or corrupt.  \n\n\u003e Though I like your approach :smile:, I would still like better (at the cost of a somewhat slower boot) the approach with keeping the boot floppy monolithic (i.e. with a BOOTMGR in it) as it would be IMHO more \"portable\"/\"manageable\".\nThe approach is not \"portable\" anymore because the fixed letters (actually MBR signature and partition offset at bcd).  \nAnd \\\\boot\\\\bootmgr is at a special folder, mixing with another version is less likely.  \nI don\u0027t see a real benefit to include bootmgr to the floppy.  \n\n\u003e Back to the \"on-the-fly\" copy of the chosen \\\\boot\\\\BCD to floppy, what about using the fat grub4dos tool?  \n\u003e Would it allow to have a completely blank floppy?\nFrom chenall\u0027s dpms.bat  \n\n```\n echo $[0107]######## $[0102]Auto SCSI/RAID/SATA Driver for NT5.X by chenall $[0107]#########\ninsmod FAT\n\nmap --mem\u003d0x10000 (md)+2880 (rd)\nfat mkfs (rd) \u003e (md)0x300+1,1\nmap --mem (rd)+1 (fd0)\nmap --hook\n\nfat copy /o %sysfile% (rd)\n```\n\nWell, drawback a addional fat module is required. Is it\u0027s worth?  \n\nAny idea to do this at plain grub4dos grldr?  \nA special floppy image: 360 kb, one FAT, one directory in root, one file, 64 kb cluster?  \nNo idea if bootmgr reads such a beast.  \n\n\u003cbr /\u003e\n\nWe may dd from USB drive to USB drive too.  \nEnhances writing to USB.  \n\\\\boot\\\\bcd could match a internal hard disk by accident.   \n"
    },
    {
      "id": "186263",
      "timestamp": "2014-07-31T14:51:04+00:00",
      "author": "Wonko the Sane",
      "content": "@devdevadev\n\nNo, not \"more better\" (which would probably mean \"best\" :wink:), only that I would personally like it better, just like I would like better to remove all the complexities from menu.lst to a COSMIAS grub4dos batch, i.e. replace an entry \\*like\\*:\n\n\u003e title Win8.1U1_x64_Installer  \n\u003e set fd_ima\u003d/boot/fd.gz  \n\u003e cat --length\u003d0 %fd_ima% \\\u003e nul \\|\\| find --set-root --devices\u003dh %fd_ima%  \n\u003e #read /boot/bootmgr from USB disk  \n\u003e chainloader /boot/bootmgr  \n\u003e map --mem %fd_ima% (fd0)  \n\u003e map --hook  \n\u003e dd if\u003d(bd)/boot/bcd_Win8.1U1_x64_Installer of\u003d(fd0)/boot/bcd  \n\u003e root (fd0)  \n\u003e boot\n\u003e\nWith an entry \\*like\\*:\n\u003e iftitle \\[find /boot/fd.gz\\] Win8.1U1_x64_Installer\n\u003e\n\u003e /boot/fd.gz Win8.1U1_x64_Installer\n\u003e\nbut it is just a matter of \"tastes\".\n\nThe \"easy2boot\" approach of making an extremely complex menu.lst is a very good one :smile: because it is intended to be used with pre-existing images and without modifying them at all, if not by renaming them with a suitable extension.\n\nIf one is going to use anyway a \"custom\" external file (such as the \\\\boot\\\\fd.gz in this case) I find it easier to shift the complexities to this \"custom\" file and keep the menu.lst more readable, but seemingly it is just me.\n\n@cdob\n\nthe fat module is only 26 Kb and with it you would avoid the need for an image, as you would build it on-the-fly.\n\nWorth it?\n\nI don\u0027t know, as I said before is someone is OK with having a number of BOOTMGR\u0027s hexedited to point on some renamed BCD\u0027s, he can also live fine with a number of custom floppy images, each containing either BOTH BOOTMGR and a \\\\boot\\\\BCD or just the \\\\boot\\\\BCD, removing all the complexities of copying/overwriting files.\n\nI.e.:\n\n\u003e title Win8.1U1_x64_Installer  \n\u003e set fd_ima\u003d/boot/Win8.1U1_x64_Installer.gz  \n\u003e cat --length\u003d0 %fd_ima% \\\u003e nul \\|\\| find --set-root --devices\u003dh %fd_ima%  \n\u003e #read /boot/bootmgr from USB disk  \n\u003e chainloader /boot/bootmgr  \n\u003e map --mem %fd_ima% (fd0)  \n\u003e map --hook  \n\u003e root (fd0)  \n\u003e boot\n\u003e\nor\n\u003e title Win8.1U1_x64_Installer  \n\u003e set fd_ima\u003d/boot/Win8.1U1_x64_Installer.gz  \n\u003e cat --length\u003d0 %fd_ima% \\\u003e nul \\|\\| find --set-root --devices\u003dh %fd_ima%  \n\u003e map --mem %fd_ima% (fd0)  \n\u003e map --hook  \n\u003e root (fd0)\n\u003e\n\u003e chainloader /bootmgr  \n\u003e boot\n\u003e\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "186265",
      "timestamp": "2014-07-31T15:52:58+00:00",
      "author": "devdevadev",
      "content": "**@cdob**  \nIs there any advantage of using**\u0027mk_pe_part.cmd\u0027** over **\u0027Bootice\\\\BCDEdit\\\\Easy Mode\u0027** in order to create **BCD\u0027s**\n\n**(****\u0027bcd_Win8.1U1_x64_Installer\u0027, \u0027bcd_Win8.1U1SE_x64_boot\u0027, \u0027bcd_WIMBoot\u0027 )****?**  \nRegards....\n\n"
    },
    {
      "id": "186266",
      "timestamp": "2014-07-31T19:23:33+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e The \"root (fd0)\" is importand.  \n\u003e Without \"root (fd0)\": bootmgr searches and reads \\\\boot\\\\BCD at USB drive. If the file is missing, there is a error message \\\\boot\\\\BCD missing or corrupt.  \n\nI don\u0027t know. ![:unsure:](https://reboot.pro/public/style_emoticons/default/unsure.png)\n\nThere is seemingly the usual \"black magic\" or \"voodoo\" that we can expect from MS booting ![:wodoo:](https://reboot.pro/public/style_emoticons/default/wodoo.gif)\n\nExperiment in Qemu.\n\nFirst floppy device (fd0) floppy containing (bootable) grub4dos.\n\nSecond floppy device (fd1) floppy containing BOOTMGR+\\\\boot\\\\BCD (+also a good ol\u0027 NTLDR+BOOT.INI)\n\n\u003e root (fd1)\n\u003e\n\u003e chainloader /bootmgr\n\u003e\n\u003e boot\n\u003e\nFAILURE (not found \\\\boot\\\\BCD 0x0000000e) ![:(](https://reboot.pro/public/style_emoticons/default/sad.png)\n\n\u003e root (fd1)\n\u003e\n\u003e chainloader /ntldr\n\u003e\n\u003e boot\n\u003e\nFAILURE (reboot) ![:(](https://reboot.pro/public/style_emoticons/default/sad.png)\n\n\u003e map (fd0) (fd1)\n\u003e\n\u003e map (fd1) (fd0)\n\u003e\n\u003e map --hook\n\u003e\n\u003e root (fd0)\n\u003e\n\u003e chainloader /bootmgr\n\u003e\n\u003e boot\n\u003e\nSUCCESS (boot\\\\BCD found and loaded) :smile:\n\n\u003e map (fd0) (fd1)\n\u003e\n\u003e map (fd1) (fd0)\n\u003e\n\u003e map --hook\n\u003e\n\u003e root (fd0)\n\u003e\n\u003e chainloader /ntldr\n\u003e\n\u003e boot\n\u003e\nSUCCESS (\\\\boot.ini found and loaded) :smile:\n\n**BUT** ![:w00t:](https://reboot.pro/public/style_emoticons/default/w00t.gif)\n\n\u003e map (fd0) (fd1)\n\u003e\n\u003e map (fd1) (fd0)\n\u003e\n\u003e map --hook\n\u003e\n\u003e root (fd1)\n\u003e\n\u003e chainloader (fd0)/bootmgr\n\u003e\n\u003e boot\n\u003e\nSUCCESS (boot\\\\BCD found and loaded) :smile:\n\n\u003e map (fd0) (fd1)\n\u003e\n\u003e map (fd1) (fd0)\n\u003e\n\u003e map --hook\n\u003e\n\u003e root (fd1)\n\u003e\n\u003e chainloader (fd0)/ntldr\n\u003e\n\u003e boot\n\u003e\nSUCCESS (\\\\boot.ini found and loaded) :smile:\n\nWill do some further experiments with BOOTMGR on hard disk devices and \\\\boot\\\\BCD \\*somewhere\\* else but it seems like the established root is only ***part*** of the story. ![:dubbio:](https://reboot.pro/public/style_emoticons/default/dubbio.gif)\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    },
    {
      "id": "186268",
      "timestamp": "2014-07-31T22:28:14+00:00",
      "author": "cdob",
      "content": "\u003e the fat module is only 26 Kb and with it you would avoid the need for an image, as you would build it on-the-fly.  \n\u003e Worth it?\nWell, well. Yes, a known working module is the proper approach.  \nLuckily I\u0027m partly insane: a new approach is much more fun. In real life I earn money at development.  \n\nA trimmed floppy image, core base with mkfs.vfat and trimmed at hex editor  \n\n```\n000: EB 3C 90 00 00 00 00 00 00 00 00 00 02 40 01 00\n010: 01 10 00 D0 02 FD 01 00 09 00 02 00 00 00 00 00\n1F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 55 AA\n200: FD FF FF FF 4F 00 05 60 00 07 80 00 09 A0 00 FF\n400: 42 4F 4F 54 20 20 20 20 20 20 20 10 00 00 00 00\n410: 00 00 00 00 00 00 00 00 00 00 02 00 00 00 00 00\n600: 2E 20 20 20 20 20 20 20 20 20 20 10 00 00 00 00\n610: 00 00 00 00 00 00 00 00 00 00 02 00 00 00 00 00\n620: 2E 2E 20 20 20 20 20 20 20 20 20 10 00 00 00 00\n630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n640: 42 43 44 20 20 20 20 20 20 20 20 20 00 00 00 00\n650: 00 00 00 00 00 00 00 00 00 00 03 00 00 00 05 00\n```\n\nGrub4dos, imdisk, 7-zip and bootmgr accepts this.  \n\nSome grub4dos writes should create this floppy image on the fly.  \n\n\u003e I don\u0027t know, as I said before is someone is OK with having a number of BOOTMGR\u0027s hexedited to point on some renamed BCD\u0027s, he can also live fine with a number of custom floppy images, each containing either BOTH BOOTMGR and a \\\\boot\\\\BCD or just the \\\\boot\\\\BCD, removing all the complexities of copying/overwriting files.\nWell, I understand: hexedited bootmgr are borrowed and not self created. And it\u0027s new to create floppy images. And bootice edits bcd files.  \n\n\u003e Is there any advantage of using \u0027mk_pe_part.cmd\u0027 over \u0027Bootice\\\\BCDEdit\\\\Easy Mode\u0027 in order to create BCD\u0027s\nNo, there is no advantage. Use bootice.  \n\n\u003cbr /\u003e\n\n\u003e There is seemingly the usual \"black magic\" or \"voodoo\" that we can expect from MS booting ![:wodoo:](https://reboot.pro/public/style_emoticons/default/wodoo.gif)\nThat\u0027s more fun.   \n"
    },
    {
      "id": "186279",
      "timestamp": "2014-08-01T12:35:08+00:00",
      "author": "Wonko the Sane",
      "content": "I guess you just *invented* the \"underfloppy\" ![:thumbsup:](https://reboot.pro/public/style_emoticons/default/thumbsup.gif) (or what it could be a name for the opposite of a \"superfloppy\"? ![:w00t:](https://reboot.pro/public/style_emoticons/default/w00t.gif)).  \n\n\u003e Grub4dos, imdisk, 7-zip and bootmgr accepts this.\nNot here (yet :wink:).  \nThere are a couple issues.  \nImdisk is OK.  \nGrub4dos attempts to tune heads/sectors (but then works OK)  \n7-zip (9.32) and Winimage have issues ( with the \"truncated image\" I created initially ![:dubbio:](https://reboot.pro/public/style_emoticons/default/dubbio.gif) but I suspect that some data needs to be changed/corrected), though they \\*somewhat\\* work with the full size image.  \n\nI am not sure to understand the reason/need/whatever for 64 sectors/cluster. ![:unsure:](https://reboot.pro/public/style_emoticons/default/unsure.png)  \n\nI will do a few more tests, in the meantime (and temporarily) this will make an underfloppy.txt file (hex text that can be pasted in - say - TinyHexer \"as new\"):  \n\n```\n::000: EB 3C 90 00 00 00 00 00 00 00 00 00 02 40 01 00\n::010: 01 10 00 D0 02 FD 01 00 09 00 02 00 00 00 00 00\n::1F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 55 AA\n::200: FD FF FF FF 4F 00 05 60 00 07 80 00 09 A0 00 FF\n::400: 42 4F 4F 54 20 20 20 20 20 20 20 10 00 00 00 00\n::410: 00 00 00 00 00 00 00 00 00 00 02 00 00 00 00 00\n::600: 2E 20 20 20 20 20 20 20 20 20 20 10 00 00 00 00\n::610: 00 00 00 00 00 00 00 00 00 00 02 00 00 00 00 00\n::620: 2E 2E 20 20 20 20 20 20 20 20 20 10 00 00 00 00\n::630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n::640: 42 43 44 20 20 20 20 20 20 20 20 20 00 00 00 00\n::650: 00 00 00 00 00 00 00 00 00 00 03 00 00 00 05 00 FIND \"error\" size of BCD is 327,680 instead of \"normal\" 262,144\n::650: 00 00 00 00 00 00 00 00 00 00 03 00 00 00 04 00\n\n@ECHO OFF\nSETLOCAL ENABLEEXTENSIONS ENABLEDELAYEDEXPANSION\nIF EXIST underfloppy.txt DEL underfloppy.txt\nFOR /F \"tokens\u003d1,2 delims\u003d:\" %%A IN (\u0027Type %~dpnx0 ^| FIND \"::\" ^| FIND /V \"FIND\"\u0027) DO (\nSET /A Offset\u003d0x%%A\nSET Line_!offset!\u003d%%B\n)\n\nSET Empty_Line\u003d 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nSET /A Max_loop\u003d0x%Line_16:~13,2%%Line_16:~10,2%*512\n\n\n\nFOR /L %%A IN (0,16,%Max_loop%) DO (\nIF DEFINED Line_%%A (\nECHO !Line_%%A!\u003e\u003eunderfloppy.txt\n) ELSE (\nECHO !Empty_Line!\u003e\u003eunderfloppy.txt\n)\n)\ndir underfloppy.txt\n```\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)  \nWonko  \n\nP.S.: Found what may be part of the problem, corrected the batch.   \n"
    },
    {
      "id": "186282",
      "timestamp": "2014-08-01T21:43:54+00:00",
      "author": "cdob",
      "content": "\u003e I am not sure to understand the reason/need/whatever for 64 sectors/cluster. ![:unsure:](https://reboot.pro/public/style_emoticons/default/unsure.png)\nThe idea was to shrink the FAT table.  \nAnd I\u0027m at testing mode: what works against any specification?  \nBootmgr reads a FAT12 128 sectors/cluster floppy. Finally I\u0027m using 32 sectors/cluster.  \n\nFiles at USB:  \n\u003e \\\\boot\\\\bootmgr  \n\u003e \\\\boot\\\\boot.sdi  \n\u003e \\\\boot\\\\bcd_PE8_x86  \n\u003e \\\\boot\\\\bcd_PE81SE_x64  \n\u003e \\\\sources\\\\boot8x86.wim  \n\u003e \\\\sources\\\\BOOT81SE_x64.wim\nNo floppy image anymore.  \n\n\u003cbr /\u003e\n\nCreate a 360kb floppy with a 336kb file \\\\boot\\\\bcd on the fly:  \n\n```\ntitle BIOS: Windows Win8.1 SE x64 \\nread /boot/bootmgr from USB disk\\nand read bcd file from USB disk \n#read /boot/bootmgr from USB disk\ncat --length\u003d0 /boot/bootmgr \u003e nul || find --set-root --devices\u003dh /boot/bootmgr\nchainloader /boot/bootmgr\nmap --mem --heads\u003d2 --sectors-per-track\u003d9 (md)0x6000+720 (fd0)\nmap --hook\n#create a 360kb floppy with a 336kb file \\boot\\bcd\nwrite (fd0) \\xEB\\x3C\\x90\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x20\\x01\\x00\\x01\\x10\\x00\\xD0\\x02\\xFD\\x01\\x00\\x09\\x00\\x02\nwrite --offset\u003d0x1FE (fd0) \\x55\\xAA\\xFD\\xFF\\xFF\\xFF\\x4F\\x00\\x05\\x60\\x00\\x07\\x80\\x00\\x09\\xA0\\x00\\x0B\nwrite --offset\u003d0x210 (fd0) \\xC0\\x00\\x0D\\xE0\\x00\\x0F\\x00\\x01\\x11\\x20\\x01\\x13\\x40\\x01\\x15\\x60\\x01\\x17\\xF0\\xFF\nwrite --offset\u003d0x400 (fd0) BOOT\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\nwrite --offset\u003d0x600 (fd0) .\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\nwrite --offset\u003d0x620 (fd0) ..\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x10\nwrite --offset\u003d0x640 (fd0) BCD\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x40\\x05\n#\n#write --offset\u003d0x59FFD (fd0) END\n#cat --hex --skip\u003d0x59F00 (fd0)+720\n#pause\n#\ndd if\u003d(bd)/boot/bcd_PE81SE_x64 of\u003d(fd0)/boot/bcd\nroot (fd0)\nboot\n```\n\n\u003cbr /\u003e\n\n"
    },
    {
      "id": "186284",
      "timestamp": "2014-08-02T09:40:20+00:00",
      "author": "Wonko the Sane",
      "content": "I thought that the 262,144 bytes BCD was \"exactly what needed\" ![:unsure:](https://reboot.pro/public/style_emoticons/default/unsure.png)  \nIs the Windows 8 \\\\boot\\\\BCD larger than 262,144 bytes?  \n\nI know that two bytes are two bytes, but you should be able to have E9 or EB instead of EB3C90.  \n[http://www.msfn.org/...mages/?p\u003d987482](http://www.msfn.org/board/topic/152097-on-superfloppies-and-their-images/?p\u003d987482 \"External link\")  \nand following.   \nYou can also remove the Magic Bytes ![:w00t:](https://reboot.pro/public/style_emoticons/default/w00t.gif) (though it has to be tested with BOOTMGR if it works) :  \n7-zip won\u0027t like it, but IMDISK and grub4dos have seemingly no issues with this.  \n\nIt remains \\*strange\\* that one needs to force the 2 sides/9 sectors (which is otherwise the \"standard\" geometry for a 360 Kb floppy), possibly it is a little \"quirk\" in grub4dos.  \n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)  \nWonko   \n"
    },
    {
      "id": "186285",
      "timestamp": "2014-08-02T12:50:48+00:00",
      "author": "cdob",
      "content": "\u003e I thought that the 262,144 bytes BCD was \"exactly what needed\" ![:unsure:](https://reboot.pro/public/style_emoticons/default/unsure.png)  \n\u003e Is the Windows 8 \\\\boot\\\\BCD larger than 262,144 bytes?\nYes, Windows 8 \\\\boot\\\\BCD file size is 262,144 bytes.  \nIt\u0027s a database with some obsolete data: reg load and reg save result to a file bcd 16,384 bytes  \n\nGiven a file system file size bcd 336kb:  \nInsert a 262,144 bytes BCD, following are zeros: bootmgr reads the file bcd  \nInsert a 16,384 bytes BCD, following are zeros: bootmgr reads the file bcd  \n\nAny bcd file size up to 336kb works at given conditions.  \nA 360kb floppy was the smallest commonly used floppy matching windows 8 default bcd size.  \n\n\u003e I know that two bytes are two bytes, but you should be able to have E9 or EB instead of EB3C90.  \n\u003e\n\u003e You can also remove the Magic Bytes ![:w00t:](https://reboot.pro/public/style_emoticons/default/w00t.gif) (though it has to be tested with BOOTMGR if it works) :  \n\u003e 7-zip won\u0027t like it, but IMDISK and grub4dos have seemingly no issues with this.\nThe virtual floppy written to a file:  \ndd if\u003d(fd0) of\u003d(bd)/boot/temp.ima  \n\nEB 00 90 : bootmgr does find the file \\\\boot\\\\bcd; 7-zip dosn\u0027t open the image  \nEB 00 00 : bootmgr dosn\u0027t find the file \\\\boot\\\\bcd  \nE9 00 00 : bootmgr does find the file \\\\boot\\\\bcd; 7-zip dosn\u0027t open the image  \n\nMagic bytes 55 AA reomved: bootmgr does find the file \\\\boot\\\\bcd; 7-zip dosn\u0027t open the image  \n\nOverall I like a general working approach, this includes 7-zip: a fast possibility to read the image.  \nHence I like to keep EB 3C 90; 55 AA.  \n\n\u003e It remains \\*strange\\* that one needs to force the 2 sides/9 sectors (which is otherwise the \"standard\" geometry for a 360 Kb floppy), possibly it is a little \"quirk\" in grub4dos.\nNo, sides and sectors are not required. Grub4dos assumes this geometry for a 360 Kb floppy image. I like to set this explicitly.  \nAnd another special, yes \u0027boot\u0027 is not required here. Makes menu.lst more humanly readable.  \n\nI\u0027m unsure about the memory drive (md). I recogniced this the first time [http://reboot.pro/to...ge-2#entry77011](http://reboot.pro/topic/8804-firadisk-latest-00130/page-2#entry77011 \"\")  \n(fd0) contains zero only after machine boot, cold boot and reboot. Bug or feature?  \nDo I have to zero (fd0) myself?   \n"
    },
    {
      "id": "186287",
      "timestamp": "2014-08-02T16:08:58+00:00",
      "author": "Wonko the Sane",
      "content": "Yep, the EB3C90 replaced by E90000 and the 55AA removal was just for the fun of it.\n\nIt is however a good confirmation of theories exposed in the mentioned post, some tools (namely FreeDOS and 7-zip, though I do understand how a \"generic\" archive manager might need to detect those in order to use the right parser) are \"more royalist than the king\".\n\nI highly suspect that the situation of the (md) drive will be (to say the least), \"shaky\" and assuming it will be all 00\u0027s before you write to it is prone to errors.\n\nThe full image \"as is\" (i.e. with the \\\\boot\\\\BCD made of 00\u0027s) will gzip compress to less than 600 bytes, so all in all I would still find \"safer\" using an image mapped to the floppy and dd the \"real\" BCD to it..\n\nBy calling it underfloppy, I was thinking of testing a few \"non existing in real world\" floppy formats, using a \"tweaked/reduced\" \\\\boot\\\\BCD\\\\ we should get away with an image made of:\n\n+1 bootsector\n\n+1 Fat table\n\n+1 Root directory with the \\\\boot\\\\ dir entry\n\n+1 with the \\\\. \\\\.. and \\\\boot\\\\BCD file entry\n\n+ from 16,384/512\u003d32 to 262,144/512\u003d512 sectors for the actual space used by the BCD\n\nOnce gzipped this image might become smaller than 512 bytes and thus able to be be stored in a \"single sector\" within \\*some\\* file.\n\nOn the other hand, in practice, what you put together is essentially a 4 sectors \"header\" that can be dded just like the actual BCD, and I wouldn\u0027t find (even if I count each and every single byte :wink:) it such a waste of space to have this header as a self standing file on the USB stick, not even if you added this header to each of the various BCD\u0027s.\n\nAs a matter of fact (hint :wink:) it seems to me that a \"standard\" \\\\boot\\\\BCD has a number of \"unused\" sectors between the first sector (the one with \"regf\" incipit) and the one with the \"hbin\" incipit that is where the data actually is.\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\nP.S.: For no apparent reason, a suitable gzipped to one sector image is attached.  \n\n#### Attached Files {#attach_wrap}\n\n* [![Attached File](http://reboot.pro/public/style_extra/mime_types/zip.gif)](http://reboot.pro/index.php?s\u003da828ca2cf00f14747b386e0dce87d308\u0026app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d15004 \"Download attachment\") [**One_sector.ima.zip**](http://reboot.pro/index.php?s\u003da828ca2cf00f14747b386e0dce87d308\u0026app\u003dcore\u0026module\u003dattach\u0026section\u003dattach\u0026attach_id\u003d15004 \"Download attachment\") **474bytes** 524 downloads\n\n"
    },
    {
      "id": "186424",
      "timestamp": "2014-08-11T09:00:00+00:00",
      "author": "milindsmart",
      "content": "Why not use wimboot like i\u0027ve done in the [other thread](http://reboot.pro/topic/19516-hack-bootmgr-to-boot-windows-in-bios-to-gpt/page-3 \"\")? on the fly spoofing disk is the best.\n\n**Edited by milindsmart, 11 August 2014 - 09:00 AM.**\n"
    },
    {
      "id": "187301",
      "timestamp": "2014-09-10T14:09:46+00:00",
      "author": "milindsmart",
      "content": "\u003e Will do some further experiments with BOOTMGR on hard disk devices and \\\\boot\\\\BCD \\*somewhere\\* else but it seems like the established root is only ***part*** of the story. ![:dubbio:](https://reboot.pro/public/style_emoticons/default/dubbio.gif)\n\n\u003e The \"root (fd0)\" is importand.  \n\u003e Without \"root (fd0)\": bootmgr searches and reads \\\\boot\\\\BCD at USB drive. If the file is missing, there is a error message \\\\boot\\\\BCD missing or corrupt.\n\nAny resolution for this contradiction? @cdob, can you do similar experiments like Wonko and map all the cases? If you have time, that is, else I\u0027ll eventually get around to it myself.   \n"
    },
    {
      "id": "187305",
      "timestamp": "2014-09-10T15:27:54+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e Any resolution for this contradiction? @cdob, can you do similar experiments like Wonko and map all the cases? If you have time, that is, else I\u0027ll eventually get around to it myself.\n\nThere is not IMHO any \"contradiction\".\n\nThere are two different test scenarios.\n\n1. **cdob** has done a test in a setup booted from a USB device (stick or hard disk) that is (hd0) and a \"virtual\" grub4dos floppy (fd0)\n2. I did a test (in a VM) with only two floppy disks (fd0) and (fd1) where the BOOTMGR and \\\\boot\\\\BCD are on (fd1)\n\nAnd there are two different results:\n\n1. Results of **cdob**\u0027s experiment are that if root to (fd0) is not established the chainloaded BOOTMGR on (hdx,y) cannot find a \\\\boot\\\\BCD on (fd0)\n2. Results of my experiment are that even if root to (fd0) is not established, the chainloaded BOOTMGR on (fd1) - ++once remapped to (fd0)++ - tries to find \\\\boot\\\\BCD on (fd0) and succeeds, BUT a chainloaded BOOTMGR on (fd1) cannot find a \\\\boot\\\\BCD on (fd1) even if the root to (fd1) is established.\n\nThese result are thus not contradicting one another, they are IMHO complementary.\n\nThe \"net\" sum of this is that \\*anyway\\* the BOOTMGR will find a \\\\boot\\\\BCD on the floppy ++only++ if the floppy is (fd0) and establishing the root to (fd0) is only needed if the chainloaded BOOTMGR does not also resides on (fd0).\n\nThis is also seemingly not contradicting your experiment with the hard disk volume where the disk containing the volume \\*needs\\* to be mapped as (hd0).\n\nIn other words *it seems* like there is a need for the \\\\boot\\\\BCD to be residing on \"first floppy device\" (fd0) or in a volume on \"first hard disk device (hd0,*n*) AND in case the currently chainloaded BOOTMGR is not residing on the same volume, to establish root to that volume.\n\nStill, more tests in different scenarios are needed to confirm the behaviour.\n\n![:duff:](https://reboot.pro/public/style_emoticons/default/duff.gif)\n\nWonko\n\n"
    }
  ]
}