{
  "id": "20082",
  "title": "BADUSB exploit, can it be usefull to make better compatible usboot?",
  "isPinned": false,
  "isFirstTopic": false,
  "isLocked": false,
  "tags": [],
  "forumNotes": [
    {
      "id": "187895",
      "timestamp": "2014-10-07T08:42:58+00:00",
      "author": "matx",
      "content": "[https://github.com/a...audill/Psychson](https://github.com/adamcaudill/Psychson \"External link\")\n\nIt was published recently:\n\n[http://www.securityw...-code-published](http://www.securityweek.com/badusb-code-published \"External link\")\n\n"
    },
    {
      "id": "187897",
      "timestamp": "2014-10-07T09:50:15+00:00",
      "author": "Wonko the Sane",
      "content": "\u003e Quote  \n\u003e BADUSB exploit, can it be usefull to make better compatible usboot?\nNo.  \nJust for the record, unlike how it has been senselessly publicized, it is not a \"breakthrough\" of some kind, and it is not properly an \"exploit\", see here:  \n[https://adamcaudill....hics-of-badusb/](https://adamcaudill.com/2014/10/03/on-the-ethics-of-badusb/ \"External link\")  \nthe base concept is very simple.  \nYou have a device (the controller on the USB stick) that is to all effects a tiny microprocessor that executes a (limited) set of instructions (the firmware).  \nOnce you decode/reverse engineer the instruction set, you can write a new firmware that can do different things.  \nWhat was released is a (nice BTW) PoC (Proof of Concept) to alert about possible risks that are \"implied\" in the USB communication protocol.  \nThe released code does not anything \"malicious\" and is limited to a given Phison controller as a patch to an existing firmware.  \n\nWhat may be of use (still limited to the given Phison controller, and possibly to the whole \"family\" of similar Phison controllers) are the tools that were released to apply the patches/modifications.  \n\nBut from having the tools to apply/modify a patch (BTW tools that are also in themselves rather simple and not \"rocket science\") to actually write an useful for booting patch there is a looooong way.  \n\nImagine that you are stuck at the DOS prompt and you have DEBUG running ![:w00t:](http://reboot.pro/public/style_emoticons/default/w00t.gif).  \nYour mission, should you accept it, is to write a better Operating System with only that. ![:ph34r:](http://reboot.pro/public/style_emoticons/default/scared9.gif)  \n\nThe reason why it is interesting is actually the reason why it was released, to draw attention to the fact that even the most stupid thingy you have on your keychain is programmable and that there should be a way to make sure that it is running an appropriate program/firmware (through validation).  \n\nThough seemingly unrelated, these experiments:  \n[http://picframe.spri...x.php/Main_Page](http://picframe.spritesserver.nl/wiki/index.php/Main_Page \"External link\")  \n[http://spritesmods.com/?art\u003dhddhack](http://spritesmods.com/?art\u003dhddhack \"External link\")  \n[https://code.google....rmware-mod-kit/](https://code.google.com/p/firmware-mod-kit/ \"External link\")  \nhave the same kind of implications.  \n\n![:duff:](http://reboot.pro/public/style_emoticons/default/duff.gif)  \nWonko   \n"
    },
    {
      "id": "187899",
      "timestamp": "2014-10-07T10:44:12+00:00",
      "author": "Brito",
      "content": "Interesting read. Thanks for sharing. ![:cheers:](http://reboot.pro/public/style_emoticons/default/cheers.gif)\n\n"
    }
  ]
}